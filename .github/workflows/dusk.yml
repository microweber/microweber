name: Dusk
on: [ push ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dusk:
    runs-on: ubuntu-latest
    env:
      COMPOSER_ALLOW_SUPERUSER: 1
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        php-versions: [ '8.3' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, mysql, gd, curl, zip, sqlite, xml, intl, bcmath, json, zlib, openssl, iconv
          coverage: xdebug
          # tools: phpunit #optional
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Npm install
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - run: npm install
      - run: npm run build
      - name: List all artisan commands
        run: php artisan list
      - name: Run PHPUnit
        run: php artisan test
      - name: Remove screenshot layout test
        run: |
          rm -f userfiles/templates/big/src/tests/Browser/BigScreenshotLayoutsTest.php
      - name: Clear bootstrap cache
        run: php artisan optimize:clear
      - name: Copy .env.testing to .env
        run: cp .env.testing .env
      - name: Run Laravel Server
        #run: php artisan serve-test --env=testing > /dev/null 2>&1 &
        #run: APP_ENV=testing && php -d variables_order=EGPCS -S 127.0.0.1:8000 > /dev/null 2>&1 &
       # run: APP_ENV=testing && php -d variables_order=EGPCS -S 127.0.0.1:8000 > /home/runner/work/microweber/microweber/storage/logs/serve.log 2>&1 &
        run: APP_ENV=testing && php artisan serve-test-code-coverage --ansi --env=testing --no-interaction --quiet &
      - name: Run Dusk Tests
        run: |
          chmod -R 0755 vendor/laravel/dusk/bin/
          php artisan dusk
      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: tests/Browser/screenshots
      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: console
          path: tests/Browser/console
      - name: Upload Laravel Storage Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: storage-logs
          path: storage/logs
      - name: Upload Laravel config
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: config
          path: config
