{"version":3,"file":"editor.js","sources":["webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/bar.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/api.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/helpers.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/tools.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/core.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/controllers.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/add.controller.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/interaction-controls.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/i18n.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/liveeditmode.js"],"sourcesContent":["(function(){\n    var Bar = function(options) {\n\n        options = options || {};\n        var defaults = {\n            document: document,\n            register: null\n        };\n        this.settings = $.extend({}, defaults, options);\n        this.document = this.settings.document || document;\n\n        this.register = [];\n\n        this.delimiter = function(){\n            var el = this.document.createElement('span');\n            el.className = 'mw-bar-delimiter';\n            return el;\n        };\n\n        this.create = function(){\n            this.bar = this.document.createElement('div');\n            this.bar.className = 'mw-bar';\n            this.element = mw.element(this.bar);\n        };\n\n        this.rows = [];\n\n        this.createRow = function () {\n            var row = this.document.createElement('div');\n            row.className = 'mw-bar-row';\n            this.rows.push(row);\n            this.bar.appendChild(row);\n        };\n        this.nativeElement = function (node) {\n            if(!node) return;\n            return node.node ? node.node : node;\n        };\n\n        this.add = function (what, row) {\n            row = row || 0;\n            if(!this.rows[row]) {\n                return;\n            }\n            if(what === '|') {\n                this.rows[row].appendChild(this.delimiter());\n            } else if(typeof what === 'function') {\n                this.rows[row].appendChild(what().node);\n            } else {\n                var el = this.nativeElement(what);\n                if(el) {\n                    el.classList.add('mw-bar-control-item')\n                    this.rows[row].appendChild(el);\n                }\n\n            }\n        };\n\n        this.init = function(){\n            this.create();\n        };\n        this.init();\n    };\n    mw.bar = function(options){\n        return new Bar(options);\n    };\n})();\n","\n\n\n\n\n\n\n\n\nMWEditor.api = function (scope) {\n    return {\n        getSelection: function () {\n            return scope.getSelection();\n        },\n        eachRange: function (c){\n            var sel = scope.getSelection();\n            if(sel.rangeCount && c) {\n                for(var i = 0; i < sel.rangeCount; i++) {\n                    var range = sel.getRangeAt(i);\n                    c.call(scope, range);\n                }\n            }\n        },\n        getSelectionHTML: function (){\n            var sel = scope.getSelection();\n            var html = document.createElement('div');\n            if(sel.rangeCount) {\n                var frag = sel.getRangeAt(0).cloneContents();\n                while (frag.firstChild) {\n                    html.append(frag.firstChild);\n                }\n            }\n            return html.innerHTML;\n        },\n        cleanWord: function (content) {\n            var wrapListRoots = function () {\n                var all = scope.$editArea.querySelectorAll('li[data-level]'), i = 0, has = false;\n                for (; i < all.length; i++) {\n                    var parent = all[i].parentElement.nodeName;\n                    if (parent !== 'OL' && parent !== 'UL') {\n                        has = true;\n                        var group = mw.$([]), curr = all[i];\n                        while (!!curr && curr.nodeName === 'LI') {\n                            group.push(curr);\n                            curr = curr.nextElementSibling;\n                        }\n                        var el = document.createElement(all[i].getAttribute('data-type') === 'ul' ? 'ul' : 'ol');\n                        el.className = 'element';\n                        group.wrapAll(el);\n                        break;\n                    }\n                }\n                if (has) return wrapListRoots();\n            };\n\n            var buildWordList = function (lists, count) {\n                var i, check = false, max = 0;\n                count = count || 0;\n                if (count === 0) {\n                    for (i in lists) {\n                        var curr = lists[i];\n                        if (!curr.nodeName || curr.nodeType !== 1) continue;\n                        var $curr = mw.$(curr);\n                        lists[i] = mw.tools.setTag(curr, 'li');\n                    }\n                }\n\n                lists.each(function () {\n                    var num = this.textContent.trim().split('.')[0], check = parseInt(num, 10);\n                    var curr = mw.$(this);\n                    if (!curr.attr('data-type')) {\n                        if (!isNaN(check) && num > 0) {\n                            this.innerHTML = this.innerHTML.replace(num + '.', '');\n                            curr.attr('data-type', 'ol');\n                        }\n                        else {\n                            curr.attr('data-type', 'ul');\n                        }\n                    }\n                    if (!this.__done) {\n                        this.__done = false;\n                        var level = parseInt($(this).attr('data-level'));\n                        if (!isNaN(level) && level > max) {\n                            max = level;\n                        }\n                        if (!isNaN(level) && level > 1) {\n                            var prev = this.previousElementSibling;\n                            if (!!prev && prev.nodeName === 'LI') {\n                                var type = this.getAttribute('data-type');\n                                var wrap = document.createElement(type === 'ul' ? 'ul' : 'ol');\n                                wrap.setAttribute('data-level', level);\n                                mw.$(wrap).append(this);\n                                mw.$(wrap).appendTo(prev);\n                                check = true;\n                            }\n                            else if (!!prev && (prev.nodeName === 'UL' || prev.nodeName === 'OL')) {\n                                var where = mw.$('li[data-level=\"' + level + '\"]', prev);\n                                if (where.length > 0) {\n                                    where.after(this);\n                                    check = true;\n                                }\n                                else {\n                                    var type = this.getAttribute('data-type');\n                                    var wrap = document.createElement(type === 'ul' ? 'ul' : 'ol');\n                                    wrap.setAttribute('data-level', level)\n                                    mw.$(wrap).append(this);\n                                    mw.$(wrap).appendTo($('li:last', prev))\n                                    check = true;\n                                }\n                            }\n                            else if (!prev && (this.parentNode.nodeName !== 'UL' && this.parentNode.nodeName !== 'OL')) {\n                                var $curr = mw.$([this]), curr = this;\n                                while ($(curr).next('li[data-level=\"' + level + '\"]').length > 0) {\n                                    $curr.push($(curr).next('li[data-level=\"' + level + '\"]')[0]);\n                                    curr = mw.$(curr).next('li[data-level=\"' + level + '\"]')[0];\n                                }\n                                $curr.wrapAll($curr.eq(0).attr('data-type') === 'ul' ? '<ul></ul>' : '<ol></ol>')\n                                check = true;\n                            }\n                        }\n                    }\n                });\n\n                mw.$(\"ul[data-level!='1'], ol[data-level!='1']\").each(function () {\n                    var level = parseInt($(this).attr('data-level'));\n                    if (!!this.previousElementSibling) {\n                        var plevel = parseInt($(this.previousElementSibling).attr('data-level'));\n                        if (level > plevel) {\n                            mw.$('li:last', this.previousElementSibling).append(this)\n                            check = true;\n                        }\n                    }\n                });\n                if (count === 0) {\n                    setTimeout(function () {\n                        buildWordList($('li[data-level]'), 1);\n                        wrapListRoots();\n                    }, 1);\n                }\n                return lists;\n            };\n\n            var word_listitem_get_level = function (item) {\n                var msspl = item.getAttribute('style').split('mso-list');\n                if (msspl.length > 1) {\n                    var mssplitems = msspl[1].split(' ');\n                    for (var i = 0; i < mssplitems.length; i++) {\n                        if (mssplitems[i].indexOf('level') !== -1) {\n                            return parseInt(mssplitems[i].split('level')[1], 10);\n                        }\n                    }\n                }\n            };\n\n            var isWordHtml = function (html) {\n                return html.indexOf('urn:schemas-microsoft-com:office:word') !== -1;\n            };\n\n            var _cleanWordList = function (html) {\n\n                if (!isWordHtml(html)) return html;\n                if (html.indexOf('</body>') !== -1) {\n                    html = html.split('</body>')[0];\n                }\n                var parser = mw.tools.parseHtml(html).body;\n\n                var lists = mw.$('[style*=\"mso-list:\"]', parser);\n                lists.each(function () {\n                    var level = word_listitem_get_level(this);\n                    if (!!level) {\n                        this.setAttribute('data-level', level)\n                        this.setAttribute('class', 'level-' + level)\n                    }\n\n                });\n\n                mw.$('[style]', parser).removeAttr('style');\n\n                if (lists.length > 0) {\n                    lists = buildWordList(lists);\n                    var start = mw.$([]);\n                    mw.$('li', parser).each(function () {\n                        this.innerHTML = this.innerHTML\n                            .replace(/�/g, '')/* Not a dot */\n                            .replace(new RegExp(String.fromCharCode(160), \"g\"), \"\")\n                            .replace(/&nbsp;/gi, '')\n                            .replace(/\\�/g, '')\n                            .replace(/<\\/?span[^>]*>/g, \"\")\n                            .replace('�', '');\n                    });\n                }\n                return parser.innerHTML;\n            };\n\n            var cleanWord = function (html) {\n                html = _cleanWordList(html);\n                html = html.replace(/<td([^>]*)>/gi, '<td>');\n                html = html.replace(/<table([^>]*)>/gi, '<table cellspacing=\"0\" cellpadding=\"0\" border=\"1\" style=\"width:100%;\" width=\"100%\" class=\"element\">');\n                html = html.replace(/<o:p>\\s*<\\/o:p>/g, '');\n                html = html.replace(/<o:p>[\\s\\S]*?<\\/o:p>/g, '&nbsp;');\n                html = html.replace(/\\s*mso-[^:]+:[^;\"]+;?/gi, '');\n                html = html.replace(/\\s*MARGIN: 0cm 0cm 0pt\\s*;/gi, '');\n                html = html.replace(/\\s*MARGIN: 0cm 0cm 0pt\\s*\"/gi, \"\\\"\");\n                html = html.replace(/\\s*TEXT-INDENT: 0cm\\s*;/gi, '');\n                html = html.replace(/\\s*TEXT-INDENT: 0cm\\s*\"/gi, \"\\\"\");\n                html = html.replace(/\\s*TEXT-ALIGN: [^\\s;]+;?\"/gi, \"\\\"\");\n                html = html.replace(/\\s*PAGE-BREAK-BEFORE: [^\\s;]+;?\"/gi, \"\\\"\");\n                html = html.replace(/\\s*FONT-VARIANT: [^\\s;]+;?\"/gi, \"\\\"\");\n                html = html.replace(/\\s*tab-stops:[^;\"]*;?/gi, '');\n                html = html.replace(/\\s*tab-stops:[^\"]*/gi, '');\n                html = html.replace(/\\s*face=\"[^\"]*\"/gi, '');\n                html = html.replace(/\\s*face=[^ >]*/gi, '');\n                html = html.replace(/\\s*FONT-FAMILY:[^;\"]*;?/gi, '');\n                html = html.replace(/<(\\w[^>]*) class=([^ |>]*)([^>]*)/gi, \"<$1$3\");\n                html = html.replace(/<STYLE[^>]*>[\\s\\S]*?<\\/STYLE[^>]*>/gi, '');\n                html = html.replace(/<(?:META|LINK)[^>]*>\\s*/gi, '');\n                html = html.replace(/\\s*style=\"\\s*\"/gi, '');\n                html = html.replace(/<SPAN\\s*[^>]*>\\s*&nbsp;\\s*<\\/SPAN>/gi, '&nbsp;');\n                html = html.replace(/<SPAN\\s*[^>]*><\\/SPAN>/gi, '');\n                html = html.replace(/<(\\w[^>]*) lang=([^ |>]*)([^>]*)/gi, \"<$1$3\");\n                html = html.replace(/<SPAN\\s*>([\\s\\S]*?)<\\/SPAN>/gi, '$1');\n                html = html.replace(/<FONT\\s*>([\\s\\S]*?)<\\/FONT>/gi, '$1');\n                html = html.replace(/<\\\\?\\?xml[^>]*>/gi, '');\n                html = html.replace(/<w:[^>]*>[\\s\\S]*?<\\/w:[^>]*>/gi, '');\n                html = html.replace(/<\\/?\\w+:[^>]*>/gi, '');\n                html = html.replace(/<\\!--[\\s\\S]*?-->/g, '');\n                html = html.replace(/<(U|I|STRIKE)>&nbsp;<\\/\\1>/g, '&nbsp;');\n                html = html.replace(/<H\\d>\\s*<\\/H\\d>/gi, '');\n                html = html.replace(/<(\\w+)[^>]*\\sstyle=\"[^\"]*DISPLAY\\s?:\\s?none[\\s\\S]*?<\\/\\1>/ig, '');\n                html = html.replace(/<(\\w[^>]*) language=([^ |>]*)([^>]*)/gi, \"<$1$3\");\n                html = html.replace(/<(\\w[^>]*) onmouseover=\"([^\\\"]*)\"([^>]*)/gi, \"<$1$3\");\n                html = html.replace(/<(\\w[^>]*) onmouseout=\"([^\\\"]*)\"([^>]*)/gi, \"<$1$3\");\n                html = html.replace(/<H(\\d)([^>]*)>/gi, '<h$1>');\n                html = html.replace(/<font size=2>(.*)<\\/font>/gi, '$1');\n                html = html.replace(/<font size=3>(.*)<\\/font>/gi, '$1');\n                html = html.replace(/<a name=.*>(.*)<\\/a>/gi, '$1');\n                html = html.replace(/<H1([^>]*)>/gi, '<H2$1>');\n                html = html.replace(/<\\/H1\\d>/gi, '<\\/H2>');\n                //html = html.replace(/<span>/gi, '$1');\n                html = html.replace(/<\\/span\\d>/gi, '');\n                html = html.replace(/<(H\\d)><FONT[^>]*>([\\s\\S]*?)<\\/FONT><\\/\\1>/gi, '<$1>$2<\\/$1>');\n                html = html.replace(/<(H\\d)><EM>([\\s\\S]*?)<\\/EM><\\/\\1>/gi, '<$1>$2<\\/$1>');\n                return html;\n            };\n\n            var cleanTables = function (root) {\n                var toRemove = \"tbody > *:not(tr), thead > *:not(tr), tr > *:not(td)\",\n                    all = root.querySelectorAll(toRemove),\n                    l = all.length,\n                    i = 0;\n                for (; i < l; i++) {\n                    mw.$(all[i]).remove();\n                }\n                var tables = root.querySelectorAll('table'),\n                    l = tables.length,\n                    i = 0;\n                for (; i < l; i++) {\n                    var item = tables[i],\n                        l = item.children.length,\n                        i = 0;\n                    for (; i < l; i++) {\n                        var item = item.children[i];\n                        if (typeof item !== 'undefined' && item.nodeType !== 3) {\n                            var name = item.nodeName.toLowerCase();\n                            var posibles = \"thead tfoot tr tbody col colgroup\";\n                            if (!posibles.contains(name)) {\n                                mw.$(item).remove();\n                            }\n                        }\n                    }\n                }\n            };\n            return cleanWord(content)\n\n        },\n        action: function(targetParent, func) {\n            scope.state.record({\n                target: targetParent,\n                value: targetParent.innerHTML\n            });\n            func.call();\n            setTimeout(function(){\n                scope.state.record({\n                    target: targetParent,\n                    value: targetParent.innerHTML\n                });\n            }, 78);\n        },\n        elementNode: function (c) {\n            if( !c || !c.parentNode || c.parentNode === document.body ){\n                return null;\n            }\n            try {   /* Firefox returns wrong target (div) when you click on a spin-button */\n                if (typeof c.querySelector === 'function') {\n                    return c;\n                }\n                else {\n                    return scope.api.elementNode(c.parentNode);\n                }\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        fontFamily: function (font_name, sel) {\n            var range = (sel || scope.getSelection()).getRangeAt(0);\n            scope.api.execCommand(\"styleWithCSS\", null, true);\n            if (range.collapsed) {\n                var el = scope.api.elementNode(range.commonAncestorContainer);\n                scope.api.select_all(el);\n                scope.api.execCommand('fontName', null, font_name);\n                range.collapse();\n            }\n            else {\n                scope.api.execCommand('fontName', null, font_name);\n            }\n        },\n        selectAll: function (el) {\n            var range = scope.document.createRange();\n            range.selectNodeContents(el);\n            var selection = scope.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n        },\n        selectElement: function (el) {\n            var range = scope.document.createRange();\n            try {\n                range.selectNode(el);\n                var selection = scope.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            } catch (e) {\n\n            }\n        },\n        isSelectionEditable: function (sel) {\n            try {\n                var node = (sel || scope.getSelection()).focusNode;\n                if (node === null) {\n                    return false;\n                }\n                if (node.nodeType === 1) {\n                    return node.isContentEditable;\n                }\n                else {\n                    return node.parentNode.isContentEditable;\n                }\n            }\n            catch (e) {\n                return false;\n            }\n        },\n        isSafeMode: function(el) {\n            if (!el) {\n                var node = scope.getSelection().focusNode;\n                el = scope.api.elementNode(node);\n            }\n            var hasSafe = mw.tools.hasAnyOfClassesOnNodeOrParent(el, ['safe-mode']);\n            var regInsafe = mw.tools.parentsOrCurrentOrderMatchOrNone(el, ['regular-mode', 'safe-mode']);\n            return hasSafe && !regInsafe;\n        },\n        _execCommandCustom: {\n            removeFormat: function (cmd, def, val) {\n                scope.actionWindow.document.execCommand(cmd, def, val);\n                var sel = scope.getSelection();\n                var r = sel.getRangeAt(0);\n                var common = r.commonAncestorContainer;\n                var all = common.querySelectorAll('*'), l = all.length, i = 0;\n                for ( ; i < l; i++ ) {\n                    var el = all[i];\n                    if (typeof sel !== 'undefined' && sel.containsNode(el, true)) {\n                        all[i].removeAttribute('style');\n                    }\n                }\n            }\n        },\n        execCommand: function (cmd, def, val) {\n             scope.actionWindow.document.execCommand('styleWithCss', 'false', false);\n            var sel = scope.getSelection();\n            try {  // 0x80004005\n                 if (scope.actionWindow.document.queryCommandSupported(cmd) && scope.api.isSelectionEditable()) {\n                     def = def || false;\n                    val = val || false;\n                    if (sel.rangeCount > 0) {\n                         var node = scope.api.elementNode(sel.focusNode);\n                        scope.api.action(mw.tools.firstBlockLevel(node), function () {\n                             scope.actionWindow.document.execCommand(cmd, def, val);\n                            mw.$(scope.settings.iframeAreaSelector, scope.actionWindow.document).trigger('execCommand');\n                            mw.$(scope).trigger('execCommand');\n                        });\n                    }\n                }\n            }\n            catch (e) {\n            }\n        },\n        _fontSize: function (size, unit) {\n            unit = unit || 'px';\n            var fontSize = $('<span/>', {\n                'text': scope.getSelection()\n            }).css('font-size', size + unit).prop('outerHTML');\n            scope.api.execCommand('insertHTML', false, fontSize);\n        },\n        lineHeight: function (size) {\n\n            if (scope.api.isSelectionEditable()) {\n                var sel = scope.getSelection();\n                var el = scope.api.elementNode(sel.focusNode)\n                scope.api.action(mw.tools.firstBlockLevel(el), function () {\n                     el.style.lineHeight = size\n                });\n            }\n\n        },\n        fontSize: function (size) {\n            var sel = scope.getSelection();\n            if (sel.isCollapsed) {\n                scope.api.select_all(scope.api.elementNode(sel.focusNode));\n                sel = scope.getSelection();\n            }\n            var range = sel.getRangeAt(0),\n                common = scope.api.elementNode(range.commonAncestorContainer);\n            var nodrop_state = mw.tools.parentsOrCurrentOrderMatchOrOnlyFirstOrNone(common, ['allow-drop', 'nodrop']);\n            if (scope.api.isSelectionEditable() && nodrop_state) {\n                scope.api._fontSize(size, 'px');\n            }\n        },\n        saveSelection: function () {\n            var sel = scope.getSelection();\n            scope.api.savedSelection = {\n                selection: sel,\n                range: sel.getRangeAt(0),\n                element: mw.$(scope.api.elementNode(sel.getRangeAt(0).commonAncestorContainer))\n            };\n        },\n        restoreSelection: function () {\n            if (scope.api.savedSelection) {\n                var sel = scope.getSelection();\n                scope.api.savedSelection.element.attr(\"contenteditable\", \"true\");\n                scope.api.savedSelection.element.focus();\n                scope.api.savedSelection.selection.removeAllRanges();\n                scope.api.savedSelection.selection.addRange(scope.api.savedSelection.range);\n            }\n        },\n        _cleaner: document.createElement('div'),\n        cleanHTML: function(html) {\n             this._cleaner.innerHTML = html;\n            var elements = Array.prototype.slice.call(this._cleaner.querySelectorAll('iframe,script,noscript'));\n            while (elements.length) {\n                elements[0].remove();\n                elements.shift();\n            }\n            return this._cleaner.innerHTML;\n        },\n        insertHTML: function(html) {\n            console.log(this.cleanHTML(html))\n            return scope.api.execCommand('insertHTML', false, this.cleanHTML(html));\n        },\n        insertImage: function (url) {\n            var id =  mw.id('image_');\n            var img = '<img id=\"' + id + '\" contentEditable=\"false\" class=\"element\" src=\"' + url + '\" />';\n            scope.api.insertHTML(img);\n            img = mw.$(\"#\" + id);\n            img.removeAttr(\"_moz_dirty\");\n            return img[0];\n        },\n        link: function (result) {\n            var sel = scope.getSelection();\n            var el = scope.api.elementNode(sel.focusNode);\n            var elLink = el.nodeName === 'A' ? el : mw.tools.firstParentWithTag(el, 'a');\n            if (elLink) {\n                elLink.href = result.url;\n                if (result.text && result.text !== elLink.innerHTML) {\n                    elLink.innerHTML = result.text;\n                }\n            } else {\n                scope.api.insertHTML('<a href=\"'+ result.url +'\">'+ (result.text || (sel.toString().trim()) || result.url) +'</a>');\n            }\n        },\n        unlink: function () {\n            var sel = scope.getSelection();\n            if (!sel.isCollapsed) {\n                this.execCommand('unlink', null, null);\n            }\n            else {\n                var link = mw.tools.firstParentOrCurrentWithTag(this.elementNode(sel.focusNode), 'a');\n                if (!!link) {\n                    this.selectElement(link);\n                    this.execCommand('unlink', null, null);\n                }\n            }\n        }\n    };\n};\n","MWEditor.controllersHelpers = {\r\n    '|' : function () {\r\n        return mw.element({\r\n            tage: 'span',\r\n            props: {\r\n                className: 'mw-bar-delimiter'\r\n            }\r\n        });\r\n    }\r\n};\r\n","MWEditor.tools = {\r\n\r\n};\r\n","MWEditor.core = {\r\n    button: function(config) {\r\n        config = config || {};\r\n        var defaults = {\r\n            tag: 'button',\r\n            props: {\r\n                className: 'mdi mw-editor-controller-component mw-editor-controller-button',\r\n                type: 'button'\r\n            }\r\n        };\r\n        if (config.props && config.props.className){\r\n            config.props.className = defaults.props.className + ' ' + config.props.className;\r\n        }\r\n        var settings = $.extend(true, {}, defaults, config);\r\n        return mw.element(settings);\r\n    },\r\n    colorPicker: function(config) {\r\n        config = config || {};\r\n        var defaults = {\r\n            props: {\r\n                className: 'mw-editor-controller-component'\r\n            }\r\n        };\r\n        var settings = $.extend(true, {}, defaults, config);\r\n\r\n        var el = MWEditor.core.button(settings);\r\n        el.addClass('mw-editor-color-picker')\r\n        var input = mw.element({\r\n            tag: 'input',\r\n            props: {\r\n                type: 'color',\r\n                className: 'mw-editor-color-picker-node'\r\n            }\r\n        });\r\n        var time = null;\r\n        input.on('input', function (){\r\n            clearTimeout(time);\r\n            time = setTimeout(function (el, node){\r\n                console.log(node.value)\r\n                el.trigger('change', node.value);\r\n            }, 210, el, this);\r\n        });\r\n        el.append(input);\r\n        return el;\r\n    },\r\n    element: function(config) {\r\n        config = config || {};\r\n        var defaults = {\r\n            props: {\r\n                className: 'mw-editor-controller-component'\r\n            }\r\n        };\r\n        var settings = $.extend(true, {}, defaults, config);\r\n        var el = mw.element(settings);\r\n        el.on('mousedown touchstart', function (e) {\r\n            e.preventDefault();\r\n        });\r\n        return el;\r\n    },\r\n\r\n    _dropdownOption: function (data) {\r\n        // data: { label: string, value: any },\r\n        var option = MWEditor.core.element({\r\n            props: {\r\n                className: 'mw-editor-dropdown-option',\r\n                innerHTML: data.label\r\n            }\r\n        });\r\n        option.on('mousedown touchstart', function (e) {\r\n            e.preventDefault();\r\n        });\r\n        option.value = data.value;\r\n        return option;\r\n    },\r\n    dropdown: function (options) {\r\n        var lscope = this;\r\n        this.root = MWEditor.core.element();\r\n        this.select = MWEditor.core.element({\r\n            props: {\r\n                className: 'mw-editor-controller-component mw-editor-controller-component-select',\r\n                tooltip: options.placeholder || null\r\n            }\r\n        });\r\n        var displayValNode = MWEditor.core.button({\r\n            props: {\r\n                className: (options.icon ? 'mdi-' + options.icon + ' ' : '') + 'mw-editor-select-display-value',\r\n                innerHTML: options.placeholder || ''\r\n            }\r\n        });\r\n\r\n        var valueHolder = MWEditor.core.element({\r\n            props: {\r\n                className: 'mw-editor-controller-component-select-values-holder',\r\n\r\n            }\r\n        });\r\n        this.root.value = function (val){\r\n            this.displayValue(val.label);\r\n            this.value(val.value);\r\n        };\r\n\r\n        this.root.displayValue = function (val) {\r\n            displayValNode.text(val || options.placeholder || '');\r\n        };\r\n\r\n        this.select.append(displayValNode);\r\n        this.select.append(valueHolder);\r\n        this.select.valueHolder = valueHolder;\r\n        for (var i = 0; i < options.data.length; i++) {\r\n            var dt = options.data[i];\r\n            (function (dt){\r\n                var opt = MWEditor.core._dropdownOption(dt);\r\n                opt.on('click', function (){\r\n                    lscope.select.trigger('change', dt);\r\n                });\r\n                valueHolder.append(opt);\r\n            })(dt);\r\n\r\n        }\r\n        var curr = lscope.select.get(0);\r\n        this.select.on('click', function (e) {\r\n            e.stopPropagation();\r\n            var wrapper = mw.tools.firstParentWithClass(this, 'mw-editor-wrapper');\r\n            if (wrapper) {\r\n                var edOff = wrapper.getBoundingClientRect();\r\n                var selOff = this.getBoundingClientRect();\r\n                lscope.select.valueHolder.css({\r\n                    maxHeight: edOff.height - (selOff.top - edOff.top)\r\n                });\r\n            }\r\n\r\n            mw.element('.mw-editor-controller-component-select').each(function (){\r\n                if (this !== curr ) {\r\n                    this.classList.remove('active');\r\n                }\r\n            });\r\n            mw.element(this).toggleClass('active');\r\n        });\r\n        this.root.append(this.select);\r\n    },\r\n    _preSelect: function (node) {\r\n        var all = document.querySelectorAll('.mw-editor-controller-component-select.active, .mw-bar-control-item-group.active');\r\n        var parent = mw.tools.firstParentOrCurrentWithAnyOfClasses(node ? node.parentNode : null, ['mw-editor-controller-component-select','mw-bar-control-item-group']);\r\n        var i = 0, l = all.length;\r\n        for ( ; i < l; i++) {\r\n            if(!node || (all[i] !== node && all[i] !== parent)) {\r\n                all[i].classList.remove('active');\r\n            }\r\n        }\r\n    }\r\n};\r\n","MWEditor.controllers = {\n    align: function (scope, api, rootScope) {\n        this.root = MWEditor.core.element();\n        this.root.$node.addClass('mw-editor-state-component mw-editor-state-component-align');\n        this.buttons = [];\n\n        var arr = [\n            {align: 'left', icon: 'left', action: 'justifyLeft'},\n            {align: 'center', icon: 'center', action: 'justifyCenter'},\n            {align: 'right', icon: 'right', action: 'justifyRight'},\n            {align: 'justify', icon: 'justify', action: 'justifyFull'}\n        ];\n        this.render = function () {\n            var scope = this;\n            arr.forEach(function (item) {\n                var el = MWEditor.core.button({\n                    props: {\n                        className: 'mdi-format-align-' + item.icon\n                    }\n                });\n                el.on('mousedown touchstart', function (e) {\n                    api.execCommand(item.action);\n                });\n                scope.root.append(el);\n                scope.buttons.push(el);\n            });\n            return scope.root;\n        };\n        this.checkSelection = function (opt) {\n            var align = opt.css.alignNormalize();\n            for (var i = 0; i< this.buttons.length; i++) {\n                var state = arr[i].align === align;\n                rootScope.controllerActive(this.buttons[i].node, state);\n            }\n        };\n        this.element = this.render();\n    },\n    bold: function (scope, api, rootScope) {\n        this.render = function () {\n            var scope = this;\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-bold',\n                    tooltip: rootScope.lang('Bold')\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('bold');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            if(opt.css.is().bold) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    strikeThrough: function (scope, api, rootScope) {\n        this.render = function () {\n            var scope = this;\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-strikethrough',\n                    tooltip: rootScope.lang('Strike through')\n                }\n            });\n\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('strikeThrough');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            if(opt.css.is().striked) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    italic: function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-italic',\n                    tooltip: rootScope.lang('Italic')\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('italic');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n            if(opt.css.is().italic) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n        };\n        this.element = this.render();\n    },\n    'underline': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-underline',\n                    tooltip: rootScope.lang('Underline')\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('underline');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n            if(opt.css.is().underlined) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n        };\n        this.element = this.render();\n    },\n    'image': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-folder-multiple-image',\n                    tooltip: rootScope.lang('Insert Image')\n                }\n            });\n            el.on('click', function (e) {\n                var dialog;\n                var picker = new mw.filePicker({\n                    type: 'images',\n                    label: false,\n                    autoSelect: false,\n                    footer: true,\n                    _frameMaxHeight: true,\n                    onResult: function (res) {\n                        var url = res.src ? res.src : res;\n                        if(!url) return;\n                        url = url.toString();\n                        api.insertImage(url);\n                        dialog.remove();\n                    }\n                });\n                dialog = mw.top().dialog({\n                    content: picker.root,\n                    title: mw.lang('Select image'),\n                    footer: false\n                })\n\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    link: function(scope, api, rootScope){\n\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-link',\n                    tooltip: rootScope.lang('Insert link')\n                }\n            });\n\n            el.on('click', function (e) {\n                api.saveSelection();\n                var sel = scope.getSelection();\n\n                var target = mw.tools.firstParentWithTag(sel.focusNode, 'a');\n\n                var val;\n                if(target) {\n                    val = {\n                        url: target.href,\n                        text: target.innerHTML,\n                        target: target.target === '_blank'\n                    };\n                } else if(!sel.isCollapsed) {\n                    val = {\n                        url: '',\n                        text: api.getSelectionHTML(),\n                        target: false\n                    };\n                }\n                var linkEditor = new mw.LinkEditor({\n                    mode: 'dialog',\n                });\n                if(val) {\n                    linkEditor.setValue(val);\n                }\n\n                linkEditor.promise().then(function (data){\n                    var modal = linkEditor.dialog;\n                    if(data) {\n                        api.restoreSelection();\n                        api.link(data);\n                        modal.remove();\n                    } else {\n                        modal.remove();\n                    }\n                });\n\n\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    fontSize: function (scope, api, rootScope) {\n        this.checkSelection = function (opt) {\n            var css = opt.css;\n            var font = css.font();\n            var size = font.size;\n            opt.controller.element.displayValue(size);\n            opt.controller.element.disabled = !opt.api.isSelectionEditable();\n        };\n        this.render = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                data: [\n                    { label: '8px', value: 8 },\n                    { label: '10px', value: 10 },\n                    { label: '12px', value: 12 },\n                    { label: '14px', value: 14 },\n                    { label: '16px', value: 16 },\n                    { label: '18px', value: 18 },\n                    { label: '20px', value: 20 },\n                    { label: '22px', value: 22 },\n                    { label: '24px', value: 24 },\n                    { label: '22px', value: 22 },\n                ],\n                placeholder: rootScope.lang('Font Size')\n            });\n            dropdown.select.on('change', function (e, val) {\n                api.fontSize(val.value);\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    lineHeight: function (scope, api, rootScope) {\n        this.checkSelection = function (opt) {\n            var css = opt.css;\n            var font = css.font();\n            var size = font.height;\n            opt.controller.element.displayValue(size);\n            opt.controller.element.disabled = !opt.api.isSelectionEditable();\n        };\n        this.render = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                icon: 'format-line-spacing',\n                data: [\n                    { label: 'normal', value: 'normal' },\n                    { label: '14px', value:'14px' },\n                    { label: '16px', value:'16px' },\n                    { label: '19px', value:'19px' },\n                    { label: '21px', value:'21px' },\n                    { label: '24px', value:'24px' },\n                    { label: '25px', value:'25px' },\n                    { label: '27px', value:'27px' },\n                    { label: '30px', value:'30px' },\n                    { label: '35px', value:'35px' },\n                    { label: '40px', value:'40px' },\n                    { label: '45px', value:'45px' },\n                    { label: '50px', value:'50px' },\n                    { label: '55px', value:'55px' },\n                    { label: '60px', value:'60px' },\n                ],\n                placeholder: rootScope.lang('Line height')\n            });\n            dropdown.select.on('change', function (e, val) {\n                api.lineHeight(val.value);\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    format: function (scope, api, rootScope) {\n\n        this._availableTags = [\n            { label: '<h1>Title</h1>', value: 'h1' },\n            { label: '<h2>Title</h2>', value: 'h2' },\n            { label: '<h3>Title</h3>', value: 'h3' },\n            { label: '<h4>Title</h4>', value: 'h4' },\n            { label: '<h5>Title</h5>', value: 'h5' },\n            { label: '<h6>Title</h6>', value: 'h6' },\n            { label: 'Paragraph', value: 'p' },\n            { label: 'Block', value: 'div' },\n            { label: 'Pre formated', value: 'pre' }\n        ];\n\n        this.availableTags = function () {\n            if(this.__availableTags) {\n                return this.__availableTags;\n            }\n            this.__availableTags = this._availableTags.map(function (item) {\n                return item.value;\n            });\n            return this.availableTags();\n        };\n\n        this.getTagDisplayName = function (tag) {\n            tag = (tag || '').trim().toLowerCase();\n            if(!tag) return;\n            for (var i = 0; i < this._availableTags.length; i++) {\n                if(this._availableTags[i].value === tag) {\n                    return this._availableTags[i].label;\n                }\n            }\n        };\n\n        this.checkSelection = function (opt) {\n            var el = opt.api.elementNode(opt.selection.focusNode);\n            var parentEl = mw.tools.firstParentOrCurrentWithTag(el, this.availableTags());\n            opt.controller.element.displayValue(parentEl ? this.getTagDisplayName(parentEl.nodeName) : '');\n            opt.controller.element.disabled = !opt.api.isSelectionEditable();\n        };\n        this.render = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                data: this._availableTags,\n                placeholder: rootScope.lang('Format')\n            });\n            dropdown.select.on('change', function (e, val) {\n                api.execCommand('formatBlock', false, e.detail.value);\n                /*var sel = scope.getSelection();\n                var range = sel.getRangeAt(0);\n                var el = scope.actionWindow.document.createElement(val.value);\n\n                var disableSelection = true;\n\n                if(sel.isCollapsed || disableSelection) {\n                    var selectionElement = api.elementNode(sel.focusNode);\n                    if(scope.$editArea[0] !== selectionElement) {\n                        mw.tools.setTag(selectionElement, val.value);\n                    } else {\n                        while (selectionElement.firstChild) {\n                            el.appendChild(selectionElement.firstChild);\n                        }\n                        selectionElement.appendChild(el);\n                    }\n                    var newRange = scope.actionWindow.document.createRange();\n                    newRange.setStart(sel.anchorNode, sel.anchorOffset);\n                    newRange.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                } else {\n                    range.surroundContents(el);\n                }*/\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    fontSelector: function (scope, api, rootScope) {\n        this.checkSelection = function (opt) {\n            var css = opt.css;\n                var font = css.font();\n                var family_array = font.family.split(','), fam;\n                if (family_array.length === 1) {\n                    fam = font.family;\n                } else {\n                    fam = family_array.shift();\n                }\n                fam = fam.replace(/['\"]+/g, '');\n                opt.controller.element.displayValue(fam);\n                opt.controller.element.disabled = !opt.api.isSelectionEditable();\n\n        };\n        this.render = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                data: [\n                    { label: 'Arial 1', value: 'Arial' },\n                    { label: 'Verdana 1', value: 'Verdana' },\n                ],\n                placeholder: rootScope.lang('Font')\n            });\n            dropdown.select.on('change', function (e, val, b) {\n                api.fontFamily(val.value);\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    undoRedo: function(scope, api, rootScope) {\n        this.render = function () {\n            this.root = MWEditor.core.element();\n            this.root.addClass('mw-ui-btn-nav mw-editor-state-component')\n            var undo = MWEditor.core.button({\n                props: {\n                    className: 'mdi-undo',\n                    tooltip: rootScope.lang('Undo')\n                }\n            });\n            undo.on('mousedown touchstart', function (e) {\n                rootScope.state.undo();\n                rootScope._syncTextArea();\n            });\n\n            var redo = MWEditor.core.button({\n                props: {\n                    className: 'mdi-redo',\n                    tooltip: rootScope.lang('Redo')\n                }\n            });\n            redo.on('mousedown touchstart', function (e) {\n                rootScope.state.redo();\n                rootScope._syncTextArea();\n            });\n            this.root.node.appendChild(undo.node);\n            this.root.node.appendChild(redo.node);\n            $(rootScope.state).on('stateRecord', function(e, data){\n                undo.node.disabled = !data.hasNext;\n                redo.node.disabled = !data.hasPrev;\n            })\n            .on('stateUndo stateRedo', function(e, data){\n                if(!data.active || !data.active.target) {\n                    undo.node.disabled = !data.hasNext;\n                    redo.node.disabled = !data.hasPrev;\n                    return;\n                }\n                if(scope.actionWindow.document.body.contains(data.active.target)) {\n                    mw.$(data.active.target).html(data.active.value);\n                } else{\n                    if(data.active.target.id) {\n                        mw.$(scope.actionWindow.document.getElementById(data.active.target.id)).html(data.active.value);\n                    }\n                }\n                if(data.active.prev) {\n                    mw.$(data.active.prev).html(data.active.prevValue);\n                }\n                // mw.drag.load_new_modules();\n                undo.node.disabled = !data.hasNext;\n                redo.node.disabled = !data.hasPrev;\n                $(scope).trigger(e.type, [data]);\n            });\n            setTimeout(function () {\n                var data = rootScope.state.eventData();\n                undo.node.disabled = !data.hasNext;\n                redo.node.disabled = !data.hasPrev;\n            }, 78);\n            return this.root;\n        };\n        this.element = this.render();\n    },\n    'ul': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-list-bulleted'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                var sel = api.getSelection();\n                var node = api.elementNode(sel.focusNode);\n                var paragraph = mw.tools.firstParentOrCurrentWithTag(node, 'p');\n                if(paragraph) {\n                    scope.api.action(paragraph.parentNode, function () {\n                        var ul = scope.actionWindow.document.createElement('ul');\n                        var li = scope.actionWindow.document.createElement('li');\n                        ul.appendChild(li);\n                        while (paragraph.firstChild) {\n                            li.appendChild(node.firstChild);\n                        }\n                        paragraph.parentNode.insertBefore(ul, paragraph.nextSibling);\n                        paragraph.remove();\n                    });\n                } else {\n                    api.execCommand('insertUnorderedList');\n                }\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    'ol': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-list-numbered tip',\n                    'data-tip': 'Ordered list'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                var sel = api.getSelection();\n                var node = api.elementNode(sel.focusNode);\n                var paragraph = mw.tools.firstParentOrCurrentWithTag(node, 'p');\n                if(paragraph) {\n                    scope.api.action(paragraph.parentNode, function () {\n                        var ul = scope.actionWindow.document.createElement('ol');\n                        var li = scope.actionWindow.document.createElement('li');\n                        ul.appendChild(li);\n                        while (paragraph.firstChild) {\n                            li.appendChild(paragraph.firstChild);\n                        }\n                        paragraph.parentNode.insertBefore(ul, paragraph.nextSibling);\n                        paragraph.remove();\n                    });\n                } else {\n                    api.execCommand('insertOrderedList');\n                }\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    'indent': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-indent-increase',\n                    'data-tip': 'Indent'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('indent');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    'outdent': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-indent-decrease',\n                    'data-tip': 'Indent'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('outdent');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    removeFormat: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-clear',\n                    tooltip: 'Remove Format'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('removeFormat');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    unlink: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-link-off', tooltip: 'Unlink'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('unlink');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    textColor: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.colorPicker({\n                props: {\n                    className: 'mdi-format-color-text', tooltip: 'Text color'\n                }\n            });\n            el.on('change', function (e, val) {\n                console.log(val)\n                api.execCommand('foreColor', false, val);\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    textBackgroundColor: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.colorPicker({\n                props: {\n                    className: 'mdi-format-color-fill', tooltip: 'Text background color'\n                }\n            });\n            el.on('change', function (e, val) {\n                console.log(e, val)\n                api.execCommand('backcolor', false, val);\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    table: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-table-large', tooltip: 'Insert Table'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.insertHTML('<table class=\"mw-ui-table\" border=\"1\" width=\"100%\"><tr><td></td><td></td></tr><tr><td></td><td></td></tr></table>');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    wordPaste: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-file-word', tooltip: 'Paste from Word'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.saveSelection();\n                var dialog;\n                var ok = MWEditor.core.element({\n                    tag: 'span',\n                    props: {\n                        className: 'mw-ui-btn mw-ui-btn-info',\n                        innerHTML: rootScope.lang('OK')\n                    }\n                });\n                var cancel = MWEditor.core.element({\n                    tag: 'span',\n                    props: {\n                        className: 'mw-ui-btn',\n                        innerHTML: rootScope.lang('Cancel')\n                    }\n                });\n                var cleanEl = mw.element({\n                    props: {\n                        contentEditable: true,\n                        autofocus: true,\n                        style: {\n                            height: '250px'\n                        }\n                    }\n                });\n\n                var footer = mw.element();\n                cancel.on('click', function (){\n                    dialog.remove();\n                })\n                ok.on('click', function (){\n                    var content = cleanEl.html().trim();\n                    dialog.remove();\n                    api.restoreSelection();\n                    if(content){\n                        api.insertHTML(api.cleanWord(content));\n                    }\n\n                });\n                footer.append(cancel);\n                footer.append(ok);\n                dialog = mw.dialog({\n                    content: cleanEl.node,\n                    footer: footer.node\n                });\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n\n\n\n};\n","\r\n/*************************************************************\r\n *\r\n        MWEditor.addController(\r\n            'underline',\r\n            function () {\r\n\r\n            }, function () {\r\n\r\n            }\r\n        );\r\n\r\n        MWEditor.addController({\r\n            name: 'underline',\r\n            render: function () {\r\n\r\n            },\r\n            checkSelection: function () {\r\n\r\n            }\r\n        })\r\n\r\n **************************************************************/\r\n\r\n\r\n\r\nMWEditor.controllers.editSource = function (scope, api, rootScope) {\r\n    this.render = function () {\r\n\r\n        var scope = this;\r\n        var el = MWEditor.core.button({\r\n            props: {\r\n                className: 'mdi mdi-xml',\r\n                tooltip:  'Edit source'\r\n            }\r\n        });\r\n        el.on('mousedown touchstart', function (e) {\r\n\r\n            var ok = mw.element('<span class=\"mw-ui-btn mw-ui-btn-info\">'+mw.lang('OK')+'</span>');\r\n            var cancel = mw.element('<span class=\"mw-ui-btn\">'+mw.lang('Cancel')+'</span>');\r\n            var area = mw.element({ tag: 'textarea', props: {\r\n                    className: 'mw-ui-field',\r\n                }});\r\n            area.css({\r\n                height: 400\r\n            })\r\n            area.val(rootScope.$editArea.html());\r\n            var footer = mw.element();\r\n            footer.append(cancel).append(ok)\r\n            var dialog = mw.dialog({\r\n                overlay: true,\r\n                content: area.get(0),\r\n                footer: footer.get(0),\r\n                title: mw.lang('Edit source')\r\n            });\r\n\r\n            cancel.on('click', function (){\r\n                dialog.remove()\r\n            });\r\n            ok.on('click', function (){\r\n                rootScope.setContent(area.val(), true);\r\n                dialog.remove();\r\n            });\r\n\r\n        });\r\n        return el;\r\n    };\r\n    this.checkSelection = function () {\r\n        return true;\r\n    };\r\n};\r\n\r\n\r\nMWEditor.addController = function (name, render, checkSelection, dependencies) {\r\n    if (MWEditor.controllers[name]) {\r\n        console.warn(name + ' already defined');\r\n        return;\r\n    }\r\n    if (typeof name === 'object') {\r\n        var obj = name;\r\n        name = obj.name;\r\n        render = obj.render;\r\n        checkSelection = obj.checkSelection;\r\n        dependencies = obj.dependencies;\r\n    }\r\n    if(MWEditor.controllers[name]) {\r\n        console.warn(name + ' controller is already registered in the editor');\r\n        return;\r\n    }\r\n    MWEditor.controllers[name] = function () {\r\n        this.render = render;\r\n        if(checkSelection) {\r\n            this.checkSelection = checkSelection;\r\n        }\r\n        this.element = this.render();\r\n        this.dependencies = dependencies;\r\n    };\r\n};\r\n\r\n\r\nMWEditor.addInteractionController = function (name, render, interact, dependencies) {\r\n    if (MWEditor.controllers[name]) {\r\n        console.warn(name + ' already defined');\r\n        return;\r\n    }\r\n    if (typeof name === 'object') {\r\n        var obj = name;\r\n        name = obj.name;\r\n        render = obj.render;\r\n        interact = obj.interact;\r\n        dependencies = obj.dependencies;\r\n    }\r\n    if(MWEditor.interactionControls[name]) {\r\n        console.warn(name + ' controller is already registered in the editor')\r\n        return;\r\n    }\r\n    MWEditor.interactionControls[name] = function () {\r\n        this.render = render;\r\n        if(interact) {\r\n            this.interact = interact;\r\n        }\r\n        this.element = this.render();\r\n        this.dependencies = dependencies;\r\n    };\r\n};\r\n","/*\r\n*\r\n*  interface data {\r\n        target: Element,\r\n        component: Element,\r\n        isImage: boolean,\r\n        event: Event\r\n    };\r\n*\r\n*\r\n* */\r\n\r\nMWEditor.interactionControls = {\r\n    linkTooltip: function (rootScope) {\r\n        this.render = function () {\r\n            var scope = this;\r\n            var el = mw.element({\r\n                props: {\r\n                    className: 'mw-editor-link-tooltip'\r\n                }\r\n            });\r\n            var urlElement = mw.element({\r\n                tag: 'a',\r\n                props: {\r\n                    className: 'mw-editor-link-tooltip-url',\r\n                    target: 'blank'\r\n                }\r\n            });\r\n            var urlUnlink = MWEditor.core.button({\r\n                props: {\r\n                    className: 'mdi-link-off',\r\n                }\r\n            });\r\n\r\n            urlUnlink.on('click', function () {\r\n                rootScope.api.unlink();\r\n            });\r\n\r\n            el.urlElement = urlElement;\r\n            el.urlUnlink = urlUnlink;\r\n            el.append(urlElement);\r\n            el.append(urlUnlink);\r\n            el.target = null;\r\n            el.hide();\r\n            return el;\r\n        };\r\n        this.interact = function (data) {\r\n            var tg = mw.tools.firstParentOrCurrentWithTag(data.target,'a');\r\n            if(!tg) {\r\n                this.element.hide();\r\n                return;\r\n            }\r\n            var $target = $(data.target);\r\n            this.$target = $target;\r\n            var css = $target.offset();\r\n            css.top += $target.height();\r\n            this.element.urlElement.html(data.target.href);\r\n            this.element.urlElement.prop('href', data.target.href);\r\n            this.element.css(css).show();\r\n        };\r\n        this.element = this.render();\r\n    },\r\n    image: function (rootScope) {\r\n        this.nodes = [];\r\n        this.render = function () {\r\n            var scope = this;\r\n            var el = mw.element({\r\n                props: {\r\n                    className: 'mw-editor-image-handle-wrap'\r\n                }\r\n            });\r\n            var changeButton = mw.element({\r\n                props: {\r\n                    innerHTML: '<i class=\"mdi mdi-folder-multiple-image\"></i>',\r\n                    className: 'mw-ui-btn mw-ui-btn-medium tip',\r\n                    dataset: {\r\n                        tip: rootScope.lang('Change image')\r\n                    }\r\n                }\r\n            });\r\n            changeButton.on('click', function () {\r\n                var dialog;\r\n                var picker = new mw.filePicker({\r\n                    type: 'images',\r\n                    label: false,\r\n                    autoSelect: false,\r\n                    footer: true,\r\n                    _frameMaxHeight: true,\r\n                    onResult: function (res) {\r\n                        var url = res.src ? res.src : res;\r\n                        if(!url) return;\r\n                        url = url.toString();\r\n                        scope.$target.attr('src', url);\r\n                        dialog.remove();\r\n                    }\r\n                });\r\n                dialog = mw.top().dialog({\r\n                    content: picker.root,\r\n                    title: mw.lang('Select image'),\r\n                    footer: false\r\n                })\r\n\r\n            });\r\n            var editButton = mw.element({\r\n                props: {\r\n                    innerHTML: '<i class=\"mdi mdi-image-edit\"></i>',\r\n                    className: 'mw-ui-btn mw-ui-btn-medium tip',\r\n                    dataset: {\r\n                        tip: rootScope.lang('Edit image')\r\n                    }\r\n                }\r\n            });\r\n            var nav = mw.element({\r\n                props: {\r\n                    className: 'mw-ui-btn-nav'\r\n                }\r\n            });\r\n            nav.append(changeButton);\r\n            el.append(nav);\r\n            // nav.append(editButton);\r\n            this.nodes.push(el.node, changeButton.node, editButton.node);\r\n            el.hide();\r\n            return el;\r\n        };\r\n        this.interact = function (data) {\r\n            if(mw.tools.firstParentOrCurrentWithClass(data.localTarget, 'mw-editor-image-handle-wrap')) {\r\n                return;\r\n            }\r\n            if(this.nodes.indexOf(data.target) !== -1) {\r\n                this.element.$node.hide();\r\n                return;\r\n            }\r\n            if (data.isImage) {\r\n                var $target = $(data.localTarget);\r\n                this.$target = $target;\r\n                var css = $target.offset();\r\n                css.width = $target.outerWidth();\r\n                css.height = $target.outerHeight();\r\n                this.element.css(css).show();\r\n            } else {\r\n                this.element.hide();\r\n            }\r\n        };\r\n        this.element = this.render();\r\n    },\r\n    tableManager: function(rootScope){\r\n        var lscope = this;\r\n        this.interact = function (data) {\r\n            if (!data.eventIsActionLike) { return; }\r\n            var td = mw.tools.firstParentOrCurrentWithTag(data.localTarget, 'td');\r\n            if (td) {\r\n                var $target = $(td);\r\n                this.$target = $target;\r\n                var css = $target.offset();\r\n                css.top -= lscope.element.node.offsetHeight;\r\n                this.element.$node.css(css).show();\r\n            } else {\r\n                this.element.$node.hide();\r\n            }\r\n        };\r\n\r\n        this._afterAction = function () {\r\n            this.element.$node.hide();\r\n            rootScope.state.record({\r\n                target: rootScope.$editArea[0],\r\n                value: rootScope.$editArea[0].innerHTML\r\n            });\r\n        };\r\n\r\n        this.render = function () {\r\n            var root = mw.element({\r\n                props: {\r\n                    className: 'mw-editor-table-manager'\r\n                }\r\n            });\r\n            var bar = mw.bar();\r\n            bar.createRow();\r\n            root.append(bar.bar);\r\n\r\n            var insertDD = new MWEditor.core.dropdown({\r\n                data: [\r\n                    { label: 'Row Above', value: {action: 'insertRow', type: 'above'} },\r\n                    { label: 'Row Under', value: {action: 'insertRow', type: 'under'} },\r\n                    { label: 'Column on the left', value: {action: 'insertColumn', type: 'left'} },\r\n                    { label: 'Column on the right', value: {action: 'insertColumn', type: 'right'} },\r\n                ],\r\n                placeholder: 'Insert'\r\n            });\r\n\r\n            insertDD.select.on('change', function (e, data, node) {\r\n                rootScope.state.record({\r\n                    target: rootScope.$editArea[0],\r\n                    value: rootScope.$editArea[0].innerHTML\r\n                });\r\n                lscope[data.value.action](data.value.type);\r\n                lscope._afterAction();\r\n            });\r\n            var deletetDD = new MWEditor.core.dropdown({\r\n                data: [\r\n                    { label: 'Row', value: {action: 'deleteRow'} },\r\n                    { label: 'Column', value: {action: 'deleteColumn'} },\r\n                ],\r\n                placeholder: 'Delete'\r\n            });\r\n\r\n            deletetDD.select.on('change', function (e, data, node) {\r\n                rootScope.state.record({\r\n                    target: rootScope.$editArea[0],\r\n                    value: rootScope.$editArea[0].innerHTML\r\n                });\r\n                lscope[data.value.action]();\r\n                lscope._afterAction()\r\n            });\r\n\r\n            bar.add(insertDD.root.node);\r\n            bar.add(deletetDD.root.node);\r\n            root.hide();\r\n\r\n            return root;\r\n        };\r\n\r\n        this.deleteRow = function (cell) {\r\n            cell = cell || this.getActiveCell();\r\n            cell.parentNode.remove();\r\n        };\r\n\r\n\r\n        this.deleteColumn = function (cell) {\r\n            cell = cell || this.getActiveCell();\r\n            var index = mw.tools.index(cell),\r\n                body = cell.parentNode.parentNode,\r\n                rows = mw.$(body).children('tr'),\r\n                l = rows.length,\r\n                i = 0;\r\n            for (; i < l; i++) {\r\n                var row = rows[i];\r\n                row.getElementsByTagName('td')[index].remove();\r\n            }\r\n        };\r\n\r\n        this.getActiveCell = function () {\r\n            var node = rootScope.api.elementNode( rootScope.getSelection().focusNode);\r\n            return mw.tools.firstParentOrCurrentWithTag(node,'td');\r\n        };\r\n\r\n        this.insertColumn = function (dir, cell) {\r\n            cell = cell || this.getActiveCell();\r\n            cell = mw.$(cell)[0];\r\n            if (cell === null) {\r\n                return false;\r\n            }\r\n            dir = dir || 'right';\r\n            var rows = mw.$(cell.parentNode.parentNode).children('tr');\r\n            var i = 0, l = rows.length, index = mw.tools.index(cell);\r\n            for (; i < l; i++) {\r\n                var row = rows[i];\r\n                cell = mw.$(row).children('td')[index];\r\n                if (dir === 'left' || dir === 'both') {\r\n                    mw.$(cell).before(\"<td>&nbsp;</td>\");\r\n                }\r\n                if (dir === 'right' || dir === 'both') {\r\n                    mw.$(cell).after(\"<td>&nbsp;</td>\");\r\n                }\r\n            }\r\n        };\r\n        this.insertRow = function (dir, cell) {\r\n            cell = cell || this.getActiveCell();\r\n            cell = mw.$(cell)[0];\r\n            if (cell === null) {\r\n                return false;\r\n            }\r\n            dir = dir || 'under';\r\n            var parent = cell.parentNode, cells = mw.$(parent).children('td'), i = 0, l = cells.length,\r\n                html = '';\r\n            for (; i < l; i++) {\r\n                html += '<td>&nbsp;</td>';\r\n            }\r\n            html = '<tr>' + html + '</tr>';\r\n            if (dir === 'under' || dir === 'both') {\r\n                mw.$(parent).after(html)\r\n            }\r\n            if (dir === 'above' || dir === 'both') {\r\n                mw.$(parent).before(html)\r\n            }\r\n        };\r\n        this.deleteRow = function (cell) {\r\n            cell = cell || this.getActiveCell();\r\n            mw.$(cell.parentNode).remove();\r\n        };\r\n        this.deleteColumn = function (cell) {\r\n            cell = cell || this.getActiveCell();\r\n            var index = mw.tools.index(cell), body = cell.parentNode.parentNode, rows = mw.$(body).children('tr'), l = rows.length, i = 0;\r\n            for (; i < l; i++) {\r\n                var row = rows[i];\r\n                mw.$(row.getElementsByTagName('td')[index]).remove();\r\n            }\r\n        };\r\n\r\n        this.setStyle = function (cls, cell) {\r\n            cell = cell || this.getActiveCell();\r\n            var table = mw.tools.firstParentWithTag(cell, 'table');\r\n            mw.tools.classNamespaceDelete(table, 'mw-wysiwyg-table');\r\n            mw.$(table).addClass(cls);\r\n        };\r\n        this.element = this.render();\r\n    }\r\n\r\n};\r\n","MWEditor.i18n = {\r\n    en: {\r\n        'Change': 'Change',\r\n        'Edit image': 'Edit',\r\n    }\r\n};\r\n","\r\nvar canDestroy = function (event) {\r\n    var target = event.target;\r\n    return !mw.tools.hasAnyOfClassesOnNodeOrParent(event, ['safe-element'])\r\n        && mw.tools.parentsOrCurrentOrderMatchOrOnlyFirstOrNone(target, ['allow-drop', 'nodrop']);\r\n};\r\n\r\n\r\n\r\n\r\nMWEditor.leSave = {\r\n   prepare: function(root){\r\n        if(!root) {\r\n            return null;\r\n        }\r\n       var doc = mw.tools.parseHtml();\r\n       var doc = document.implementation.createHTMLDocument(\"\");\r\n       doc.body.innerHTML = root.innerHTML;\r\n\r\n       mw.$('.element-current', doc).removeClass('element-current');\r\n       mw.$('.element-active', doc).removeClass('element-active');\r\n       mw.$('.disable-resize', doc).removeClass('disable-resize');\r\n       mw.$('.mw-webkit-drag-hover-binded', doc).removeClass('mw-webkit-drag-hover-binded');\r\n       mw.$('.module-cat-toggle-Modules', doc).removeClass('module-cat-toggle-Modules');\r\n       mw.$('.mw-module-drag-clone', doc).removeClass('mw-module-drag-clone');\r\n       mw.$('-module', doc).removeClass('-module');\r\n       mw.$('.empty-element', doc).remove();\r\n       mw.$('.empty-element', doc).remove();\r\n       mw.$('.edit .ui-resizable-handle', doc).remove();\r\n       mw.$('script', doc).remove();\r\n       mw.tools.classNamespaceDelete('all', 'ui-', doc, 'starts');\r\n       mw.$(\"[contenteditable]\", doc).removeAttr(\"contenteditable\");\r\n       var all = doc.querySelectorAll('[contenteditable]'),\r\n           l = all.length,\r\n           i = 0;\r\n       for (; i < l; i++) {\r\n           all[i].removeAttribute('contenteditable');\r\n       }\r\n       var all1 = doc.querySelectorAll('.module'),\r\n           l1 = all.length,\r\n           i1 = 0;\r\n       for (; i1 < l1; i1++) {\r\n           if (all[i1].querySelector('.edit') === null) {\r\n               all[i1].innerHTML = '';\r\n           }\r\n       }\r\n       return doc;\r\n   },\r\n   htmlAttrValidate:function(edits){\r\n        var final = [];\r\n        $.each(edits, function(){\r\n            var html = this.outerHTML;\r\n            html = html.replace(/url\\(&quot;/g, \"url('\");\r\n            html = html.replace(/jpg&quot;/g, \"jpg'\");\r\n            html = html.replace(/jpeg&quot;/g, \"jpeg'\");\r\n            html = html.replace(/png&quot;/g, \"png'\");\r\n            html = html.replace(/gif&quot;/g, \"gif'\");\r\n            final.push($(html)[0]);\r\n        })\r\n        return final;\r\n   },\r\n    pastedFromExcel: function (clipboard) {\r\n        var html = clipboard.getData('text/html');\r\n        return html.indexOf('ProgId content=Excel.Sheet') !== -1\r\n    },\r\n    areSameLike: function (el1, el2) {\r\n        if (!el1 || !el2) return false;\r\n        if (el1.nodeType !== el2.nodeType) return false;\r\n        if (!!el1.className.trim() || !!el2.className.trim()) {\r\n            return false;\r\n        }\r\n\r\n        var css1 = (el1.getAttribute('style') || '').replace(/\\s/g, '');\r\n        var css2 = (el2.getAttribute('style') || '').replace(/\\s/g, '');\r\n\r\n        if (css1 === css2 && el1.nodeName === el2.nodeName) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n    cleanUnwantedTags: function (body) {\r\n        var scope = this;\r\n        mw.$('*', body).each(function () {\r\n            if (this.nodeName !== 'A' && mw.ea.helpers.isInlineLevel(this) && (this.className.trim && !this.className.trim())) {\r\n                if (scope.areSameLike(this, this.nextElementSibling) && this.nextElementSibling === this.nextSibling) {\r\n                    if (this.nextSibling !== this.nextElementSibling) {\r\n                        this.appendChild(this.nextSibling);\r\n                    }\r\n                    this.innerHTML = this.innerHTML + this.nextElementSibling.innerHTML;\r\n                    this.nextElementSibling.innerHTML = '';\r\n                    this.nextElementSibling.className = 'mw-skip-and-remove';\r\n                }\r\n            }\r\n        });\r\n        mw.$('.mw-skip-and-remove', body).remove();\r\n        return body;\r\n    },\r\n   getData: function(edits) {\r\n        mw.$(edits).each(function(){\r\n            mw.$('meta', this).remove();\r\n        });\r\n\r\n        edits = this.htmlAttrValidate(edits);\r\n        var l = edits.length,\r\n            i = 0,\r\n            helper = {},\r\n            master = {};\r\n        if (l > 0) {\r\n            for (; i < l; i++) {\r\n                helper.item = edits[i];\r\n                var rel = mw.tools.mwattr(helper.item, 'rel');\r\n                if (!rel) {\r\n                    mw.$(helper.item).removeClass('changed');\r\n                    mw.tools.foreachParents(helper.item, function(loop) {\r\n                        var cls = this.className;\r\n                        var rel = mw.tools.mwattr(this, 'rel');\r\n                        if (mw.tools.hasClass(cls, 'edit') && mw.tools.hasClass(cls, 'changed') && (!!rel)) {\r\n                            helper.item = this;\r\n                            mw.tools.stopLoop(loop);\r\n                        }\r\n                    });\r\n                }\r\n                var rel = mw.tools.mwattr(helper.item, 'rel');\r\n                if (!rel) {\r\n                    var field = !!helper.item.id ? '#'+helper.item.id : '';\r\n                    console.warn('Skipped save: .edit'+field+' element does not have rel attribute.');\r\n                    continue;\r\n                }\r\n                mw.$(helper.item).removeClass('changed orig_changed');\r\n                mw.$(helper.item).removeClass('module-over');\r\n\r\n                mw.$('.module-over', helper.item).each(function(){\r\n                    mw.$(this).removeClass('module-over');\r\n                });\r\n                mw.$('[class]', helper.item).each(function(){\r\n                    var cls = this.getAttribute(\"class\");\r\n                    if(typeof cls === 'string'){\r\n                        cls = cls.trim();\r\n                    }\r\n                    if(!cls){\r\n                        this.removeAttribute(\"class\");\r\n                    }\r\n                });\r\n                var content = this.cleanUnwantedTags(helper.item).innerHTML;\r\n                var attr_obj = {};\r\n                var attrs = helper.item.attributes;\r\n                if (attrs.length > 0) {\r\n                    var ai = 0,\r\n                        al = attrs.length;\r\n                    for (; ai < al; ai++) {\r\n                        attr_obj[attrs[ai].nodeName] = attrs[ai].nodeValue;\r\n                    }\r\n                }\r\n                var obj = {\r\n                    attributes: attr_obj,\r\n                    html: content\r\n                };\r\n                var objdata = \"field_data_\" + i;\r\n                master[objdata] = obj;\r\n            }\r\n        }\r\n        return master;\r\n    }\r\n};\r\n\r\nMWEditor.leCore = {};\r\n\r\n// methods accessible by scope.liveedit\r\n\r\nMWEditor.liveeditMode = function(scope){\r\n    return {\r\n\r\n        prepare: {\r\n            titles: function () {\r\n                var t = scope.querySelectorAll('[field=\"title\"]'),\r\n                    l = t.length,\r\n                    i = 0;\r\n\r\n                for (; i < l; i++) {\r\n                    mw.$(t[i]).addClass(\"nodrop\");\r\n                }\r\n            }\r\n        },\r\n\r\n        isSafeMode: function (el) {\r\n            if (!el) {\r\n                var sel = scope.selection;\r\n                if(!sel.rangeCount) return false;\r\n                var range = sel.getRangeAt(0);\r\n                el = scope.api.elementNode(range.commonAncestorContainer);\r\n            }\r\n            var hasSafe = mw.tools.hasAnyOfClassesOnNodeOrParent(el, ['safe-mode']);\r\n            var regInsafe = mw.tools.parentsOrCurrentOrderMatchOrNone(el, ['regular-mode', 'safe-mode']);\r\n            return hasSafe && !regInsafe;\r\n        },\r\n        init: function (body, scope) {\r\n            mw.$(body).on('keydown', function (event) {\r\n                if (event.type === 'keydown') {\r\n                    if (mw.tools.isField(event.target) || !event.target.isContentEditable) {\r\n                        return true;\r\n                    }\r\n                    var sel = scope.selection;\r\n                    if (mw.event.is.enter(event)) {\r\n                        if (MWEditor.liveeditMode.isSafeMode(event.target)) {\r\n                            var isList = mw.tools.firstMatchesOnNodeOrParent(event.target, ['li', 'ul', 'ol']);\r\n                            if (!isList) {\r\n                                event.preventDefault();\r\n                                scope.api.insertHTML('<br>\\u200C');\r\n                            }\r\n                        }\r\n                    }\r\n                    if (sel.rangeCount > 0) {\r\n                        var r = sel.getRangeAt(0);\r\n                        if (event.keyCode === 9 && !event.shiftKey && sel.focusNode.parentNode.isContentEditable && sel.isCollapsed) {   /* tab key */\r\n                            scope.api.insertHTML('&nbsp;&nbsp;&nbsp;&nbsp;');\r\n                            return false;\r\n                        }\r\n                        return manageDeleteAndBackspace(event, sel);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        manageDeleteAndBackspaceInSafeMode : function (event, sel) {\r\n            var node = scope.api.elementNode(sel.focusNode);\r\n            var range = sel.getRangeAt(0);\r\n            if(!node.textContent.replace(/\\s/gi, '')){\r\n                MWEditor.liveeditMode._manageDeleteAndBackspaceInSafeMode.emptyNode(event, node, sel, range);\r\n                return false;\r\n            }\r\n            MWEditor.liveeditMode._manageDeleteAndBackspaceInSafeMode.nodeBoundaries(event, node, sel, range);\r\n            return true;\r\n        },\r\n        merge: {\r\n            /* Executes on backspace or delete */\r\n            isMergeable: function (el) {\r\n                if (!el) return false;\r\n                if (el.nodeType === 3) return true;\r\n                var is = false;\r\n                var css =  getComputedStyle(el);\r\n                var display = css.getPropertyValue('display');\r\n                var position = css.getPropertyValue('position');\r\n                var isInline = display === 'inline';\r\n                if (isInline) return true;\r\n                var mergeables = ['p', '.element', 'div:not([class])', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\r\n                mergeables.forEach(function (item) {\r\n                    if (el.matches(item)) {\r\n                        is = true;\r\n                    }\r\n                });\r\n\r\n                if (is) {\r\n                    if (el.querySelector('.module') !== null || mw.tools.hasClass(el, 'module')) {\r\n                        is = false;\r\n                    }\r\n                }\r\n                return is;\r\n            },\r\n            manageBreakables: function (curr, next, dir, event) {\r\n                var isnonbreakable = scope.liveedit.merge.isInNonbreakable(curr, dir);\r\n                if (isnonbreakable) {\r\n                    var conts = scope.selection.getRangeAt(0);\r\n                    event.preventDefault();\r\n                    if (next !== null) {\r\n                        if (next.nodeType === 3 && /\\r|\\n/.exec(next.nodeValue) !== null) {\r\n                            event.preventDefault();\r\n                            return false;\r\n                        }\r\n                        if (dir === 'next') {\r\n                            scope.liveedit.cursorToElement(next);\r\n                        }\r\n                        else {\r\n                            scope.liveedit.cursorToElement(next, 'end');\r\n                        }\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n            isInNonbreakable: function (el, dir) {\r\n                var absNext = scope.liveedit.merge.findNextNearest(el, dir);\r\n\r\n                if (absNext.nodeType === 3 && /\\r|\\n/.exec(absNext.nodeValue) !== null) {\r\n                    absNext = scope.liveedit.merge.findNextNearest(el, dir, true)\r\n                }\r\n\r\n                if (absNext.nodeType === 1) {\r\n                    if (mw.tools.hasAnyOfClasses(absNext, ['nodrop', 'allow-drop'])) {\r\n                        return false;\r\n                    }\r\n                    if (absNext.querySelector('.nodrop', '.allow-drop') !== null) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (scope.liveedit.merge.alwaysMergeable(absNext) && (scope.liveedit.merge.alwaysMergeable(absNext.firstElementChild) || !absNext.firstElementChild)) {\r\n                    return false;\r\n                }\r\n                if (el.textContent === '') {\r\n\r\n                    var absNextNext = scope.liveedit.merge.findNextNearest(absNext, dir);\r\n                    if (absNext.nodeType === 3 && /\\r|\\n/.exec(absNext.nodeValue) !== null) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext)\r\n                    }\r\n                }\r\n\r\n                if (el.nodeType === 1 && !!el.textContent.trim()) {\r\n                    return false;\r\n                }\r\n                if (el.nextSibling === null && el.nodeType === 3 && dir == 'next') {\r\n                    var absNext = scope.liveedit.merge.findNextNearest(el, dir);\r\n                    var absNextNext = scope.liveedit.merge.findNextNearest(absNext, dir);\r\n                    if (/\\r|\\n/.exec(absNext.nodeValue) !== null) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext)\r\n                    }\r\n\r\n                    if (absNextNext.nodeType === 1) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext) || scope.liveedit.merge.isInNonbreakableClass(absNextNext.firstChild);\r\n                    }\r\n                    else if (absNextNext.nodeType === 3) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (el.previousSibling === null && el.nodeType === 3 && dir === 'prev') {\r\n                    var absNext = scope.liveedit.merge.findNextNearest(el, 'prev');\r\n                    var absNextNext = scope.liveedit.merge.findNextNearest(absNext, 'prev');\r\n                    if (absNextNext.nodeType === 1) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext);\r\n                    }\r\n                    else if (absNextNext.nodeType === 3) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n                el = scope.api.elementNode(el);\r\n\r\n                var is = scope.liveedit.merge.isInNonbreakableClass(el);\r\n                return is;\r\n            },\r\n            isInNonbreakableClass: function (el, dir) {\r\n                var absNext = scope.liveedit.merge.findNextNearest(el, dir);\r\n\r\n                if (el.nodeType === 3 && /\\r|\\n/.exec(absNext.nodeValue) === null) return false;\r\n                el = scope.api.elementNode(el);\r\n                var classes = ['unbreakable', '*col', '*row', '*btn', '*icon', 'module', 'edit'];\r\n                var is = false;\r\n                classes.forEach(function (item) {\r\n                    if (item.indexOf('*') === 0) {\r\n                        var item = item.split('*')[1];\r\n                        if (el.className.indexOf(item) !== -1) {\r\n                            is = true;\r\n                        }\r\n                        else {\r\n                            mw.tools.foreachParents(el, function (loop) {\r\n                                if (this.className.indexOf(item) !== -1 && !this.contains(el)) {\r\n                                    is = true;\r\n                                    mw.tools.stopLoop(loop);\r\n                                }\r\n                                else {\r\n                                    is = false;\r\n                                    mw.tools.stopLoop(loop);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (mw.tools.hasClass(el, item) || mw.tools.hasParentsWithClass(el, item)) {\r\n                            is = true;\r\n                        }\r\n                    }\r\n                });\r\n                return is;\r\n            },\r\n            getNext: function (curr) {\r\n                var next = curr.nextSibling;\r\n                while (curr !== null && curr.nextSibling === null) {\r\n                    curr = curr.parentNode;\r\n                    next = curr.nextSibling;\r\n                }\r\n                return next;\r\n            },\r\n            getPrev: function (curr) {\r\n                var next = curr.previousSibling;\r\n                while (curr !== null && curr.previousSibling === null) {\r\n                    curr = curr.parentNode;\r\n                    next = curr.previousSibling;\r\n                }\r\n                return next;\r\n            },\r\n            findNextNearest: function (el, dir, searchElement) {\r\n                searchElement = typeof searchElement === 'undefined' ? false : true;\r\n                if (dir === 'next') {\r\n                    var dosearch = searchElement ? 'nextElementSibling' : 'nextSibling';\r\n                    var next = el[dosearch];\r\n                    if (next === null) {\r\n                        while (el[dosearch] === null) {\r\n                            el = el.parentNode;\r\n                            next = el[dosearch];\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    var dosearch = searchElement ? 'previousElementSibling' : 'previousSibling';\r\n                    var next = el[dosearch];\r\n                    if (next === null) {\r\n                        while (el[dosearch] === null) {\r\n                            el = el.parentNode;\r\n                            next = el[dosearch];\r\n                        }\r\n                    }\r\n                }\r\n                return next;\r\n            },\r\n            alwaysMergeable: function (el) {\r\n                if (!el) {\r\n                    return false;\r\n                }\r\n                if (el.nodeType === 3) {\r\n                    return scope.liveedit.merge.alwaysMergeable(scope.api.elementNode(el))\r\n                }\r\n                if (el.nodeType === 1) {\r\n                    if (/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i.test(el.tagName)) {\r\n                        return true;\r\n                    }\r\n                    if (/^(?:strong|em|i|b|li)$/i.test(el.tagName)) {\r\n                        return true;\r\n                    }\r\n                    if (/^(?:span)$/i.test(el.tagName) && !el.className) {\r\n                        return true;\r\n                    }\r\n                }\r\n                if (mw.tools.hasClass(el, 'module')) return false;\r\n                if (mw.tools.hasParentsWithClass(el, 'module')) {\r\n                    var ord = mw.tools.parentsOrder(el, ['edit', 'module']);\r\n                }\r\n                var selectors = [\r\n                        'p.element', 'div.element', 'div:not([class])',\r\n                        'h1.element', 'h2.element', 'h3.element', 'h4.element', 'h5.element', 'h6.element',\r\n                        '.edit  h1', '.edit  h2', '.edit  h3', '.edit  h4', '.edit  h5', '.edit  h6',\r\n                        '.edit p'\r\n                    ],\r\n                    final = false,\r\n                    i = 0;\r\n                for (; i < selectors.length; i++) {\r\n                    var item = selectors[i];\r\n                    if (el.matches(item)) {\r\n                        final = true;\r\n                        break;\r\n                    }\r\n                }\r\n                return final;\r\n            }\r\n        },\r\n        _manageDeleteAndBackspaceInSafeMode : {\r\n            emptyNode: function (event, node, sel, range) {\r\n                if(!canDestroy(node)) {\r\n                    return;\r\n                }\r\n                var todelete = node;\r\n                if(mw.tools.hasAnyOfClasses(node.parentNode, ['text', 'title'])){\r\n                    todelete = node.parentNode;\r\n                }\r\n                var transfer, transferPosition;\r\n                if (mw.event.is.delete(event)) {\r\n                    transfer = todelete.nextElementSibling;\r\n                    transferPosition = 'start';\r\n                } else {\r\n                    transfer = todelete.previousElementSibling;\r\n                    transferPosition = 'end';\r\n                }\r\n                var parent = todelete.parentNode;\r\n                scope.record({\r\n                    target: parent,\r\n                    value: parent.innerHTML\r\n                });\r\n                $(todelete).remove();\r\n                if(transfer && mw.tools.isEditable(transfer)) {\r\n                    setTimeout(function () {\r\n                        scope.liveedit.cursorToElement(transfer, transferPosition);\r\n                    });\r\n                }\r\n                scope.record({\r\n                    target: parent,\r\n                    value: parent.innerHTML\r\n                });\r\n            },\r\n            nodeBoundaries: function (event, node, sel, range) {\r\n                var isStart = range.startOffset === 0 || !((sel.anchorNode.data || '').substring(0, range.startOffset).replace(/\\s/g, ''));\r\n                var curr, content;\r\n                if(mw.event.is.backSpace(event) && isStart && range.collapsed){ // is at the beginning\r\n                    curr = node;\r\n                    if(mw.tools.hasAnyOfClasses(node.parentNode, ['text', 'title'])){\r\n                        curr = node.parentNode;\r\n                    }\r\n                    var prev = curr.previousElementSibling;\r\n                    if(prev && prev.nodeName === node.nodeName && canDestroy(node)) {\r\n                        content = node.innerHTML;\r\n                        scope.liveedit.cursorToElement(prev, 'end');\r\n                        prev.appendChild(range.createContextualFragment(content));\r\n                        $(curr).remove();\r\n                    }\r\n                } else if(mw.event.is.delete(event)\r\n                    && range.collapsed\r\n                    && range.startOffset === sel.anchorNode.data.replace(/\\s*$/,'').length // is at the end\r\n                    && canDestroy(node)){\r\n                    curr = node;\r\n                    if(mw.tools.hasAnyOfClasses(node.parentNode, ['text', 'title'])){\r\n                        curr = node.parentNode;\r\n                    }\r\n                    var next = curr.nextElementSibling, deleteParent;\r\n                    if(mw.tools.hasAnyOfClasses(next, ['text', 'title'])){\r\n                        next = next.firstElementChild;\r\n                        deleteParent = true;\r\n                    }\r\n                    if(next && next.nodeName === curr.nodeName) {\r\n                        content = next.innerHTML;\r\n                        setTimeout(function(){\r\n                            var parent = deleteParent ? next.parentNode.parentNode : next.parentNode;\r\n                            scope.actionRecord(function() {\r\n                                    return {\r\n                                        target: parent,\r\n                                        value: parent.innerHTML\r\n                                    };\r\n                                }, function () {\r\n                                    curr.append(range.createContextualFragment(content));\r\n                                }\r\n                            );\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        manageDeleteAndBackspace: function (event, sel) {\r\n            if (mw.event.is.delete(event) || mw.event.is.backSpace(event)) {\r\n                if(!sel.rangeCount) return;\r\n                var r = sel.getRangeAt(0);\r\n                var isSafe = scope.liveedit.isSafeMode();\r\n\r\n                if(isSafe) {\r\n                    return scope.liveedit.manageDeleteAndBackspaceInSafeMode(event, sel);\r\n                }\r\n                var nextNode = null, nextchar, nextnextchar, nextel;\r\n\r\n                if (mw.event.is.delete(event)) {\r\n                    nextchar = sel.focusNode.textContent.charAt(sel.focusOffset);\r\n                    nextnextchar = sel.focusNode.textContent.charAt(sel.focusOffset + 1);\r\n                    nextel = sel.focusNode.nextSibling || sel.focusNode.nextElementSibling;\r\n\r\n                } else {\r\n                    nextchar = sel.focusNode.textContent.charAt(sel.focusOffset - 1);\r\n                    nextnextchar = sel.focusNode.textContent.charAt(sel.focusOffset - 2);\r\n                    nextel = sel.focusNode.previouSibling || sel.focusNode.previousElementSibling;\r\n                }\r\n\r\n                if ((nextchar === ' ' || /\\r|\\n/.exec(nextchar) !== null) && sel.focusNode.nodeType === 3 && !nextnextchar) {\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                if (nextnextchar === '') {\r\n\r\n                    if (nextchar.replace(/\\s/g, '') === '' && r.collapsed) {\r\n\r\n                        if (nextel && !mw.tools.isBlockLevel(nextel) && ( typeof nextel.className === 'undefined' || !nextel.className.trim())) {\r\n                            return true;\r\n                        }\r\n                        else if (nextel && nextel.nodeName !== 'BR') {\r\n                            if (sel.focusNode.nodeName === 'P') {\r\n                                if (event.keyCode === 46) {\r\n                                    if (sel.focusNode.nextElementSibling.nodeName === 'P') {\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                                if (event.keyCode === 8) {\r\n\r\n                                    if (sel.focusNode.previousElementSibling.nodeName === 'P') {\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            event.preventDefault();\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                    else if (\r\n                        (focus.previousElementSibling === null && rootfocus.previousElementSibling === null)\r\n                        && mw.tools.hasAnyOfClassesOnNodeOrParent(rootfocus, ['nodrop', 'allow-drop'])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (nextchar === '') {\r\n\r\n                    if (mw.event.is.delete(event)) {\r\n                        nextNode = scope.liveedit.merge.getNext(sel.focusNode);\r\n                    }\r\n                    if (mw.event.is.backSpace(event)) {\r\n                        nextNode = scope.liveedit.merge.getPrev(sel.focusNode);\r\n                    }\r\n                    if (scope.liveedit.merge.alwaysMergeable(nextNode)) {\r\n                        return true;\r\n                    }\r\n\r\n                    var nonbr = scope.liveedit.merge.isInNonbreakable(nextNode)\r\n                    if (nonbr) {\r\n                        event.preventDefault();\r\n                        return false;\r\n                    }\r\n                    if (nextNode !== null && scope.liveedit.merge.isMergeable(nextNode)) {\r\n                        if (mw.event.is.delete(event)) {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'next', event)\r\n                        }\r\n                        else {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'prev', event)\r\n                        }\r\n                    }\r\n                    else {\r\n                        event.preventDefault();\r\n                    }\r\n                    if (nextNode === null) {\r\n                        nextNode = sel.focusNode.parentNode.nextSibling;\r\n                        if (!scope.liveedit.merge.isMergeable(nextNode)) {\r\n                            event.preventDefault();\r\n                        }\r\n                        if (mw.event.is.delete(event)) {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'next', event)\r\n                        }\r\n                        else {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'prev', event)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7etsnsourceRoot":""}