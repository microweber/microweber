/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/api-core/services/containers/base-class.js":
/*!*********************************************************************!*\
  !*** ./resources/assets/api-core/services/containers/base-class.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass MicroweberBaseClass {\r\n    #events = {};\r\n    on(e, f) {\r\n        this.#events[e] ? this.#events[e].push(f) : (this.#events[e] = [f]);\r\n        return this;\r\n    };\r\n    off(e, f) {\r\n        if(!this.#events[e]) {\r\n            return this;\r\n        }\r\n        if(typeof f === 'function') {\r\n            const index = this.#events[e].indexOf(f);\r\n            if(index === -1) {\r\n                return this;\r\n            }\r\n            this.#events[e].splice(index, 1);\r\n        } else {\r\n            this.#events[e] = [];\r\n        }\r\n        return this;\r\n    };\r\n\r\n    dispatch (e, f, f2) {\r\n        this.#events[e] ? this.#events[e].forEach(function (c) {\r\n            c.call(this, f);\r\n        }) : '';\r\n        return this;\r\n    };\r\n\r\n    emit (e, f) {\r\n        return this.dispatch(e, f)\r\n    };\r\n\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MicroweberBaseClass);\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/api-core/services/containers/base-class.js?");

/***/ }),

/***/ "./resources/assets/api-core/services/services/color-picker.js":
/*!*********************************************************************!*\
  !*** ./resources/assets/api-core/services/services/color-picker.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ColorPicker: () => (/* binding */ ColorPicker)\n/* harmony export */ });\n/* harmony import */ var _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../containers/base-class.js */ \"./resources/assets/api-core/services/containers/base-class.js\");\n\n\nclass ColorPicker extends _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor() {\n        super();\n        this.colorPickerInstances = [];\n        this.positionToElement = false;\n    }\n\n    setPositionToElement(element) {\n        this.positionToElement = element;\n    }\n    openColorPicker(value, callback = false, node=false) {\n\n        if (this.colorPickerInstances.length > 0) {\n            for (let i = 0; i < this.colorPickerInstances.length; i++) {\n                this.colorPickerInstances[i].remove();\n            }\n        }\n\n        let randId = this.generateRandId(10);\n\n        let colorPickerDialog = mw.top().dialog({\n            content: '<div id=\"color-picker-'+randId+'\" style=\"width:232px;min-height:325px;\"></div>',\n            title: 'Color Picker',\n            footer: false,\n            width: 240,\n            overlayClose: true,\n        });\n\n        if(node) {\n            colorPickerDialog.positionToElement(node);\n        }\n\n        if (colorPickerDialog.dialogContainer) {\n            colorPickerDialog.dialogContainer.style.padding = '0px';\n        }\n        if (colorPickerDialog.overlay) {\n            colorPickerDialog.overlay.style.backgroundColor = 'transparent';\n            colorPickerDialog.overlay.style.backdropFilter = 'none';\n        }\n\n\n        this.colorPickerInstances.push(colorPickerDialog);\n\n        var options = {\n            element: '#color-picker-' + randId,\n\n            onchange: function (color) {\n                if (callback) {\n                    callback(color);\n                }\n            }\n        };\n\n        if(value == 'rgba(0, 0, 0, 0)'){\n            value = '';\n        }\n\n\n        if(!value){\n           // options.value = '#000000FF';\n        } else {\n            options.value = value;\n        }\n\n\n        mw.colorPicker(options);\n\n        return colorPickerDialog;\n\n    }\n\n    selectColor(targetElementSelector, callback = false) {\n\n        if (this.colorPickerInstances.length > 0) {\n            for (let i = 0; i < this.colorPickerInstances.length; i++) {\n                this.colorPickerInstances[i].remove();\n            }\n        }\n\n        var target = $(targetElementSelector)[0];\n        let randId = this.generateRandId(10);\n\n        let colorPickerDialog = mw.top().dialog({\n            content: '<div id=\"color-picker-'+randId+'\" style=\"width:232px;min-height:325px;\"></div>',\n            title: 'Color Picker',\n            footer: false,\n            width: 240,\n            overlayClose: true,\n        });\n       colorPickerDialog.positionToElement(this.positionToElement);\n\n        if (colorPickerDialog.dialogContainer) {\n            colorPickerDialog.dialogContainer.style.padding = '0px';\n        }\n        if (colorPickerDialog.overlay) {\n            colorPickerDialog.overlay.style.backgroundColor = 'transparent';\n            colorPickerDialog.overlay.style.backdropFilter = 'none';\n        }\n\n        this.colorPickerInstances.push(colorPickerDialog);\n\n\n\n        mw.colorPicker({\n            element: colorPickerDialog.dialogContainer.querySelector('#color-picker-' + randId),\n            value: target.value,\n            onchange: function (color) {\n\n                target.value = color;\n                target.dispatchEvent(new Event('input'));\n\n                if (callback) {\n                    callback(color);\n                }\n            }\n        });\n      //  colorPickerDialog.center();\n    }\n\n    generateRandId(length) {\n        let result = '';\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        const charactersLength = characters.length;\n        let counter = 0;\n        while (counter < length) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n            counter += 1;\n        }\n        return result;\n    }\n}\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/api-core/services/services/color-picker.js?");

/***/ }),

/***/ "./resources/assets/api-core/services/services/single-file-picker-component.js":
/*!*************************************************************************************!*\
  !*** ./resources/assets/api-core/services/services/single-file-picker-component.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SingleFilePickerComponent: () => (/* binding */ SingleFilePickerComponent)\n/* harmony export */ });\n/* harmony import */ var _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../containers/base-class.js */ \"./resources/assets/api-core/services/containers/base-class.js\");\n\r\n\r\n\r\nclass SingleFilePickerComponent extends _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    constructor(options = {}) {\r\n        super();\r\n        const defaults = {\r\n            canEdit: true,\r\n            canDelete: true,\r\n            element: null,\r\n            template: null,\r\n            document,\r\n            id: mw.id(),\r\n            accept: 'images',\r\n            templatePrepare: () => {\r\n                if (this.file) {\r\n                    this.root.querySelector(`#js-preview-image-wrapper-${this.id}`).style.display = ``;\r\n                    this.root.querySelector(`#js-dropzone-image-${this.id}`).style.display = `none`;\r\n                } else {\r\n                    this.root.querySelector(`#js-preview-image-wrapper-${this.id}`).style.display = `none`;\r\n                    this.root.querySelector(`#js-dropzone-image-${this.id}`).style.display = ``;\r\n                }\r\n            },\r\n        }\r\n\r\n        this.settings = Object.assign({}, defaults, options);\r\n        this.document = this.settings.document;\r\n        this.element = this.settings.element;\r\n        this.file = this.settings.file;\r\n        this.id = this.settings.id;\r\n        if (typeof this.element === 'string') {\r\n            this.element = this.document.querySelector(this.settings.element);\r\n        }\r\n        this.window = this.settings.document.defaultView;\r\n\r\n        this.init();\r\n    }\r\n\r\n    templatePrepare() {\r\n        this.settings.templatePrepare.call(this);\r\n        this.makePreview();\r\n        this.root.querySelectorAll('[data-fpc-action=\"edit\"]').forEach(node => {\r\n            node.disabled = !this.#isImage(this.file);\r\n        });\r\n\r\n    }\r\n\r\n    template() {\r\n        const id = this.id;\r\n        const template = this.settings.template || `\r\n            <div class=\"mw-filepicker-component\" id=\"root-${id}\">\r\n                <div id=\"js-preview-image-wrapper-${id}\" style=\"display:none\">\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <div data-fpc-action=\"selectFile\">\r\n                             <div data-fpc-action=\"preview\"></div>\r\n                        </div>\r\n                        <div class=\"d-flex gap-2 justify-content-between w-100\">\r\n                            <div class=\"form-control-live-edit-label-wrapper d-flex align-items-center\">\r\n                                <button type=\"button\" class=\"mw-liveedit-button-actions-component btn-sm js-select-file-${id}\" data-fpc-action=\"selectFile\" title=\"${mw.lang('Change')}\">\r\n\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M440-200h80v-167l64 64 56-57-160-160-160 160 57 56 63-63v167ZM240-80q-33 0-56.5-23.5T160-160v-640q0-33 23.5-56.5T240-880h320l240 240v480q0 33-23.5 56.5T720-80H240Zm280-520v-200H240v640h480v-440H520ZM240-800v200-200 640-640Z\"/></svg>\r\n\r\n                                </button>\r\n                            </div>\r\n                            ${this.settings.canEdit ? `\r\n                            <div class=\"form-control-live-edit-label-wrapper d-flex align-items-center\">\r\n                                <button type=\"button\" class=\"mw-liveedit-button-actions-component\"  id=\"js-edit-image-${id}\" title=\"${mw.lang('Edit')}\"  data-fpc-action=\"edit\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"> <path d=\"M22.7 14.3L21.7 15.3L19.7 13.3L20.7 12.3C20.8 12.2 20.9 12.1 21.1 12.1C21.2 12.1 21.4 12.2 21.5 12.3L22.8 13.6C22.9 13.8 22.9 14.1 22.7 14.3M13 19.9V22H15.1L21.2 15.9L19.2 13.9L13 19.9M11.21 15.83L9.25 13.47L6.5 17H13.12L15.66 14.55L13.96 12.29L11.21 15.83M11 19.9V19.05L11.05 19H5V5H19V11.31L21 9.38V5C21 3.9 20.11 3 19 3H5C3.9 3 3 3.9 3 5V19C3 20.11 3.9 21 5 21H11V19.9Z\"></path></svg>\r\n                                </button>\r\n                            </div>\r\n                            ` : ''}\r\n                            ${this.settings.canDelete ? `\r\n                                <div class=\"form-control-live-edit-label-wrapper d-flex align-items-center\">\r\n                                    <button type=\"button\" class=\"mw-liveedit-button-actions-component js-remove-file-${id}\"  data-fpc-action=\"remove\">\r\n                                        <svg class=\"text-danger\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\"></path></svg>\r\n                                    </button>\r\n                                </div>\r\n\r\n                            ` : ''}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div id=\"js-dropzone-image-${id}\" class=\"dropzone mw-dropzone js-select-file-${id}\" style=\"display:none\" data-fpc-action=\"selectFile\">\r\n                    <div class=\"d-flex flex-column align-items-center gap-3\">\r\n                        <div class=\"d-flex align-items-center justify-content-center\" style=\"background:rgba(0,0,0,0.11);color:#000;width:40px;height:40px; border-radius:100%; font-size:28px;\">\r\n                            <i class=\"mdi mdi-plus\"></i>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <span>\r\n                                <b>20MB Max</b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n        this.element.innerHTML = template;\r\n\r\n        this.launch()\r\n        this.templatePrepare()\r\n\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    #isImage(url) {\r\n        return /^https?:\\/\\/.+\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(url);\r\n    }\r\n\r\n    #isVideo(url) {\r\n        return /^https?:\\/\\/.+\\.(mp4|ogg|3gp|webm)$/.test(url);\r\n    }\r\n\r\n    #isAudio(url) {\r\n        return /^https?:\\/\\/.+\\.(mp3)$/.test(url);\r\n    }\r\n\r\n\r\n\r\n    previewImage () {\r\n        return `<img src=\"${this.file}\" class=\"w-100\" style=\"border-radius:4px;\">`;\r\n    }\r\n\r\n    previewVideo () {\r\n        return `<video width=\"100px\" src=\"${this.file}\" muted loop playsinline style=\"border-radius:4px;\"></video>`;\r\n    }\r\n\r\n    previewAudio () {\r\n        return `<video width=\"100px\" src=\"${this.file}\" controls playsinline style=\"border-radius:4px;\"></video>`;\r\n    }\r\n\r\n    generatePreview() {\r\n        if(this.#isImage(this.file)){\r\n            return this.previewImage();\r\n        } else if(this.#isVideo(this.file)){\r\n            return this.previewVideo();\r\n        } else if(this.#isAudio(this.file)){\r\n            return this.previewAudio()\r\n        }\r\n        return '';\r\n    }\r\n\r\n    makePreview() {\r\n        const previewNodes = this.root.querySelectorAll('[data-fpc-action=\"preview\"]');\r\n\r\n        if(!this.file) {\r\n            previewNodes.forEach(node => {\r\n                node.innerHTML = '';\r\n            });\r\n        } else {\r\n            previewNodes.forEach(node => {\r\n                const preview = this.generatePreview();\r\n\r\n                node.dataset.preview = !!preview;\r\n                node.innerHTML = preview;\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    setFile(src) {\r\n        this.file = src;\r\n        this.templatePrepare();\r\n    }\r\n\r\n    removeFile() {\r\n\r\n\r\n        const previewNodes = this.root.querySelectorAll('[data-fpc-action=\"preview\"]');\r\n        this.file = null;\r\n        this.root.querySelectorAll('[data-fpc-action=\"preview\"]');\r\n        previewNodes.forEach(node => {\r\n\r\n            node.innerHTML = '';\r\n        });\r\n        this.templatePrepare();\r\n    }\r\n\r\n    #eventsHandles = {\r\n        edit: async (event, node, scope) => {\r\n            var src = await mw.top().app.editImageDialog.editImageUrl(this.file);\r\n            if(src) {\r\n                this.file = src;\r\n                this.templatePrepare();\r\n                this.dispatch('change')\r\n                this.dispatch('edit')\r\n            }\r\n        },\r\n        remove: (event, node, scope) => {\r\n            this.removeFile();\r\n            this.dispatch('change')\r\n            this.dispatch('remove')\r\n        },\r\n        selectFile: (event, node, scope) => {\r\n            var dialog;\r\n            var picker = new mw.filePicker({\r\n                type: this.settings.accept,\r\n                label: false,\r\n                autoSelect: false,\r\n                footer: true,\r\n                _frameMaxHeight: true,\r\n                onResult: (res) => {\r\n                    var url = res.src ? res.src : res;\r\n                    if(!url) return;\r\n                    url = url.toString();\r\n                    this.file = url;\r\n                    this.templatePrepare();\r\n                    dialog.remove();\r\n                    this.dispatch('change')\r\n                    this.dispatch('selectFile')\r\n                }\r\n            });\r\n            dialog = mw.top().dialog({\r\n                id: 'mw-file-picker-dialog',\r\n                content: picker.root,\r\n                title: mw.lang('Select file'),\r\n                footer: false,\r\n                width: 860\r\n            })\r\n        }\r\n    };\r\n\r\n    handleEvents() {\r\n        this.root.querySelectorAll('[data-fpc-action]').forEach(node => {\r\n            const action = node.dataset.fpcAction.trim();\r\n            if (action && this.#eventsHandles[action]) {\r\n                node.addEventListener('click', e => this.#eventsHandles[action](e, node, this));\r\n            }\r\n        })\r\n    }\r\n\r\n    launch() {\r\n        this.root = this.document.getElementById(`root-${this.id}`);\r\n        this.handleEvents()\r\n    }\r\n\r\n\r\n    init() {\r\n\r\n        if(!this.element) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.template();\r\n        return this;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/api-core/services/services/single-file-picker-component.js?");

/***/ }),

/***/ "./resources/assets/components/autocomplete.js":
/*!*****************************************************!*\
  !*** ./resources/assets/components/autocomplete.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nmw.autoComplete = function(options){\r\n    var scope = this;\r\n    this.prepare = function(options){\r\n        options = options || {};\r\n        if(!options.data && !options.ajaxConfig) return;\r\n        var defaults = {\r\n            size:'normal',\r\n            multiple:false,\r\n            map: { title:'title', value:'id' },\r\n            titleDecorator: function (title, data) {\r\n                return title;\r\n            }\r\n        };\r\n        this.options = $.extend({}, defaults, options);\r\n        this.options.element = mw.$(this.options.element)[0];\r\n        if(!this.options.element){\r\n            return;\r\n        }\r\n        this.element = this.options.element;\r\n        this.data = this.options.data;\r\n        this.searchTime = null;\r\n        this.searchTimeout = this.options.data ? 0 : 500;\r\n        this.results = [];\r\n        this.map = this.options.map;\r\n        this.selected = this.options.selected || [];\r\n    };\r\n\r\n    this.createValueHolder = function(){\r\n        this.valueHolder = document.createElement('div');\r\n        this.valueHolder.className = 'mw-autocomplete-value';\r\n        return this.valueHolder;\r\n    };\r\n    this.createListHolder = function(){\r\n        this.listHolder = document.createElement('ul');\r\n        this.listHolder.className = 'mw-ui-box mw-ui-navigation mw-autocomplete-list';\r\n        this.listHolder.style.display = 'none';\r\n        return this.listHolder;\r\n    };\r\n\r\n    this.createWrapper = function(){\r\n        this.wrapper = document.createElement('div');\r\n        // this.wrapper.className = 'mw-ui-field w100 mw-autocomplete mw-autocomplete-multiple-' + this.options.multiple;\r\n        this.wrapper.className = 'form-select ps-4 mw-live-edit-search-dropdown mw-autocomplete mw-autocomplete-multiple-' + this.options.multiple;\r\n        return this.wrapper;\r\n    };\r\n\r\n    this.createField = function(){\r\n        this.inputField = document.createElement('input');\r\n        this.inputField.className = 'mw-ui-invisible-field mw-autocomplete-field mw-ui-field-' + this.options.size;\r\n        this.inputField.name = this.options.name || 'search';\r\n        this.inputField.autocomplete = 'off';\r\n        if(this.options.placeholder){\r\n            this.inputField.placeholder = this.options.placeholder;\r\n        }\r\n        mw.$(this.inputField).on('input focus', function(e){\r\n            var val = e.type === 'focus' ? '' : this.value;\r\n            scope.search(val);\r\n        });\r\n        return this.inputField;\r\n    };\r\n\r\n    this.buildUI = function(){\r\n        this.createWrapper();\r\n        this.wrapper.appendChild(this.createValueHolder());\r\n        this.wrapper.appendChild(this.createField());\r\n        this.wrapper.appendChild(this.createListHolder());\r\n        this.element.appendChild(this.wrapper);\r\n    };\r\n\r\n    this.createListItem = function(data){\r\n        var li = document.createElement('li');\r\n        li.value = this.dataValue(data);\r\n        var img = this.dataImage(data);\r\n\r\n        var url = 'javascript:void(0);';\r\n        if(data.url){\r\n            url = data.url;\r\n        }\r\n\r\n\r\n        mw.$(li)\r\n        .append( '<a  onclick=\"return false;\" href=\"'+url+'\">'+this.dataTitle(data)+'</a>' )\r\n        .on('click', function(e){\r\n            scope.select(data);\r\n        });\r\n        if(img){\r\n            mw.$('a',li).prepend(img);\r\n        }\r\n        return li;\r\n    };\r\n\r\n    this.uniqueValue = function(){\r\n        var uniqueIds = [], final = [];\r\n        this.selected.forEach(function(item){\r\n            var val = scope.dataValue(item);\r\n            if(uniqueIds.indexOf(val) === -1){\r\n                uniqueIds.push(val);\r\n                final.push(item);\r\n            }\r\n        });\r\n        this.selected = final;\r\n    };\r\n\r\n    this.select = function(item, triggerChange = true){\r\n        if(this.options.multiple){\r\n            this.selected.push(item);\r\n        }\r\n        else{\r\n            this.selected = [item];\r\n        }\r\n        this.rendSelected();\r\n        if(!this.options.multiple){\r\n            this.listHolder.style.display = 'none';\r\n        }\r\n        if(triggerChange){\r\n            mw.$(this).trigger('change', [this.selected]);\r\n        }\r\n      //  mw.$(this).trigger('change', [this.selected]);\r\n    };\r\n\r\n    this.rendSingle = function(){\r\n        var item = this.selected[0];\r\n        this.inputField.value = item ? item[this.map.title] : '';\r\n        this.valueHolder.innerHTML = '';\r\n        var img = this.dataImage(item);\r\n        if(img){\r\n            this.valueHolder.appendChild(img);\r\n        }\r\n\r\n    };\r\n\r\n    this.rendSelected = function(){\r\n        if(this.options.multiple){\r\n            this.uniqueValue();\r\n            this.chips.setData(this.selected);\r\n        }\r\n        else{\r\n            this.rendSingle();\r\n        }\r\n    };\r\n\r\n    this.rendResults = function(){\r\n        mw.$(this.listHolder).empty().show();\r\n        if(typeof this.results === 'string' || !this.results || typeof this.results.length === 'undefined') {\r\n            console.warn('results object must be array');\r\n        }\r\n        $.each(this.results, function(){\r\n            scope.listHolder.appendChild(scope.createListItem(this));\r\n        });\r\n    };\r\n\r\n    this.dataValue = function(data){\r\n        if(!data) return;\r\n        if(typeof data === 'string'){\r\n            return data;\r\n        }\r\n        else{\r\n            return data[this.map.value];\r\n        }\r\n    };\r\n    this.dataImage = function(data){\r\n        if(!data) return;\r\n        if(data.picture){\r\n            data.image = data.picture;\r\n        }\r\n        if(data.image){\r\n            var img = document.createElement('span');\r\n            img.className = 'mw-autocomplete-img';\r\n            img.style.backgroundImage = 'url(' + data.image + ')';\r\n            return img;\r\n        }\r\n    };\r\n    this.dataTitle = function(data){\r\n        if (!data) return;\r\n        var title;\r\n        if (typeof data === 'string') {\r\n            title = data;\r\n        }\r\n        else {\r\n            title = data[this.map.title];\r\n        }\r\n\r\n        return this.options.titleDecorator(title, data);\r\n    };\r\n\r\n    this.searchRemote = function(val){\r\n        var config = mw.tools.cloneObject(this.options.ajaxConfig);\r\n\r\n        if(config.data){\r\n            if(typeof config.data === 'string'){\r\n                config.data = config.data.replace('${val}',val);\r\n            }\r\n            else{\r\n               $.each(config.data, function(key,value){\r\n\r\n                    if(value.indexOf && value.indexOf('${val}') !==-1 ){\r\n                        config.data[key] = value.replace('${val}', val);\r\n                    }\r\n               });\r\n            }\r\n        }\r\n        if(config.url){\r\n            config.url = config.url.replace('${val}',val);\r\n        }\r\n        mw.spinner({element: this.element, decorate: true, size: 22});\r\n        this.element.classList.add('mw-autocomplete-loading')\r\n        var xhr = $.ajax(config);\r\n        xhr.done(function(data){\r\n\r\n            if(data.data){\r\n                scope.data = data.data;\r\n            }\r\n            else{\r\n               scope.data = data;\r\n            }\r\n            scope.results = scope.data || [];\r\n            scope.rendResults();\r\n        })\r\n        .always(function(){\r\n            scope.searching = false;\r\n            mw.spinner({element: scope.element}).remove()\r\n            scope.element.classList.remove('mw-autocomplete-loading')\r\n        });\r\n    };\r\n\r\n    this.searchLocal = function(val){\r\n\r\n        this.results = [];\r\n        var toSearch;\r\n        $.each(this.data, function(){\r\n           if(typeof this === 'string'){\r\n                toSearch = this.toLowerCase();\r\n           }\r\n           else{\r\n               toSearch = this[scope.map.title].toLowerCase();\r\n           }\r\n           if(toSearch.indexOf(val) !== -1){\r\n            scope.results.push(this);\r\n           }\r\n        });\r\n       this.rendResults();\r\n       scope.searching = false;\r\n    };\r\n\r\n    this.search = function(val){\r\n        if(scope.searching) return;\r\n        val = val || '';\r\n        val = val.trim().toLowerCase();\r\n\r\n        if(this.options.data){\r\n            this.searchLocal(val);\r\n        }\r\n        else{\r\n            clearTimeout(this.searchTime);\r\n            setTimeout(function(){\r\n                scope.searching = true;\r\n                scope.searchRemote(val);\r\n            }, this.searchTimeout);\r\n        }\r\n    };\r\n\r\n    this.init = function(){\r\n        this.prepare(options);\r\n        this.buildUI();\r\n        if(this.options.multiple){\r\n            this.chips = new mw.chips({\r\n                element:this.valueHolder,\r\n                data:[]\r\n            });\r\n        }\r\n        this.rendSelected();\r\n        this.handleEvents();\r\n    };\r\n\r\n    this.handleEvents = function(){\r\n        mw.$(document.body).on('click', function(e){\r\n            if(!mw.tools.hasParentsWithClass(e.target, 'mw-autocomplete')){\r\n                scope.listHolder.style.display = 'none';\r\n            }\r\n        });\r\n        if(mw.top().app && mw.top().app.canvas) {\r\n            mw.top().app.canvas.on('canvasDocumentClick', function () {\r\n                scope.listHolder.style.display = 'none';\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    this.init();\r\n\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/autocomplete.js?");

/***/ }),

/***/ "./resources/assets/components/color.js":
/*!**********************************************!*\
  !*** ./resources/assets/components/color.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nmw.color = {\r\n    rgbaToHex: function (orig) {\r\n        var a, isPercent,\r\n            rgb = orig.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i),\r\n            alpha = (rgb && rgb[4] || \"\").trim(),\r\n            hex = rgb ?\r\n                (rgb[1] | 1 << 8).toString(16).slice(1) +\r\n                (rgb[2] | 1 << 8).toString(16).slice(1) +\r\n                (rgb[3] | 1 << 8).toString(16).slice(1) : orig;\r\n\r\n        if (alpha !== '') {\r\n            a = alpha;\r\n        } else {\r\n            a = '01';\r\n        }\r\n        a = ((a * 255) | 1 << 8).toString(16).slice(1)\r\n        hex = hex + a;\r\n\r\n        return '#' + hex;\r\n    },\r\n    rgbToHex : function(color) {\r\n        if(typeof color == 'object'){\r\n          color = color.r + ',' + color.g + ',' + color.b;\r\n        }\r\n        if(color.includes('rgb')){\r\n          color = color.replace(/rgba/g, '').replace(/rgb/g, '').replace(/\\(|\\)/g, \"\").replace(/\\s/g, \"\");\r\n        }\r\n        color = color.split(',');\r\n        if(color !== 'transparent'){\r\n          return \"#\" + ((1 << 24) + (parseInt(color[0]) << 16) + (parseInt(color[1]) << 8) + parseInt(color[2])).toString(16).slice(1);\r\n        }\r\n        else{\r\n          return 'transparent';\r\n        }\r\n    },\r\n    rgbOrRgbaToHex: function (color) {\r\n\r\n        if(!color) return '';\r\n\r\n      if(color.indexOf('#') !== -1) {\r\n        return color\r\n      }\r\n        if(color.indexOf('rgb(') === 0) {\r\n            return this.rgbToHex(color)\r\n        } else {\r\n            return this.rgbaToHex(color)\r\n        }\r\n    },\r\n    hexToRgb: function(hex) {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    },\r\n    colorParse:function(CSScolor){\r\n        CSScolor = CSScolor || 'rgb(0,0,0,0)';\r\n        var final = {r:0,g:0,b:0,alpha:0};\r\n        if(CSScolor.includes('rgb')){\r\n          var parse = CSScolor.replace(/rgba/g, '').replace(/rgb/g, '').replace(/\\(|\\)/g, \"\").replace(/\\s/g, \"\").split(',');\r\n          final.r = parseInt(parse[0], 10);\r\n          final.g = parseInt(parse[1], 10);\r\n          final.b = parseInt(parse[2], 10);\r\n          final.alpha = Number((parse[3]||1));\r\n          return final;\r\n        }\r\n        else{\r\n          final = mw.color.hexToRgb(CSScolor);\r\n          final.alpha = 1\r\n          return final;\r\n        }\r\n    },\r\n    getBrightness: function(color) {\r\n      var rgb = this.colorParse(color);\r\n      return {\r\n          color: (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000,\r\n          alpha: rgb.alpha * 100\r\n      };\r\n    },\r\n    isDark: function(color) {\r\n      var brightness = this.getBrightness(color);\r\n      return brightness.color < 128 && brightness.alpha > 22;\r\n    },\r\n    isLight: function(color) {\r\n      return !this.isDark(color);\r\n    },\r\n    hexToRgbaCSS: function(hex, alpha) {\r\n        alpha = alpha || 1;\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? ('rgba('+parseInt(result[1], 16)+','+parseInt(result[2], 16)+','+parseInt(result[3], 16)+','+alpha+')') : '';\r\n    },\r\n    random: function(){\r\n        return '#' + Math.floor( Math.random() * 16777215 ).toString(16);\r\n    },\r\n    decimalToHex: function(decimal){\r\n        var hex = decimal.toString(16);\r\n        if (hex.length == 1) hex = '0' + hex;\r\n        return hex;\r\n    },\r\n    hexToDecimal: function(hex){\r\n        return parseInt(hex,16);\r\n    },\r\n    oppositeColor: function(color) {\r\n        color = !color.includes(\"#\") ? color : color.replace(\"#\", '');\r\n        return mw.color.decimalToHex(255 - mw.color.hexToDecimal(color.substr(0,2)))\r\n          + mw.color.decimalToHex(255 - mw.color.hexToDecimal(color.substr(2,2)))\r\n          + mw.color.decimalToHex(255 - mw.color.hexToDecimal(color.substr(4,2)));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/color.js?");

/***/ }),

/***/ "./resources/assets/components/colorpicker.js":
/*!****************************************************!*\
  !*** ./resources/assets/components/colorpicker.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n;(function () {\r\n    mw._colorPickerDefaults = {\r\n        skin: 'mw-tooltip-default',\r\n        position: 'bottom-center',\r\n        onchange: false\r\n    };\r\n\r\n\r\n    var _isValidColorTest = new Option();\r\n    var isValidColor = (color) => {\r\n        _isValidColorTest.style.color = '';\r\n        _isValidColorTest.style.color = color;\r\n        return _isValidColorTest.style.color !== '';\r\n    }\r\n\r\n    var colorPickers = [];\r\n\r\n    mw._colorPicker = function (options) {\r\n\r\n\r\n        if (!mw.tools.colorPickerColors) {\r\n            mw.tools.colorPickerColors = [];\r\n\r\n\r\n\r\n            if (typeof mw.top().app !== 'undefined'\r\n                && typeof mw.top().app.templateSettings !== 'undefined'\r\n                && typeof mw.top().app.templateSettings.colorPaletteManager !== 'undefined') {\r\n\r\n                var colorsFromPallete = mw.top().app.templateSettings.colorPaletteManager.getColors();\r\n\r\n                if (colorsFromPallete.length > 0) {\r\n                    colorsFromPallete.forEach(function (color) {\r\n                        if (mw.tools.colorPickerColors.indexOf(color) === -1) {\r\n                            mw.tools.colorPickerColors.push(color);\r\n                        }\r\n                    });\r\n                }\r\n            }   else if (typeof mw.color !== 'undefined' && typeof mw.color.rgbToHex !== 'undefined') {\r\n\r\n                //legacy mode\r\n\r\n                var colorpicker_els = mw.top().$(\".btn,h1,h2,h3,h4,h5\");\r\n                if (colorpicker_els.length > 0) {\r\n                    colorpicker_els.each(function () {\r\n                        var css = parent.getComputedStyle(this, null);\r\n                        if (css !== null) {\r\n                            if (mw.tools.colorPickerColors.indexOf(css.color) === -1) {\r\n                                mw.tools.colorPickerColors.push(mw.color.rgbToHex(css.color));\r\n                            }\r\n                            if (mw.tools.colorPickerColors.indexOf(css.backgroundColor) === -1) {\r\n                                mw.tools.colorPickerColors.push(mw.color.rgbToHex(css.backgroundColor));\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n        var proto = this;\r\n        if (!options) {\r\n            return false;\r\n        }\r\n\r\n        var settings = $.extend({}, mw._colorPickerDefaults, options);\r\n\r\n        if (settings.element === undefined || settings.element === null) {\r\n            return false;\r\n        }\r\n\r\n\r\n        var $el = mw.$(settings.element);\r\n        if ($el[0] === undefined) {\r\n            return false;\r\n        }\r\n        if ($el[0].mwcolorPicker) {\r\n            return $el[0].mwcolorPicker;\r\n        }\r\n\r\n\r\n        $el[0].mwcolorPicker = this;\r\n        this.element = $el[0];\r\n        if ($el[0].mwToolTipBinded !== undefined) {\r\n            return false;\r\n        }\r\n        if (!settings.method) {\r\n            if (this.element.nodeName === 'DIV') {\r\n                settings.method = 'inline';\r\n            }\r\n        }\r\n        this.settings = settings;\r\n\r\n        $el[0].mwToolTipBinded = true;\r\n\r\n\r\n        var sett = {\r\n            showAlpha: true,\r\n            showHSL: false,\r\n            showRGB: false,\r\n            showHEX: true,\r\n            //     paletteEditable: true,\r\n            palette: mw.tools.colorPickerColors\r\n        };\r\n\r\n\r\n\r\n        if (typeof mw.top().app !== 'undefined'\r\n            && typeof mw.top().app.templateSettings !== 'undefined'\r\n            && typeof mw.top().app.templateSettings.colorPaletteManager !== 'undefined') {\r\n\r\n            var colorsFromPallete = mw.top().app.templateSettings.colorPaletteManager.getColors();\r\n\r\n            if (colorsFromPallete.length > 0) {\r\n                colorsFromPallete.forEach(function (color) {\r\n                    if (mw.tools.colorPickerColors.indexOf(color) === -1) {\r\n                        mw.tools.colorPickerColors.push(color);\r\n                    }\r\n                });\r\n            }\r\n            sett.palette = mw.tools.colorPickerColors;\r\n            sett.paletteEditable = true;\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (settings.value) {\r\n            sett.color = settings.value;\r\n\r\n        }\r\n        if (typeof settings.showRGB !== 'undefined') {\r\n            sett.showRGB = settings.showRGB\r\n        }\r\n        if (typeof settings.showHEX !== 'undefined') {\r\n            sett.showHEX = settings.showHEX\r\n        }\r\n\r\n        if (typeof settings.showHSL !== 'undefined') {\r\n            sett.showHSL = settings.showHSL\r\n        }\r\n        var frame;\r\n        this.setColor = function (color) {\r\n            frame.setColor(color)\r\n        };\r\n        if (settings.method === 'inline') {\r\n\r\n            sett.attachTo = $el[0];\r\n\r\n\r\n            frame = sett.attachTo.ownerDocument.defaultView.AColorPicker.createPicker(sett); // AColorPicker works only with local window\r\n            frame.on('coloradd', (picker, color) => {\r\n                if (typeof mw.top().app !== 'undefined'\r\n                    && typeof mw.top().app.templateSettings !== 'undefined'\r\n                    && typeof mw.top().app.templateSettings.colorPaletteManager !== 'undefined') {\r\n                     mw.top().app.templateSettings.colorPaletteManager.addToPaletteMemory(color);\r\n                }\r\n            });\r\n            frame.on('colorremove', (picker, color) => {\r\n                if (typeof mw.top().app !== 'undefined'\r\n                    && typeof mw.top().app.templateSettings !== 'undefined'\r\n                    && typeof mw.top().app.templateSettings.colorPaletteManager !== 'undefined') {\r\n                    mw.top().app.templateSettings.colorPaletteManager.removeFromPaletteMemory(color);\r\n                }\r\n            });\r\n\r\n            frame.onchange = function (data) {\r\n\r\n                if (proto.settings.onchange) {\r\n                    proto.settings.onchange(data.color);\r\n                }\r\n\r\n                if ($el[0].nodeName === 'INPUT') {\r\n                    var val = val === 'transparent' ? val : '#' + val;\r\n                    $el.val(val);\r\n                    var prev = $el[0].previousElementSibling\r\n                    if (prev && prev.classList.contains('mw-field-color-indicator')) {\r\n                        var dp = prev.querySelector('.mw-field-color-indicator-display')\r\n                        if (dp) {\r\n                            dp.style.backgroundColor = val\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            var tip = mw.tooltip(settings), $tip = mw.$(tip).hide();\r\n\r\n            colorPickers.push(tip)\r\n            this.tip = tip;\r\n\r\n            mw.$('.mw-tooltip-content', tip).empty().css({\r\n                padding: 0\r\n            });\r\n            sett.attachTo = mw.$('.mw-tooltip-content', tip)[0]\r\n\r\n            frame = AColorPicker.createPicker(sett);\r\n\r\n\r\n            frame.on('coloradd', (picker, color) => {\r\n                if (typeof mw.top().app !== 'undefined'\r\n                    && typeof mw.top().app.templateSettings !== 'undefined'\r\n                    && typeof mw.top().app.templateSettings.colorPaletteManager !== 'undefined') {\r\n                    mw.top().app.templateSettings.colorPaletteManager.addToPaletteMemory(color);\r\n                }\r\n            });\r\n            frame.on('colorremove', (picker, color) => {\r\n                if (typeof mw.top().app !== 'undefined'\r\n                    && typeof mw.top().app.templateSettings !== 'undefined'\r\n                    && typeof mw.top().app.templateSettings.colorPaletteManager !== 'undefined') {\r\n                    mw.top().app.templateSettings.colorPaletteManager.removeFromPaletteMemory(color);\r\n                }\r\n            });\r\n\r\n\r\n\r\n            frame.onchange = function (data) {\r\n\r\n                if (frame.pause) {\r\n                    return;\r\n                }\r\n\r\n                if (proto.settings.onchange) {\r\n                    proto.settings.onchange(data.color);\r\n                }\r\n\r\n                if ($el[0].nodeName === 'INPUT') {\r\n                    $el.val(data.color);\r\n                    var prev = $el[0].previousElementSibling\r\n                    if (prev && prev.classList.contains('mw-field-color-indicator')) {\r\n                        var dp = prev.querySelector('.mw-field-color-indicator-display');\r\n                        if (dp) {\r\n                            dp.style.backgroundColor = data.color\r\n                        }\r\n\r\n                    }\r\n                }\r\n            };\r\n            if ($el[0].nodeName === 'INPUT') {\r\n                $el.on('input', function (e) {\r\n                    var val = this.value.trim();\r\n                    if (!val) {\r\n                        val = 'transparent';\r\n                    }\r\n                    if (isValidColor(val)) {\r\n                        var prev = $el[0].previousElementSibling\r\n                        if (prev && prev.classList.contains('mw-field-color-indicator')) {\r\n                            var dp = prev.querySelector('.mw-field-color-indicator-display')\r\n                            if (dp) {\r\n                                dp.style.backgroundColor = val\r\n                            }\r\n                        }\r\n                        if (proto.settings.onchange) {\r\n                            proto.settings.onchange(val);\r\n                        }\r\n                    }\r\n                });\r\n                $el.on('focus', function (e) {\r\n                    if (this.value.trim()) {\r\n                        frame.pause = true;\r\n                        frame.color = this.value;\r\n                        setTimeout(function () {\r\n                            frame.pause = false;\r\n                        });\r\n                    }\r\n                    colorPickers.forEach(function (clpckr) {\r\n\r\n                        if (clpckr !== tip) {\r\n                            mw.$(clpckr).hide();\r\n                        }\r\n                    });\r\n                    mw.$(tip).show();\r\n                    mw.tools.tooltip.setPosition(tip, $el[0], settings.position)\r\n\r\n                });\r\n            } else {\r\n                $el.on('click', function (e) {\r\n                    colorPickers.forEach(function (clpckr) {\r\n\r\n                        if (clpckr !== tip) {\r\n                            mw.$(clpckr).hide();\r\n                        }\r\n                    });\r\n                    mw.$(tip).toggle();\r\n                    mw.tools.tooltip.setPosition(tip, $el[0], settings.position);\r\n                });\r\n            }\r\n            var documents = [document];\r\n            if (self !== mw.top().win) {\r\n                documents.push(mw.top().win.document);\r\n            }\r\n\r\n\r\n            $el.addClass('mw-color-picker-field')\r\n\r\n        }\r\n\r\n\r\n        if (frame && frame.element) {\r\n            //append remove color\r\n            var frameEl = $(frame.element).find('.a-color-picker-palette').first()[0];\r\n            var removeColorButton = mw.element('<div class=\"a-color-picker-palette-color color-picker-palette-color-transparent\"  style=\"background-image: repeating-conic-gradient(silver 0 25%, transparent 0 50%);background-size: 9px 9px;\"></div>')\r\n            removeColorButton.on('click', function (e) {\r\n                e.stopPropagation()\r\n                if (proto.settings.onchange) {\r\n                    proto.settings.onchange('rgb(0 0 0 / 0%)');\r\n                }\r\n            });\r\n\r\n            var resetColorButton = mw.element(`\r\n                <div\r\n                    class=\"a-color-picker-palette-color color-picker-palette-color-reset\"></div>\r\n                    `)\r\n            resetColorButton.on('click', function (e) {\r\n\r\n\r\n                e.stopPropagation()\r\n                if (proto.settings.onchange) {\r\n                    proto.settings.onchange('revert-layer');\r\n                }\r\n            });\r\n\r\n\r\n            frameEl.append(removeColorButton.get(0))\r\n            frameEl.append(resetColorButton.get(0))\r\n\r\n\r\n\r\n\r\n            if (typeof mw.top().app !== 'undefined'\r\n                && typeof mw.top().app.templateSettings !== 'undefined'\r\n                && typeof mw.top().app.templateSettings.colorPaletteManager !== 'undefined') {\r\n                        if (proto.settings.value) {\r\n                            var inMemory = mw.top().app.templateSettings.colorPaletteManager.isInPaletteMemory(proto.settings.value);\r\n                                if(inMemory) {\r\n                                    var removeColorFromMemory = mw.element(`\r\n                                                            <div\r\n                                                                class=\"a-color-picker-palette-color color-picker-palette-color-remove-from-palette\"></div>\r\n                                                                `)\r\n                                    removeColorFromMemory.on('click', function (e) {\r\n                                        e.stopPropagation()\r\n                                        if (proto.settings.value) {\r\n                                            var color = proto.settings.value;\r\n\r\n                                            mw.top().app.templateSettings.colorPaletteManager.removeFromPaletteMemory(color);\r\n\r\n                                            if (proto.settings.onchange) {\r\n                                                proto.settings.onchange('revert-layer');\r\n                                            }\r\n                                        }\r\n\r\n                                    });\r\n                                    frameEl.append(removeColorFromMemory.get(0));\r\n\r\n\r\n                                }\r\n                        }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        if (this.tip) {\r\n            this.show = function () {\r\n                mw.$(this.tip).show();\r\n                mw.tools.tooltip.setPosition(this.tip, this.settings.element, this.settings.position)\r\n            };\r\n            this.hide = function () {\r\n                mw.$(this.tip).hide();\r\n            };\r\n            this.toggle = function () {\r\n                var tip = mw.$(this.tip);\r\n                if (tip.is(':visible')) {\r\n                    this.hide();\r\n                } else {\r\n                    $el.focus();\r\n                    this.show();\r\n                }\r\n            }\r\n        }\r\n        var prev = $el[0].previousElementSibling\r\n        if (prev && prev.classList.contains('mw-field-color-indicator')) {\r\n            var dp = prev.querySelector('.mw-field-color-indicator-display')\r\n            if (dp) {\r\n                dp.style.backgroundColor = $el[0].value\r\n            }\r\n        }\r\n\r\n    };\r\n    mw.colorPicker = function (o) {\r\n\r\n        return new mw._colorPicker(o);\r\n    };\r\n\r\n    $(document).ready(function () {\r\n        $(document).on('click', function (e) {\r\n            if (!mw.tools.hasParentsWithClass(e.target, 'a-color-picker') && !mw.tools.hasClass(e.target, 'mw-color-picker-field')) {\r\n                colorPickers.forEach(function (clpckr) {\r\n\r\n                    mw.$(clpckr).hide();\r\n\r\n                });\r\n            }\r\n\r\n        })\r\n    })\r\n\r\n})();\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/colorpicker.js?");

/***/ }),

/***/ "./resources/assets/components/components.js":
/*!***************************************************!*\
  !*** ./resources/assets/components/components.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n    mw.components = {\r\n    _rangeOnce: false,\r\n    'range': function(el){\r\n\r\n        var options = this._options(el);\r\n        var defaults = {\r\n            range: 'min',\r\n            animate: \"fast\"\r\n        };\r\n        var ex = {}, render = el;\r\n        if(el.nodeName === 'INPUT'){\r\n            el._pauseChange = false;\r\n            el.type = 'text';\r\n            render = document.createElement('div');\r\n            $(el).removeClass('mw-range');\r\n            $(render).addClass('mw-range');\r\n            $(el).after(render);\r\n            ex = {\r\n                slide: function( event, ui ) {\r\n                    el._pauseChange = true;\r\n                   $(el).val(ui.value).trigger('change').trigger('input');\r\n                    setTimeout(function () {\r\n                        el._pauseChange = false;\r\n                    }, 78);\r\n                }\r\n            };\r\n\r\n        }\r\n        var settings = $.extend({}, defaults, options, ex);\r\n        if(el.min){\r\n            settings.min = parseFloat(el.min);\r\n        }\r\n        if(el.max){\r\n            settings.max = parseFloat(el.max);\r\n        }\r\n        if(el.value){\r\n            settings.value = parseFloat(el.value);\r\n        }\r\n        mw.$(render)\r\n            .slider(settings)\r\n            .on('mousedown touchstart', function(){\r\n                mw.$(this).addClass('active');\r\n            });\r\n        $(el).on('input', function(){\r\n            mw.$(render).slider( \"value\", this.value );\r\n        });\r\n        if(!mw.components._rangeOnce) {\r\n            mw.components._rangeOnce = true;\r\n            mw.$(document.body).on('mouseup touchend', function(){\r\n                mw.$('.mw-range.active').removeClass('active');\r\n            });\r\n        }\r\n    },\r\n    'color-picker': function(el){\r\n        var options = this._options(el);\r\n        var defaults = {\r\n            position: 'bottom-center'\r\n        };\r\n        var settings = $.extend({}, defaults, options);\r\n        var nav = document.createElement('div');\r\n        nav.className = 'mw-ui-btn-nav mw-color-picker-holder';\r\n        var view = document.createElement('div');\r\n        view.className = 'mw-ui-btn';\r\n        view.innerHTML = '<span class=\"mw-ui-btn-img\"></span>';\r\n        nav.appendChild(view);\r\n        var inputEl;\r\n        if(el.nodeName === 'INPUT'){\r\n            inputEl = el;\r\n            mw.$(el).addClass('mw-ui-field').after(nav);\r\n            nav.appendChild(el);\r\n            mw.$('.mw-ui-btn-img', view).css(\"background-color\", el.value);\r\n            inputEl._time = null;\r\n        }\r\n\r\n\r\n        var picker = mw.colorPicker({\r\n            element:inputEl,\r\n            position:settings.position,\r\n            onchange:function(color){\r\n                mw.$('.mw-ui-btn-img', view).css(\"background-color\", color);\r\n                mw.$(inputEl).trigger('change');\r\n            }\r\n        });\r\n        mw.$(view).on(\"click\", function(){\r\n            setTimeout(function(){\r\n                picker.toggle();\r\n            }, 10);\r\n        });\r\n    },\r\n    'file-uploader':function(el){\r\n        var options = this._options(el);\r\n        var defaults = {\r\n            element: el\r\n        };\r\n        var settings = $.extend({}, defaults, options);\r\n        var ch = mw.$(el).attr(\"onchange\");\r\n\r\n        mw.fileWindow({\r\n            types:'media',\r\n            change:function(url){\r\n                try{\r\n                    eval(ch);\r\n                }\r\n                catch(err){}\r\n            }\r\n        });\r\n    },\r\n    'modules-tabs':function(el){\r\n        var options = this._options(el);\r\n        options.breakPoint = 100; //makes accordion if less then 100px\r\n        if(window.live_edit_sidebar) {\r\n            mw.$(el).addClass('mw-accordion-window-height')\r\n            options.breakPoint = 800; //makes accordion if less then 800px\r\n        }\r\n        var accordion = this.accordion(el);\r\n        var tb = new mw.tabAccordion(options, accordion);\r\n    },\r\n    'tab-accordion':function(el){\r\n       var options = this._options(el);\r\n       var accordion = this.accordion(el);\r\n       var tb = new mw.tabAccordion(options, accordion);\r\n    },\r\n    accordion:function(el){\r\n        if(!el || el._accordion) return;\r\n        if(!$(el).is(':visible')){\r\n            setTimeout(function(){\r\n                mw.components.accordion(el);\r\n            }, 777, el);\r\n            return;\r\n        }\r\n        el._accordion = true;\r\n        var options = this._options(el);\r\n        var settings = $.extend(options, {element:el})\r\n        var accordion = new mw.uiAccordion(settings);\r\n        if($(el).hasClass('mw-accordion-window-height')){\r\n            accordion._setHeight = function(){\r\n                var max =  mw.$(window).height() - (accordion.root.offset().top - mw.$(window).scrollTop());\r\n                accordion.root.css('height', max);\r\n                var content_max = max - (accordion.titles.length * accordion.titles.eq(0).outerHeight());\r\n                accordion.contents.css('height', content_max);\r\n            };\r\n            accordion._setHeight();\r\n            mw.$(window).on('load resize', function(){\r\n                accordion._setHeight();\r\n            });\r\n            if(window !== top){\r\n                mw.$(top).on('load resize', function(){\r\n                    accordion._setHeight();\r\n                });\r\n            }\r\n        }\r\n        if($(el).hasClass('mw-accordion-full-height')){\r\n            accordion._setHeight = function(){\r\n                var max = Math.min($(el).parent().height(), mw.$(window).height());\r\n                accordion.root.css('maxHeight', max);\r\n                var content_max = max - (accordion.titles.length * accordion.titles.eq(0).outerHeight());\r\n                accordion.contents.css('maxHeight', content_max);\r\n            };\r\n            accordion._setHeight();\r\n            mw.$(window).on('load resize', function(){\r\n                accordion._setHeight();\r\n            });\r\n            if(window !== top){\r\n                mw.$(top).on('load resize', function(){\r\n                    accordion._setHeight();\r\n                });\r\n            }\r\n        }\r\n        return accordion;\r\n    },\r\n    postSearch: function (el) {\r\n        var defaults = {keyword: el.value, limit: 4};\r\n        el._setValue = function (id) {\r\n            mw.tools.ajaxSearch(this._settings, function () {\r\n\r\n            });\r\n        };\r\n\r\n        el = mw.$(el);\r\n        var options = JSON.parse(el.attr(\"data-options\") || '{}');\r\n        settings = $.extend({}, defaults, options);\r\n        el[0]._settings = settings;\r\n\r\n        el.wrap(\"<div class='mw-component-post-search'></div>\");\r\n        el.after(\"<ul></ul>\");\r\n\r\n        el.on(\"input focus blur\", function (event) {\r\n\r\n            if (!el[0].is_searching) {\r\n                var val = el.val();\r\n                if (event.type == 'blur') {\r\n                    mw.$(this).next('ul').hide();\r\n                    return false;\r\n                }\r\n                if (event.type == 'focus') {\r\n                    if ($(this).next('ul').html()) {\r\n                        mw.$(this).next('ul').show()\r\n                    }\r\n                    return false;\r\n                }\r\n                el[0].is_searching = true;\r\n\r\n                this._settings.keyword = this.value;\r\n                mw.$('ul', el).empty(\"\")\r\n                el.parent().addClass(\"loading\");\r\n                mw.tools.ajaxSearch(this._settings, function () {\r\n                    var lis = [];\r\n                    var json = this;\r\n                    for (var item in json) {\r\n                        var obj = json[item];\r\n                        if (typeof obj === 'object') {\r\n                            var li = document.createElement(\"li\");\r\n                            li._value = obj;\r\n                            li.innerHTML = obj.title;\r\n                            mw.$(li).on(\"mousedown touchstart\", function () {\r\n                                el.val(this._value.title);\r\n\r\n                                el[0]._value = this._value;\r\n\r\n                                el.trigger('postSelected', [this._value]);\r\n                                mw.$(this.parentNode).hide()\r\n                            })\r\n\r\n                            lis.push(li);\r\n                        }\r\n                    }\r\n                    el.parent().removeClass(\"loading\");\r\n                    var ul = el.parent().find(\"ul\");\r\n                    ul.empty().append(lis).show();\r\n                    el[0].is_searching = false;\r\n                });\r\n            }\r\n        });\r\n        el.trigger(\"postSearchReady\");\r\n    },\r\n    _options: function (el) {\r\n        return mw.tools.elementOptions(el);\r\n    },\r\n    _init: function () {\r\n        mw.$('.mw-field input[type=\"range\"]').addClass('mw-range');\r\n        mw.$('[data-mwcomponent], [data-mw-component]').each(function () {\r\n            var component = this.dataset.mwComponent || this.dataset.mwcomponent;\r\n            if (mw.components[component]) {\r\n                mw.components[component](this);\r\n                mw.$(this).removeAttr('data-mwcomponent').removeAttr('data-mw-component')\r\n            }\r\n        });\r\n        $.each(this, function(key){\r\n            if(key.indexOf('_') === -1){\r\n                mw.$('.mw-'+key+', mw-'+key).not(\".mw-component-ready\").each(function () {\r\n                    mw.$(this).addClass('mw-component-ready');\r\n                    mw.components[key](this);\r\n                });\r\n            }\r\n        });\r\n    }\r\n};\r\n/*\r\n\r\n$(document).ready(function () {\r\n    mw.components._init();\r\n});\r\n\r\n$(window).on('load', function () {\r\n    mw.components._init();\r\n});\r\n\r\n    mw.on('ComponentsLaunch', function () {\r\n        mw.components._init();\r\n    });\r\n\r\n    mw.on('mwDialogShow', function () {\r\n        setTimeout(function () {\r\n            mw.components._init();\r\n        }, 110);\r\n    });\r\n\r\n$(window).on('ajaxStop', function () {\r\n    setTimeout(function () {\r\n        mw.components._init();\r\n    }, 100);\r\n});*/\r\n\r\nmw.registerComponent = function(name, func){\r\n    if(mw.components[name]){\r\n        console.warn('Component ' + name + ' already exists.');\r\n        return;\r\n    }\r\n    mw.components[name] = func;\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/components.js?");

/***/ }),

/***/ "./resources/assets/components/control_box.js":
/*!****************************************************!*\
  !*** ./resources/assets/components/control_box.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ControlBox: () => (/* binding */ ControlBox)\n/* harmony export */ });\n/* harmony import */ var _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../containers/base-class.js */ \"./resources/assets/containers/base-class.js\");\n\r\n\r\nconst css = `\r\n    .mw-control-box.active {\r\n        z-index: 100;\r\n    }\r\n    .mw-control-box {\r\n        position: fixed;\r\n        padding: 20px;\r\n        z-index: 99;\r\n    }\r\n    .mw-control-box-default {\r\n        padding: 0;\r\n        transition: all .5s;\r\n        background: white;\r\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n    }\r\n    .mw-control-box-default.mw-control-box-right {\r\n        transform: translateX(100%);\r\n    }\r\n    .mw-control-box-default.mw-control-box-right.active {\r\n        transform: translateX(0);\r\n    }\r\n    .mw-control-box-default.mw-control-box-left {\r\n        transform: translateX(-100%);\r\n    }\r\n    .mw-control-box-default.mw-control-box-left.active {\r\n        transform: translateX(0);\r\n    }\r\n    .mw-control-box-top {\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n    }\r\n    .mw-control-box-bottom {\r\n        bottom: 0;\r\n        left: 0;\r\n        width: 100%;\r\n    }\r\n    .mw-control-box-right {\r\n        top: 0;\r\n        right: 0;\r\n        height: 100%;\r\n    }\r\n    .mw-control-box-left {\r\n        top: 0;\r\n        left: 0;\r\n        height: 100%;\r\n    }\r\n    .mw-control-box {\r\n        position: fixed;\r\n        z-index: 12;\r\n    }\r\n    .mw-control-box-default .mw-control-boxclose:after {\r\n        content: '';\r\n    }\r\n    .mw-control-box-default .mw-control-boxclose {\r\n        position: absolute;\r\n        z-index: 10;\r\n        width: 20px;\r\n        height: 20px;\r\n        text-align: center;\r\n        top: 10px;\r\n        right: 10px;\r\n    }\r\n`;\r\n\r\nclass ControlBox extends _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(options) {\r\n        super(options);\r\n        this.config(options);\r\n        this.init();\r\n    }\r\n\r\n    config(options) {\r\n        this.options = options;\r\n        this.defaults = {\r\n            position: 'bottom',\r\n            content: '',\r\n            skin: 'default',\r\n            id: this.options.id || 'mw-control-box-' + mw.random(),\r\n            closeButton: true\r\n        };\r\n        this.id = this.options.id;\r\n        this.settings = Object.assign({}, this.defaults, this.options);\r\n        this.active = false;\r\n        this.css('mwControlBox', css, false);\r\n    }\r\n\r\n    build() {\r\n        this.box = document.createElement('div');\r\n        this.box.className = 'mw-control-box mw-control-box-' + this.settings.position + ' mw-control-box-' + this.settings.skin;\r\n        this.box.id = this.id;\r\n        this.boxContent = document.createElement('div');\r\n        this.boxContent.className = 'mw-control-boxcontent';\r\n        this.box.appendChild(this.boxContent);\r\n        this.createCloseButton();\r\n        document.body.appendChild(this.box);\r\n\r\n    }\r\n\r\n    position(position) {\r\n        if (typeof position === 'undefined') {\r\n            return this.settings.position;\r\n        }\r\n        this.box.classList.remove('mw-control-box-' + this.settings.position);\r\n        this.settings.position = position;\r\n        this.box.classList.add('mw-control-box-' + this.settings.position);\r\n        return this.settings.position;\r\n    }\r\n\r\n    createCloseButton() {\r\n        if (!this.options.closeButton) return;\r\n        this.closeButton = document.createElement('span');\r\n        this.closeButton.className = 'mw-control-boxclose';\r\n        this.closeButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" /></svg>';\r\n        this.box.appendChild(this.closeButton);\r\n        this.closeButton.addEventListener(\"click\", e => this.hide());\r\n    }\r\n\r\n    setContentByUrl() {\r\n        const cont = this.settings.content.trim();\r\n        return $.get(cont, (data) => {\r\n            this.boxContent.innerHTML = data;\r\n            this.settings.content = data;\r\n        });\r\n    }\r\n\r\n    setContent(c) {\r\n        const cont = c || this.settings.content.trim();\r\n        this.settings.content = cont;\r\n        if (cont.indexOf('http://') === 0 || cont.indexOf('https://') === 0) {\r\n            return this.setContentByUrl();\r\n        }\r\n        this.boxContent.innerHTML = cont;\r\n    }\r\n\r\n    show() {\r\n        this.active = true;\r\n        mw.$(this.box).addClass('active');\r\n        mw.$(this).trigger('ControlBoxShow');\r\n    }\r\n\r\n    init() {\r\n        this.build();\r\n        this.setContent();\r\n    }\r\n\r\n    hide() {\r\n        this.active = false;\r\n        mw.$(this.box).removeClass('active');\r\n        mw.$(this).trigger('ControlBoxHide');\r\n    }\r\n\r\n    remove() {\r\n        this.hide();\r\n        mw.$(this.box).remove();\r\n        mw.$(this).trigger('ControlBoxRemove');\r\n    }\r\n\r\n    toggle() {\r\n        this[this.active ? 'hide' : 'show']();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/control_box.js?");

/***/ }),

/***/ "./resources/assets/components/dialog.js":
/*!***********************************************!*\
  !*** ./resources/assets/components/dialog.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n(function (mw) {\r\n\r\n    mw.dialog = function (options) {\r\n        return new mw.Dialog(options);\r\n    };\r\n\r\n    mw.dialogIframe = function (options, cres) {\r\n        options.pauseInit = true;\r\n        var attr = 'frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture; display-capture\" allowfullscreen';\r\n        if (options.autoHeight) {\r\n            // attr += ' scrolling=\"no\"';\r\n            options.height = 'auto';\r\n        }\r\n        options.content = '<iframe src=\"' + mw.external_tool(options.url.trim()) + '\" ' + attr + '></iframe>';\r\n        options.className = ('mw-dialog-iframe mw-dialog-iframe-loading ' + (options.className || '')).trim();\r\n        options.className += (options.autoHeight ? ' mw-dialog-iframe-autoheight' : '');\r\n        var dialog = new mw.Dialog(options, cres);\r\n        dialog.iframe = dialog.dialogContainer.querySelector('iframe');\r\n        mw.tools.loading(dialog.dialogContainer, 90);\r\n        dialog.dialogContainer.style.minHeight = '100px';\r\n        mw.spinner({element: dialog.dialogContainer, size: 32, decorate: true}).show();\r\n\r\n\r\n        if(options && options.id){\r\n            dialog.iframe.id = options.id+'-content-window';\r\n        }\r\n\r\n\r\n        var maxHeight = 'calc(100vh - 140px)';\r\n\r\n\r\n        setTimeout(function () {\r\n            var frame = dialog.dialogContainer.querySelector('iframe');\r\n            frame.style.minHeight = 0; // reset in case of conflicts\r\n            frame.loading = 'lazy';\r\n\r\n            if (options.autoHeight) {\r\n                mw.tools.iframeAutoHeight(frame, {dialog: dialog, maxHeightWindowScroll: maxHeight});\r\n            } else{\r\n                $(frame).height(options.height - 60);\r\n                frame.style.position = 'relative';\r\n                frame.style.maxHeight = maxHeight;\r\n            }\r\n            mw.$(frame).on('load', function () {\r\n                mw.tools.loading(dialog.dialogContainer, false);\r\n                mw.spinner({element: dialog.dialogContainer, size: 32, decorate: true}).remove();\r\n                setTimeout(function () {\r\n                    dialog.center();\r\n                    mw.$(frame).on('bodyResize', function () {\r\n                        dialog.center();\r\n                    });\r\n                    dialog.dialogMain.classList.remove('mw-dialog-iframe-loading');\r\n\r\n\r\n                    if (mw.tools.canAccessIFrame(frame)) {\r\n                        if(frame && frame.contentWindow && frame.contentWindow.thismodal) {\r\n                            frame.contentWindow.thismodal = dialog;\r\n                            if (options.autoHeight) {\r\n                                mw.tools.iframeAutoHeight(frame, {dialog: dialog, maxHeightWindowScroll: maxHeight});\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }, 78);\r\n                if (mw.tools.canAccessIFrame(frame)) {\r\n                    mw.$(frame.contentWindow.document).on('keydown', function (e) {\r\n                        if (mw.event.is.escape(e) && !mw.event.targetIsField(e)) {\r\n                            if(mw.top().__dialogs && mw.top().__dialogs.length){\r\n                                var dlg = mw.top().__dialogs;\r\n                                dlg[dlg.length - 1]._doCloseButton();\r\n                                $(dlg[dlg.length - 1]).trigger('closedByUser');\r\n                            }\r\n                            else {\r\n                                if (dialog.options.closeOnEscape) {\r\n                                    dialog._doCloseButton();\r\n                                    $(dialog).trigger('closedByUser');\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                if(typeof options.onload === 'function') {\r\n                    options.onload.call(dialog);\r\n                }\r\n            });\r\n        }, 12);\r\n        return dialog;\r\n    };\r\n\r\n    /** @deprecated */\r\n    mw.modal = mw.dialog;\r\n    mw.modalFrame = mw.dialogIframe;\r\n\r\n    mw.dialog.remove = function (selector) {\r\n        var dlg = mw.dialog.get(selector);\r\n        if(dlg) {\r\n            dlg.remove()\r\n        }\r\n    };\r\n\r\n    mw.dialog.get = function (selector) {\r\n        selector = selector || '.mw-dialog';\r\n        var $el = mw.$(selector);\r\n        var el = $el[0];\r\n\r\n        if(!el) return false;\r\n\r\n        if(el._dialog) {\r\n            return el._dialog;\r\n        }\r\n        var child_cont = el.querySelector('.mw-dialog-holder');\r\n        var parent_cont = $el.parents(\".mw-dialog-holder:first\");\r\n        if (child_cont) {\r\n            return child_cont._dialog;\r\n        }\r\n        else if (parent_cont.length !== 0) {\r\n            return parent_cont[0]._dialog;\r\n        }\r\n        else if (window.thismodal) {\r\n            return thismodal;\r\n        }\r\n        else {\r\n             // deprecated\r\n            child_cont = el.querySelector('.mw_modal');\r\n            parent_cont = $el.parents(\".mw_modal:first\");\r\n            if(child_cont) {\r\n                return child_cont.modal;\r\n            } else if (parent_cont.length !== 0) {\r\n                return parent_cont[0].modal;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n\r\n    mw.Dialog = function (options, cres) {\r\n\r\n        var scope = this;\r\n\r\n        options = options || {};\r\n        options.content = options.content || options.html || '';\r\n\r\n        if(!options.height && typeof options.autoHeight === 'undefined') {\r\n            options.height = 'auto';\r\n            options.autoHeight = true;\r\n        }\r\n\r\n        var defaults = {\r\n            skin: 'default',\r\n            overlay: true,\r\n            overlayClose: false,\r\n            autoCenter: true,\r\n            root: document,\r\n            id: options.name || options.id || mw.id('mw-dialog-'),\r\n            content: '',\r\n            closeOnEscape: true,\r\n            closeButton: true,\r\n            closeButtonAppendTo: '.mw-dialog-header',\r\n            closeButtonAction: 'remove', // 'remove' | 'hide'\r\n            draggable: true,\r\n            scrollMode: 'inside', // 'inside' | 'window',\r\n            centerMode: 'intuitive', // 'intuitive' | 'center'\r\n            containment: 'window',\r\n            overflowMode: 'auto', // 'auto' | 'hidden' | 'visible'\r\n            disableTextSelection: false,\r\n\r\n        };\r\n\r\n        this.options = $.extend({}, defaults, options, {\r\n            // skin: 'default'\r\n        });\r\n\r\n\r\n        this.id = this.options.id;\r\n\r\n\r\n        var exist = document.getElementById(this.id);\r\n        if (exist) {\r\n            return exist._dialog;\r\n        }\r\n\r\n        this.hasBeenCreated = function () {\r\n            return this.options.root.getElementById(this.id) !== null;\r\n        };\r\n\r\n        if (this.hasBeenCreated()) {\r\n            return this.options.root.getElementById(this.id)._dialog;\r\n        }\r\n\r\n        if(!mw.top().__dialogs ) {\r\n            mw.top().__dialogs = [];\r\n        }\r\n        if (!mw.top().__dialogsData) {\r\n            mw.top().__dialogsData = {};\r\n        }\r\n\r\n\r\n        if (!mw.top().__dialogsData._esc) {\r\n            mw.top().__dialogsData._esc = true;\r\n            mw.$(document).on('keydown', function (e) {\r\n                if (mw.event.is.escape(e)) {\r\n                    var dlg = mw.top().__dialogs[mw.top().__dialogs.length - 1];\r\n                    if (dlg && dlg.options && dlg.options.closeOnEscape) {\r\n                        dlg._doCloseButton();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        mw.top().__dialogs.push(this);\r\n\r\n        this.draggable = function () {\r\n            if (this.options.draggable && $.fn.draggable) {\r\n                var $holder = mw.$(this.dialogHolder);\r\n                $holder.draggable({\r\n                    handle: this.options.draggableHandle || '.mw-dialog-header',\r\n                    start: function () {\r\n                        $holder.addClass('mw-dialog-drag-start');\r\n                        scope._dragged = true;\r\n                    },\r\n                    stop: function () {\r\n                        $holder.removeClass('mw-dialog-drag-start');\r\n                    },\r\n                    containment: scope.options.containment,\r\n                    scroll: false,\r\n                    iframeFix: true\r\n                });\r\n            }\r\n        };\r\n\r\n        this.header = function () {\r\n            this.dialogHeader = this.options.root.createElement('div');\r\n            this.dialogHeader.className = 'mw-dialog-header';\r\n            if (this.options.title || this.options.header) {\r\n                this.dialogHeader.innerHTML = '<div class=\"modal-title settings-title-inside\">' + (this.options.title || this.options.header) + '</div>';\r\n            }\r\n        };\r\n\r\n        this.footer = function (content) {\r\n            this.dialogFooter = this.options.root.createElement('div');\r\n            this.dialogFooter.className = 'mw-dialog-footer';\r\n            if (this.options.footer) {\r\n                $(this.dialogFooter).append(this.options.footer);\r\n            }\r\n        };\r\n\r\n        this.title = function (title) {\r\n            var root = mw.$('.mw-dialog-title', this.dialogHeader);\r\n            if (typeof title === 'undefined') {\r\n                return root.html();\r\n            } else {\r\n                if (root[0]) {\r\n                    root.html(title);\r\n                }\r\n                else {\r\n                    mw.$(this.dialogHeader).prepend('<div class=\"modal-title settings-title-inside\">' + title + '</div>');                }\r\n            }\r\n        };\r\n\r\n\r\n        this.build = function () {\r\n            this.dialogMain = this.options.root.createElement('div');\r\n            if (this.options.disableTextSelection){\r\n                this.dialogMain.style.userSelect = 'none';\r\n            }\r\n            this.dialogMain.id = this.id;\r\n            var cls = 'mw-dialog mw-dialog-scroll-mode-' + this.options.scrollMode\r\n                + ' mw-dialog-skin-' + this.options.skin\r\n                + ' mw-dialog-overflowMode-' + this.options.overflowMode;\r\n            cls += (!this.options.className ? '' : (' ' + this.options.className));\r\n            this.dialogMain.className = cls;\r\n            this.dialogMain._dialog = this;\r\n\r\n            this.dialogHolder = this.options.root.createElement('div');\r\n            this.dialogHolder.id = 'mw-dialog-holder-' + this.id;\r\n\r\n\r\n            this.dialogHolder._dialog = this;\r\n\r\n            this.header();\r\n            this.footer();\r\n            this.draggable();\r\n\r\n\r\n\r\n            this.dialogContainer = this.options.root.createElement('div');\r\n            this.dialogContainer._dialog = this;\r\n\r\n            // TODO: obsolate\r\n            this.container = this.dialogContainer;\r\n\r\n\r\n            this.dialogContainer.className = 'mw-dialog-container';\r\n            this.dialogHolder.className = 'mw-dialog-holder';\r\n\r\n            var cont = this.options.content;\r\n            if(this.options.shadow) {\r\n                this.shadow = this.dialogContainer.attachShadow({\r\n                    mode: 'open'\r\n                });\r\n                if(typeof cont === 'string') {\r\n                    this.shadow.innerHTML = (cont);\r\n                } else {\r\n                    this.shadow.appendChild(cont);\r\n                }\r\n            } else {\r\n                mw.$(this.dialogContainer).append(cont);\r\n            }\r\n\r\n\r\n            if (this.options.encapsulate) {\r\n                this.iframe = cont;\r\n                this.iframe.style.display = '';\r\n            }\r\n\r\n            this.dialogHolder.appendChild(this.dialogHeader);\r\n            this.dialogHolder.appendChild(this.dialogContainer);\r\n            this.dialogHolder.appendChild(this.dialogFooter);\r\n\r\n            this.closeButton = this.options.root.createElement('div');\r\n            this.closeButton.className = 'mw-dialog-close';\r\n\r\n            this.closeButton.$scope = this;\r\n\r\n            this.closeButton.onclick = function (e) {\r\n                e.preventDefault();\r\n                this.$scope[this.$scope.options.closeButtonAction]();\r\n                $(this.$scope).trigger('closedByUser');\r\n            };\r\n            this.main = mw.$(this.dialogContainer); // obsolete\r\n            this.main.width = this.width;\r\n\r\n            this.width(this.options.width || 600);\r\n            this.height(this.options.height || 320);\r\n\r\n            this.options.root.body.appendChild(this.dialogMain);\r\n            this.dialogMain.appendChild(this.dialogHolder);\r\n\r\n            if (this.options.closeButtonAppendTo) {\r\n                if (this.options.closeButton !== false) {\r\n                    mw.$(this.options.closeButtonAppendTo, this.dialogMain).append(this.closeButton)\r\n                }\r\n            }\r\n            else {\r\n                if (this.options.closeButton !== false) {\r\n                    this.dialogHolder.appendChild(this.closeButton);\r\n                }\r\n            }\r\n\r\n            this.dialogOverlay();\r\n            return this;\r\n        };\r\n\r\n        this._doCloseButton = function() {\r\n            this[this.options.closeButtonAction]();\r\n        };\r\n\r\n        this.containmentManage = function () {\r\n            if (scope.options.containment === 'window') {\r\n                if (scope.options.scrollMode === 'inside') {\r\n                    var rect = this.dialogHolder.getBoundingClientRect();\r\n                    var $win = mw.$(window);\r\n                    var sctop = $win.scrollTop();\r\n                    var height = $win.height();\r\n                    if (rect.top < sctop || (sctop + height) > (rect.top + rect.height)) {\r\n                        this.center();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.dialogOverlay = function () {\r\n            this.overlay = this.options.root.createElement('div');\r\n            this.overlay.className = 'mw-dialog-overlay';\r\n            this.overlay.$scope = this;\r\n            if (this.options.overlay === true || typeof this.options.overlay === 'string') {\r\n                this.dialogMain.appendChild(this.overlay);\r\n                if( typeof this.options.overlay === 'string' ) {\r\n                    this.overlay.style.backgroundColor = this.options.overlay;\r\n                }\r\n\r\n            }\r\n            mw.$(this.overlay).on('click', function () {\r\n                if (typeof this.$scope.options.overlayClose === 'function') {\r\n                    if (this.$scope.options.overlayClose() === true) {\r\n                        this.$scope._doCloseButton();\r\n                        $(this.$scope).trigger('closedByUser');\r\n                    }\r\n                } else if (this.$scope.options.overlayClose === true) {\r\n                    this.$scope._doCloseButton();\r\n                    $(this.$scope).trigger('closedByUser');\r\n                }\r\n            });\r\n            return this;\r\n        };\r\n\r\n        this._afterSize = function() {\r\n            if(mw._iframeDetector) {\r\n                mw._iframeDetector.pause = true;\r\n                var frame = window.frameElement;\r\n                if(frame && parent !== top){\r\n                    var height = this.dialogContainer.scrollHeight + this.dialogHeader.scrollHeight;\r\n                    if($(frame).height() < height) {\r\n                        frame.style.height = ((height + 100) - this.dialogHeader.offsetHeight - this.dialogFooter.offsetHeight) + 'px';\r\n                        if(window.thismodal){\r\n                            thismodal.height(height + 100);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.show = function () {\r\n            mw.$(this.dialogMain).find('iframe').each(function(){\r\n                this._intPause = false;\r\n            });\r\n            mw.$(this.dialogMain).addClass('active');\r\n            this.center();\r\n            this._afterSize();\r\n            mw.$(this).trigger('Show');\r\n            mw.trigger('mwDialogShow', this);\r\n            return this;\r\n        };\r\n\r\n        this._hideStart = false;\r\n        this.hide = function () {\r\n            if (!this._hideStart) {\r\n                this._hideStart = true;\r\n                mw.$(this.dialogMain).find('iframe').each(function(){\r\n                    this._intPause = true;\r\n                });\r\n                setTimeout(function () {\r\n                    scope._hideStart = false;\r\n                }, 300);\r\n                mw.$(this.dialogMain).removeClass('active');\r\n                if(mw._iframeDetector) {\r\n                    mw._iframeDetector.pause = false;\r\n                }\r\n                mw.$(this).trigger('Hide');\r\n                mw.trigger('mwDialogHide', this);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.forceRemove = function () {\r\n            mw.$(this.dialogMain).remove();\r\n            for (var i = 0; i < mw.top().__dialogs.length; i++) {\r\n                if (mw.top().__dialogs[i] === this) {\r\n                    mw.top().__dialogs.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            clearInterval(this._observe.interval);\r\n            return this;\r\n        }\r\n        this.remove = function () {\r\n\r\n            mw.$(this).trigger('BeforeRemove');\r\n            if (typeof this.options.beforeRemove === 'function') {\r\n                if(this.options.beforeRemove(this) === false) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.hide();\r\n            mw.removeInterval('iframe-' + this.id);\r\n\r\n            if(this.options.onremove) {\r\n                this.options.onremove()\r\n            }\r\n            mw.$(this).trigger('Remove');\r\n            mw.trigger('mwDialogRemove', this);\r\n\r\n            this.forceRemove()\r\n        };\r\n\r\n        this.destroy = this.remove;\r\n\r\n        this._prevHeight = -1;\r\n        this._dragged = false;\r\n\r\n        this.center = function (width, height) {\r\n            var $holder = mw.$(this.dialogHolder), $window = mw.$(window);\r\n            var holderHeight = height || $holder.outerHeight();\r\n            var holderWidth = width || $holder.outerWidth();\r\n            var dtop, css = {};\r\n\r\n            if (this.options.centerMode === 'intuitive' && this._prevHeight < holderHeight) {\r\n                dtop = $window.height() / 2 - holderHeight / 2;\r\n            } else if (this.options.centerMode === 'center') {\r\n                dtop = $window.height() / 2 - holderHeight / 2;\r\n            }\r\n\r\n            if (!scope._dragged) {\r\n                css.left = $window.outerWidth() / 2 - holderWidth / 2;\r\n            } else {\r\n                css.left = parseFloat($holder.css('left'));\r\n            }\r\n\r\n            if(css.left + holderWidth > $window.width()){\r\n                css.left = css.left - ((css.left + holderWidth) - $window.width());\r\n            }\r\n\r\n            if (dtop) {\r\n                css.top = dtop > 0 ? dtop : 0;\r\n            }\r\n\r\n\r\n\r\n            /*if(window !== mw.top().win && document.body.scrollHeight > mw.top().win.innerHeight){\r\n                $win = $(mw.top());\r\n\r\n                css.top = $(document).scrollTop() + 50;\r\n                var off = $(window.frameElement).offset();\r\n                if(off.top < 0) {\r\n                    css.top += Math.abs(off.top);\r\n                }\r\n                if(window.thismodal) {\r\n                    css.top += thismodal.dialogContainer.scrollTop;\r\n                }\r\n\r\n            }*/\r\n\r\n\r\n            $holder.css(css);\r\n            this._prevHeight = holderHeight;\r\n\r\n\r\n            this._afterSize();\r\n            mw.$(this).trigger('dialogCenter');\r\n\r\n            return this;\r\n        };\r\n\r\n        this.width = function (width) {\r\n            if(!width) {\r\n                return mw.$(this.dialogHolder).outerWidth();\r\n            }\r\n            mw.$(this.dialogHolder).width(width);\r\n            this._afterSize();\r\n        };\r\n        this.height = function (height) {\r\n            if(!height) {\r\n                return mw.$(this.dialogHolder).outerHeight();\r\n            }\r\n            mw.$(this.dialogHolder).height(height);\r\n            this._afterSize();\r\n        };\r\n        this.resize = function (width, height) {\r\n            if (typeof width !== 'undefined') {\r\n                this.width(width);\r\n            }\r\n            if (typeof height !== 'undefined') {\r\n                this.height(height);\r\n            }\r\n            this.center(width, height);\r\n        };\r\n        this.content = function (content) {\r\n            this.options.content = content || '';\r\n            $(this.dialogContainer).empty().append(this.options.content);\r\n            return this;\r\n        };\r\n\r\n        this.result = function(result, doClose) {\r\n            this.value = result;\r\n            if(this.options.onResult){\r\n                this.options.onResult.call( this, result );\r\n            }\r\n            if (cres) {\r\n                cres.call( this, result );\r\n            }\r\n            $(this).trigger('Result', [result]);\r\n            if(doClose){\r\n                this._doCloseButton();\r\n            }\r\n        };\r\n\r\n\r\n        this.contentMaxHeight = function () {\r\n            var scope = this;\r\n            if (this.options.scrollMode === 'inside') {\r\n                mw.interval('iframe-' + this.id, function () {\r\n                    var max = mw.$(window).height() - scope.dialogHeader.clientHeight - scope.dialogFooter.clientHeight - 40;\r\n                    scope.dialogContainer.style.maxHeight = max + 'px';\r\n                    scope.dialogContainer.style.maxHeight = 'calc(100vh - 100px)';\r\n                    scope.containmentManage();\r\n                });\r\n            }\r\n        };\r\n\r\n        this._observe = {};\r\n        this.observeDimensions = function(cb) {\r\n            if (!this._observe.interval) {\r\n                var changed = function () {\r\n                  var css = getComputedStyle(scope.dialogMain);\r\n                  if (!scope._observe.data) {\r\n                      scope._observe.data = {\r\n                          width: css.width,\r\n                          height: css.height\r\n                      };\r\n                      return {\r\n                          width: css.width,\r\n                          height: css.height\r\n                      };\r\n                  } else  {\r\n                      var curr = scope._observe.data;\r\n                      // if(curr.width !== css.width || curr.height !== css.height) {\r\n                          scope._observe.data = {\r\n                              width: css.width,\r\n                              height: css.height\r\n                          };\r\n                          return {\r\n                              width: css.width,\r\n                              height: css.height\r\n                          };\r\n                      // }\r\n                  }\r\n                };\r\n                this._observe.interval = setInterval(function (){\r\n                    var chg = changed();\r\n                    if (chg) {\r\n                        cb.call(scope, chg);\r\n                    }\r\n\r\n                }, 333);\r\n            }\r\n        };\r\n\r\n        this.position = function (x, y) {\r\n            if(!x) {\r\n                return;\r\n            }\r\n            scope._dragged = true;\r\n            if(typeof x === 'object') {\r\n                y = x.y;\r\n                x = x.x;\r\n            }\r\n\r\n            if(typeof y === 'undefined') {\r\n                y = x\r\n            }\r\n\r\n            if(typeof x === 'number') {\r\n                x += 'px';\r\n\r\n            }\r\n\r\n            if(typeof y === 'number') {\r\n                y += 'px';\r\n            }\r\n\r\n            this.dialogHolder.style.left = x;\r\n            this.dialogHolder.style.top = y;\r\n\r\n            return this;\r\n        }\r\n\r\n        this.positionToElement = function(targetElementSelector) {\r\n            if(!targetElementSelector){\r\n                return;\r\n            }\r\n\r\n\r\n            var node = $(targetElementSelector)[0];\r\n            var nodeWindow = node.ownerDocument.defaultView;\r\n\r\n            let off = mw.element(node).offset();\r\n            if(nodeWindow.frameElement) {\r\n                var winframe = mw.top().element(nodeWindow.frameElement).offset();\r\n                off.offsetTop += winframe.offsetTop\r\n                off.offsetLeft += winframe.offsetLeft\r\n            }\r\n            this.position(off.offsetLeft, off.offsetTop + off.height);\r\n            setTimeout( ()=> {\r\n                const colorPickerDialogOff = mw.element(this.dialogHolder).offset()\r\n                if(colorPickerDialogOff.offsetTop + colorPickerDialogOff.height > mw.top().win.innerHeight) {\r\n                    this.position(off.offsetLeft - colorPickerDialogOff.width, mw.top().win.innerHeight - colorPickerDialogOff.height);\r\n                }\r\n            }, 10);\r\n\r\n        }\r\n\r\n        this.calculateDialogPositionXY = function (element) {\r\n\r\n            var position = {};\r\n            if (self !== top) {\r\n                position = this.getElementPositionInFrames(element);\r\n            } else {\r\n                position = this.getElementPositionOnScreen(element);\r\n            }\r\n\r\n            let newPositionX = position.x;\r\n            let newPositionY = position.y;\r\n\r\n\r\n            let elementBounding = element.getBoundingClientRect();\r\n            let dialogBounding = this.dialogMain.getBoundingClientRect();\r\n\r\n            let repositionDialog = this.positionDialogWithoutOverlap(this.dialogMain, element);\r\n            if (repositionDialog) {\r\n                newPositionX = repositionDialog.x;\r\n                newPositionY = repositionDialog.y;\r\n            }\r\n\r\n\r\n            // newPositionX = (newPositionX + elementBounding.width) - 50;\r\n\r\n            // if ((window.top.innerWidth - newPositionX) < (dialogBounding.width - 50)) {\r\n            //     newPositionX = newPositionX - dialogBounding.width - (window.top.innerWidth - newPositionX);\r\n            // }\r\n            //\r\n            // if ((window.top.innerHeight - newPositionY) < (dialogBounding.height - 50)) {\r\n            //     newPositionY = newPositionY - dialogBounding.height + (window.top.innerHeight - newPositionY);\r\n            // }\r\n\r\n            if (newPositionX < 0) {\r\n                newPositionX = 0;\r\n            }\r\n\r\n            if (newPositionY < 0) {\r\n                newPositionY = 0;\r\n            }\r\n\r\n            console.log('innerWidth', elementBounding.width);\r\n            console.log('innerHeight', elementBounding.height);\r\n\r\n            console.log('newPositionX', newPositionX);\r\n            console.log('newPositionY', newPositionY);\r\n\r\n            this.options.position = {\r\n                x: newPositionX,\r\n                y: newPositionY\r\n            };\r\n            this.position(newPositionX, newPositionY);\r\n        }\r\n\r\n        this.positionDialogWithoutOverlap = function (dialogElement, targetElement) {\r\n            var dialogRect = dialogElement.getBoundingClientRect();\r\n            var targetRect = targetElement.getBoundingClientRect();\r\n\r\n            var dialogWidth = dialogRect.width;\r\n            var dialogHeight = dialogRect.height;\r\n\r\n            var targetLeft = targetRect.left;\r\n            var targetTop = targetRect.top;\r\n            var targetWidth = targetRect.width;\r\n            var targetHeight = targetRect.height;\r\n\r\n            var currentWindow = window;\r\n\r\n            while (currentWindow !== top) {\r\n                var iframe = currentWindow.frameElement;\r\n                var iframeRect = iframe.getBoundingClientRect();\r\n\r\n                targetLeft += iframeRect.left;\r\n                targetTop += iframeRect.top;\r\n\r\n                currentWindow = currentWindow.parent;\r\n            }\r\n\r\n            var screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n\r\n            var spaceRight = screenWidth - targetLeft - targetWidth;\r\n            var spaceBelow = screenHeight - targetTop - targetHeight;\r\n\r\n            var dialogLeft, dialogTop;\r\n\r\n            if (spaceRight >= dialogWidth) {\r\n                dialogLeft = targetLeft + targetWidth;\r\n                dialogTop = Math.max(targetTop + (targetHeight - dialogHeight) / 2, 0);\r\n            } else if (spaceBelow >= dialogHeight) {\r\n                dialogLeft = targetLeft + (targetWidth - dialogWidth) / 2;\r\n                dialogTop = targetTop + targetHeight;\r\n            } else {\r\n                // Fallback position if there is not enough space on the right or below\r\n                dialogLeft = targetLeft + targetWidth;\r\n                dialogTop = Math.max(targetTop + (targetHeight - dialogHeight) / 2, 0);\r\n            }\r\n\r\n            return {\r\n                x: dialogLeft,\r\n                y: dialogTop\r\n            }\r\n        }\r\n\r\n        this.getElementPositionInFrames = function (element) {\r\n            var x = 0;\r\n            var y = 0;\r\n            var currentWindow = window;\r\n\r\n            while (currentWindow !== top) {\r\n                var iframe = currentWindow.frameElement;\r\n                var iframeRect = iframe.getBoundingClientRect();\r\n                var elementRect = element.getBoundingClientRect();\r\n\r\n                x += iframeRect.left + elementRect.left;\r\n                y += iframeRect.top + elementRect.top;\r\n\r\n                currentWindow = currentWindow.parent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        this.getElementPositionOnScreen = function(element) {\r\n            var rect = element.getBoundingClientRect();\r\n\r\n            var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\r\n            var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n\r\n            var x = rect.left + scrollLeft;\r\n            var y = rect.top + scrollTop;\r\n\r\n            // Adjust position to stay within the visible screen area\r\n            var screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n\r\n            x = Math.min(Math.max(x, 0), screenWidth - element.offsetWidth);\r\n            y = Math.min(Math.max(y, 0), screenHeight - element.offsetHeight);\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        this.init = function () {\r\n            this.build();\r\n            this.contentMaxHeight();\r\n            if(!this.options.position) {\r\n\r\n                this.center();\r\n            }\r\n\r\n            this.show();\r\n            if (this.options.autoCenter) {\r\n                (function (scope) {\r\n                    mw.$(window).on('resize orientationchange load', function () {\r\n                        scope.contentMaxHeight();\r\n                        scope.center();\r\n                    });\r\n                })(this);\r\n            }\r\n            if (!this.options.pauseInit) {\r\n                mw.$(this).trigger('Init');\r\n            }\r\n            this.observeDimensions(function (){\r\n                scope.center();\r\n            });\r\n            if(this.options.position) {\r\n                this.position(this.options.position)\r\n            }\r\n            return this;\r\n        };\r\n        this.init();\r\n    };\r\n\r\n    mw.Dialog.elementIsInDialog = function (node) {\r\n        return mw.tools.firstParentWithClass(node, 'mw-dialog');\r\n    };\r\n\r\n})(window.mw);\r\n\r\n\r\n(function () {\r\n    function scoped() {\r\n        var all = document.querySelectorAll('style[scoped]'), i = 0;\r\n\r\n        try {\r\n            for( ; i < all.length; i++ ) {\r\n                var parent = all[i].parentNode;\r\n                parent.id = parent.id || mw.id('scoped-id-');\r\n                var prefix = '#' + parent.id + ' ';\r\n                var rules = all[i].sheet.rules;\r\n                var r = 0;\r\n                for ( ; r < rules.length; r++) {\r\n                    var newRule = prefix + rules[r].cssText;\r\n                    all[i].sheet.deleteRule(r);\r\n                    all[i].sheet.insertRule(newRule, r);\r\n                }\r\n                all[i].removeAttribute('scoped');\r\n            }\r\n        }\r\n        catch(error) {\r\n\r\n        }\r\n\r\n\r\n    }\r\n    scoped();\r\n    $(window).on('load', function () {\r\n        scoped();\r\n    });\r\n})();\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/dialog.js?");

/***/ }),

/***/ "./resources/assets/components/filemanager.js":
/*!****************************************************!*\
  !*** ./resources/assets/components/filemanager.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n(function (){\r\n\r\n    var FileManager = function (options) {\r\n\r\n        var scope = this;\r\n\r\n        options = options || {};\r\n\r\n        var defaultRequest = function (params, callback, error) {\r\n            var xhr = new XMLHttpRequest();\r\n            if(!params) {\r\n                params = {};\r\n            }\r\n            if(!params.limit) {\r\n                params.limit = 50;\r\n            }\r\n\r\n            params.limit = parseFloat(params.limit);\r\n\r\n            if(params.limit > 1000) {\r\n                params.limit = 50;\r\n            }\r\n\r\n            if(scope.settings.accept) {\r\n                params.filetypes = scope.originalAccept;\r\n                params.extensions = scope.settings.accept;\r\n            }\r\n\r\n            scope.dispatch('beforeRequest', {xhr: xhr, params: params});\r\n            xhr.onreadystatechange = function(e) {\r\n                if (this.readyState === 4 && this.status === 200) {\r\n                    callback.call(scope, JSON.parse(this.responseText), xhr);\r\n                } else if(this.status !== 200 && this.readyState === 4) {\r\n                    if(error) {\r\n                        error.call(scope, e);\r\n                    }\r\n                }\r\n            };\r\n            xhr.addEventListener('error', function (e){\r\n                if(error) {\r\n                    error.call(scope, e);\r\n                }\r\n            });\r\n            var url = scope.settings.url + '?' + new URLSearchParams(params || {}).toString();\r\n            xhr.open(\"GET\", url, true);\r\n            xhr.send();\r\n        };\r\n\r\n        var plusIcon = function (color, margin) {\r\n            if(!color) {\r\n                color = 'white';\r\n            }\r\n            return '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 472 472\" style=\"width: 14px; margin-inline-end:' + margin + 'px;\" xml:space=\"preserve\"><path fill=\"'+color+'\" d=\"M472 185H287V0H185v185H0v102h185v185h102V287h185V185z\"/></svg>';\r\n        };\r\n\r\n        var defaultAddFile = function (file) {\r\n            return new Promise(function (resolve, reject){\r\n                var xhr = new XMLHttpRequest();\r\n                scope.dispatch('beforeAddFile', {xhr: xhr, input: input});\r\n                xhr.onreadystatechange = function(e) {\r\n                    if (this.readyState === 4 && this.status === 200) {\r\n                        resolve(JSON.parse(this.responseText));\r\n                    } else if(this.status !== 200) {\r\n                        reject(e);\r\n                    }\r\n                };\r\n                xhr.addEventListener('error', function (e){\r\n                    reject(e);\r\n                });\r\n                var url = scope.settings.url + '?path=' + scope.settings.query.path;\r\n                xhr.open(\"PUT\", url, true);\r\n                var formData = new FormData();\r\n                formData.append(\"file\", file);\r\n                xhr.send(formData);\r\n            });\r\n        };\r\n\r\n        this.uploadFile = function (file) {\r\n            return this.settings.addFile(file).then(function (){\r\n                scope.refresh(true);\r\n            });\r\n        };\r\n\r\n        this.methods = {\r\n            pc: function (options) {\r\n                var node = document.createElement('span');\r\n                node.innerHTML = options.title;\r\n\r\n                var upload = mw.upload({\r\n                    multiple: true,\r\n                    accept: scope.settings.type,\r\n                    element: node,\r\n                    on: {\r\n                        fileAdded: function () {\r\n                            scope.progress(5);\r\n                        },\r\n                        filesUploaded: function () {\r\n                            scope.refresh(true);\r\n                        },\r\n                        progress: function (val) {\r\n                            scope.progress(val.percent);\r\n                        },\r\n                        fileUploadError: function () {\r\n                            scope.progress(false);\r\n                        }\r\n                    }\r\n                });\r\n\r\n\r\n\r\n                scope.on('pathChanged', function (path) {\r\n                    upload.urlParam('path', path);\r\n                });\r\n                return node;\r\n            },\r\n            createFolder: function (options) {\r\n                var node = document.createElement('span');\r\n                node.innerHTML = options.title;\r\n                node.addEventListener('click', function (){\r\n                    mw.prompt('Folder name', function (val) {\r\n                        var xhr = new XMLHttpRequest();\r\n                        scope.loading(true);\r\n                        xhr.onreadystatechange = function(e) {\r\n                            if (this.readyState === 4 && this.status === 200) {\r\n                                 scope.refresh(true);\r\n                            } else if(this.status !== 200) {\r\n\r\n                            }\r\n                            scope.loading(false);\r\n                        };\r\n                        xhr.addEventListener('error', function (e){\r\n                            scope.loading(false);\r\n                        });\r\n                        var params = {\r\n                            path: scope.settings.query.path,\r\n                            name: val,\r\n                            new_folder: 1,\r\n                        };\r\n                        var url = route('api.file-manager.create-folder') + '?' + new URLSearchParams(params).toString();\r\n                        xhr.open(\"POST\", url, true);\r\n                        xhr.send();\r\n                    });\r\n                });\r\n\r\n                return node;\r\n            }\r\n        };\r\n\r\n\r\n        var defaults = {\r\n            multiselect: true,\r\n            selectable: true,\r\n            selectableRow: false,\r\n            canSelectFolder: false,\r\n            selectableFilter: null,\r\n            options: false,\r\n            element: null,\r\n            query: {\r\n                order: 'desc',\r\n                orderBy: 'filemtime',\r\n                path: '/'\r\n            },\r\n            backgroundColor: 'var(--tblr-bg-surface)',\r\n            stickyHeader: false,\r\n            requestData: defaultRequest,\r\n            addFile: defaultAddFile,\r\n            methods: [\r\n                {title: 'Upload file', method: 'pc' },\r\n                {title: 'Create folder', method: 'createFolder' },\r\n            ],\r\n            url: mw.settings.site_url + 'api/file-manager/list',\r\n            viewType: 'list' // 'list' | 'grid'\r\n        };\r\n\r\n        var _e = {};\r\n\r\n\r\n        this.on = function (e, f) { _e[e] ? _e[e].push(f) : (_e[e] = [f]) };\r\n        this.dispatch = function (e, f) { _e[e] ? _e[e].forEach(function (c){ c.call(this, f); }) : ''; };\r\n\r\n\r\n        var normalizeAccept = function (type) {\r\n\r\n            scope.originalAccept = type;\r\n\r\n            type = (type || '').trim().toLowerCase();\r\n            if(!type) return '*';\r\n            if (type === 'image' || type === 'images') return '.png,.gif,.jpg,.jpeg,.bmp,.svg,.ico,.webp,.avif';\r\n            if (type === 'video' || type === 'videos') return '.mp4,.webm,.ogg,.wma,.mov,.wmv';\r\n            if (type === 'document' || type === 'documents') return '.doc,.docx,.log,.pdf,.msg,.odt,.pages,' +\r\n                '.rtf,.tex,.txt,.wpd,.wps,.pps,.ppt,.pptx,.xml,.htm,.html,.xlr,.xls,.xlsx';\r\n\r\n            return '*';\r\n        };\r\n\r\n        this.settings = mw.object.extend({}, defaults, options);\r\n        if(this.settings.accept) {\r\n            this.settings.accept = normalizeAccept(this.settings.accept);\r\n        } else if(this.settings.type) {\r\n            this.settings.accept = normalizeAccept(this.settings.type);\r\n        }\r\n\r\n        var table, tableHeader, tableBody;\r\n\r\n        var _checkName = 'select-fm-' + (new Date().getTime());\r\n\r\n        var globalcheck, _pathNode, _backNode;\r\n\r\n        var _check = function (name) {\r\n            var input = document.createElement('input');\r\n            input.type = (scope.settings.multiselect ? 'checkbox' : 'radio');\r\n            input.name = name || _checkName;\r\n            input.className = 'form-check-input';\r\n            var root = mw.element('<label class=\"form-check\"><span></span></label>');\r\n            root.prepend(input);\r\n\r\n            ['click', 'mousedown', 'mouseup', 'touchstart', 'touchend'].forEach(function (ev){\r\n                root.get(0).addEventListener(ev, function (e){\r\n                   e.stopImmediatePropagation();\r\n                   e.stopPropagation();\r\n\r\n                });\r\n            });\r\n\r\n            return {\r\n                root: root,\r\n                input: mw.element(input),\r\n            };\r\n        };\r\n\r\n        var _size = function (item, dc) {\r\n            var bytes = item.size;\r\n            if (typeof bytes === 'undefined' || bytes === null) return '';\r\n            if (bytes === 0) return '0 Bytes';\r\n            var k = 1000,\r\n                dm = dc === undefined ? 2 : dc,\r\n                sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n                i = Math.floor(Math.log(bytes) / Math.log(k));\r\n            return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n        };\r\n\r\n\r\n\r\n\r\n        var _createPaginationNavLink = function (i, label, curr) {\r\n            if(!label) {\r\n                label = i;\r\n            }\r\n            var lnk = mw.element('<li class=\"page-item\"><a class=\"page-link\">' + label + '</a></li>');\r\n\r\n            lnk.find('a').on('click', function () {\r\n                scope.setPage(i);\r\n            });\r\n            if(i === curr) {\r\n                lnk.addClass('active');\r\n            }\r\n            return lnk;\r\n        };\r\n\r\n\r\n\r\n        var _createPaginationNav = function (array, curr, totalPages) {\r\n            var wrapper = mw.element('<div class=\"pagination\" />');\r\n            if(curr > 1){\r\n                wrapper.append(_createPaginationNavLink(1, '&laquo;', curr));\r\n                wrapper.append(_createPaginationNavLink(curr-1, '&lsaquo;', curr));\r\n\r\n            }\r\n            array.forEach(function (i){\r\n                if(i <= totalPages) {\r\n                   wrapper.append(_createPaginationNavLink(i, i, curr));\r\n                }\r\n            });\r\n            if(curr < totalPages){\r\n                wrapper.append(_createPaginationNavLink(curr+1, '&rsaquo;'));\r\n                wrapper.append(_createPaginationNavLink(totalPages, '&raquo;'));\r\n            }\r\n            return wrapper;\r\n        }\r\n        var createPagination = function (obj) {\r\n            if(!scope.pagingNavigations) {\r\n                scope.pagingNavigations = {\r\n                    top: mw.element('<div class=\"mw-file-manager-paging mw-file-manager-paging-top\" />'),\r\n                    bottom: mw.element('<div class=\"mw-file-manager-paging mw-file-manager-paging-bottom\" />')\r\n                }\r\n                // scope.tableWrapper.prepend(scope.pagingNavigations.top);\r\n                scope.tableWrapper.append(scope.pagingNavigations.bottom);\r\n            }\r\n            var pg = obj.pagination;\r\n            var array, curr = pg.currentPage;\r\n            if (curr === 1 || curr === 2 || curr === 3) {\r\n                array = [1,2,3,4,5];\r\n            } else {\r\n                array = [curr-2,curr-1,curr,curr+1,curr+2];\r\n            }\r\n\r\n\r\n\r\n            // scope.pagingNavigations.top.empty().append(_createPaginationNav(array, curr, pg.totalPages));\r\n            scope.pagingNavigations.bottom.empty().append(_createPaginationNav(array, curr, pg.totalPages));\r\n        };\r\n\r\n        var _image = function (item) {\r\n            if (item.type === 'folder') {\r\n                return '<span class=\"mw-file-manager-list-item-thumb mw-file-manager-list-item-thumb-folder\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" fill=\"currentColor\" viewBox=\"0 96 960 960\" width=\"48\"><path d=\"M141 896q-24 0-42-18.5T81 836V316q0-23 18-41.5t42-18.5h280l60 60h340q23 0 41.5 18.5T881 376v460q0 23-18.5 41.5T821 896H141Zm0-580v520h680V376H456l-60-60H141Zm0 0v520-520Z\"/></svg></span>';\r\n            } else if (item.thumbnail) {\r\n                return '<span class=\"mw-file-manager-list-item-thumb mw-file-manager-list-item-thumb-image\" style=\"background-image: url(' + item.thumbnail + ')\"></span>';\r\n            } else {\r\n                var ext = item.name.split('.').pop();\r\n                if(!ext) {\r\n                    ext = item.mimeType;\r\n                }\r\n                return '<span class=\"mw-file-manager-list-item-thumb mw-file-manager-list-item-thumb-file\">' + (ext) + '</span>';\r\n            }\r\n        };\r\n\r\n        var createOption = function (item, option) {\r\n            if(!option.match(item)) {\r\n                return '';\r\n            }\r\n            var el = mw.element({\r\n                content: option.label,\r\n                props: {\r\n                    className: 'dropdown-item'\r\n                }\r\n            });\r\n            el.on('click', function (e){\r\n                e.stopPropagation()\r\n                option.action(item);\r\n            });\r\n            return el;\r\n        };\r\n\r\n        var _renameHandle = function (item) {\r\n            mw.prompt(mw.lang('Enter new name'), function(){\r\n\r\n            }, item.name);\r\n\r\n        };\r\n\r\n        var _downloadHandle = function (item) {\r\n            var a = document.createElement(\"a\");\r\n            a.href = item.url;\r\n            a.setAttribute(\"download\", item.name);\r\n            a.click();\r\n        };\r\n\r\n\r\n        var _copyUrlHandle = function (item) {\r\n            mw.tools.copy(item.url);\r\n        };\r\n\r\n        var _deleteHandle = function (items) {\r\n            if(items && !items.length){\r\n                items = [items];\r\n            }\r\n            items = items.map(itm => {\r\n                return itm.path ? itm.path : itm;\r\n            })\r\n            mw.confirm(mw.lang('Are you sure') + '?', function (){\r\n                var xhr = new XMLHttpRequest();\r\n                scope.loading(true);\r\n                xhr.onreadystatechange = function(e) {\r\n                    if (this.readyState === 4 && this.status === 200) {\r\n                        scope.refresh(true);\r\n                    } else if(this.status !== 200) {\r\n\r\n                    }\r\n                    scope.loading(false)\r\n                };\r\n                xhr.addEventListener('error', function (e){\r\n                    scope.loading(false)\r\n                });\r\n                var dt = {\r\n                    paths:[...items],\r\n\r\n                };\r\n                var url = route('api.file-manager.delete');\r\n                xhr.open(\"DELETE\", url, true);\r\n                var tokenFromCookie = mw.cookie.get(\"XSRF-TOKEN\");\r\n                if (tokenFromCookie) {\r\n                    xhr.setRequestHeader('X-XSRF-TOKEN', tokenFromCookie);\r\n                }\r\n            //    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\r\n                xhr.setRequestHeader('Content-Type', 'application/json');\r\n\r\n\r\n\r\n                xhr.send(JSON.stringify(dt));\r\n            });\r\n        };\r\n\r\n\r\n\r\n\r\n        var _selectedUI = function () {\r\n            if(!scope.settings.selectable) {\r\n                return;\r\n            }\r\n            scope.root.removeClass('mw-fm-all-selected', 'mw-fm-none-selected', 'mw-fm-part-selected');\r\n            if(!scope.settings.multiselect) {\r\n\r\n                if(scope.areNoneSelected()) {\r\n                    scope.root.addClass('mw-fm-none-selected');\r\n\r\n                }  else {\r\n                    scope.root.addClass('mw-fm-part-selected');\r\n\r\n                }\r\n\r\n                return;\r\n            }\r\n            if(scope.areAllSelected()) {\r\n                scope.root.addClass('mw-fm-all-selected');\r\n                globalcheck.input.prop('checked', true);\r\n                globalcheck.input.prop('indeterminate', false);\r\n            } else if(scope.areNoneSelected()) {\r\n                scope.root.addClass('mw-fm-none-selected');\r\n                globalcheck.input.prop('checked', false);\r\n                globalcheck.input.prop('indeterminate', false);\r\n            }  else {\r\n                scope.root.addClass('mw-fm-part-selected');\r\n                globalcheck.input.prop('checked', false);\r\n                globalcheck.input.prop('indeterminate', true);\r\n\r\n                var selectedItemsCount = scope.getSelected().length;\r\n                if (selectedItemsCount > 0) {\r\n                    scope.root.get(0).querySelector('.mw-file-manager--multiselect--selected-actions').style.display = 'block';\r\n                    scope.root.get(0).querySelector('.mw-file-manager--multiselect--count').innerHTML = selectedItemsCount;\r\n                } else {\r\n                    scope.root.get(0).querySelector('.mw-file-manager--multiselect--selected-actions').style.display = 'none';\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        var createOptions = function (item) {\r\n            var options = [\r\n             //   { label: 'Rename', action: _renameHandle, match: function (item) { return true } },\r\n                { label: 'Download', action: _downloadHandle, match: function (item) { return item.type === 'file'; } },\r\n                { label: 'Copy url', action: _copyUrlHandle, match: function (item) { return true } },\r\n                { label: 'Delete', action: _deleteHandle, match: function (item) { return true } },\r\n            ];\r\n            var el = mw.element().addClass('mw-file-manager-list-item-options');\r\n            el.append(mw.element({tag: 'span', content: ' <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"22\" viewBox=\"0 96 960 960\" width=\"22\" fill=\"currentColor\"><path d=\"M207.858 624Q188 624 174 609.858q-14-14.141-14-34Q160 556 174.142 542q14.141-14 34-14Q228 528 242 542.142q14 14.141 14 34Q256 596 241.858 610q-14.141 14-34 14Zm272 0Q460 624 446 609.858q-14-14.141-14-34Q432 556 446.142 542q14.141-14 34-14Q500 528 514 542.142q14 14.141 14 34Q528 596 513.858 610q-14.141 14-34 14Zm272 0Q732 624 718 609.858q-14-14.141-14-34Q704 556 718.142 542q14.141-14 34-14Q772 528 786 542.142q14 14.141 14 34Q800 596 785.858 610q-14.141 14-34 14Z\"/></svg>', props: {tooltip:'options'}}).addClass('btn btn-sm mw-file-manager-list-item-options-button'));\r\n            var optsHolder = mw.element().addClass('dropdown-menu mw-file-manager-list-item-options-list');\r\n            el.on('click', function (e){\r\n                e.stopPropagation()\r\n                var all = scope.root.get(0).querySelectorAll('.mw-file-manager-list-item-options.active');\r\n                for (var i = 0; i < all.length; i++ ) {\r\n                    if (all[i] !== this) {\r\n                        all[i].classList.remove('active');\r\n                    }\r\n                }\r\n                el.toggleClass('active');\r\n            });\r\n            options.forEach(function (options){\r\n                optsHolder.append(createOption(item, options));\r\n            });\r\n            if(!this.__bodyOptionsClick) {\r\n                this.__bodyOptionsClick = true;\r\n                var bch = function (e) {\r\n                    var curr = e.target;\r\n                    var clicksOption = false;\r\n                  while (curr && curr !== document.body) {\r\n                      if(curr.classList.contains('mw-file-manager-list-item-options')){\r\n                          clicksOption = true;\r\n                          break;\r\n                      }\r\n                      curr = curr.parentNode;\r\n                  }\r\n                  if(!clicksOption) {\r\n                      var all = scope.root.get(0).querySelectorAll('.mw-file-manager-list-item-options.active');\r\n                      for(var i = 0; i < all.length; i++ ) {\r\n                          if (all[i] !== this) {\r\n                              all[i].classList.remove('active')\r\n                          }\r\n                      }\r\n                  }\r\n                };\r\n                document.body.addEventListener('mousedown', bch , false);\r\n            }\r\n            el.append(optsHolder);\r\n            return el;\r\n        };\r\n\r\n\r\n        var _data = {data: []};\r\n\r\n        this.setData = function (data) {\r\n            _data = data;\r\n        };\r\n\r\n        this.updateData = function (data) {\r\n            this.setData(data);\r\n            setTimeout(function (){\r\n                _selectedUI();\r\n            }, 100);\r\n            this.dispatch('dataUpdated', data);\r\n        };\r\n\r\n        this.getSelectableItems = function () {\r\n            return this.getItems().filter(function (itm){\r\n                return (itm.type !== 'folder' || scope.settings.canSelectFolder) && scope.canSelect(itm);\r\n            });\r\n        };\r\n\r\n        this.getItems = function () {\r\n            return this.getData().data;\r\n        };\r\n\r\n        this.getData = function () {\r\n            return _data;\r\n        };\r\n\r\n        var _progress;\r\n        this.progress = function (state) {\r\n\r\n            if(typeof state === 'string') {\r\n                state = Number(state);\r\n            }\r\n\r\n            if(!_progress || !_progress.get(0).parentNode) {\r\n                _progress = mw.element({\r\n                    props: {\r\n                        className: 'mw-file-manager-progress'\r\n                    }\r\n                });\r\n                scope.root.prepend(_progress);\r\n            }\r\n            if(state) {\r\n                mw.progress({element: _progress.get(0), action: 'Uploading...'}).set(state);\r\n            } else {\r\n                mw.progress({element: _progress.get(0)}).hide();\r\n            }\r\n            if(state === 100) {\r\n                setTimeout(function (){\r\n                    mw.progress({element: _progress.get(0)}).hide();\r\n                }, 300)\r\n            }\r\n        };\r\n\r\n        var _loader;\r\n        this.loading = function (state) {\r\n            if(!_loader || !_loader.get(0).parentNode) {\r\n                _loader = mw.element({\r\n                    props: {\r\n                        className: 'mw-file-manager-spinner'\r\n                    }\r\n                });\r\n                scope.root.prepend(_loader);\r\n            }\r\n            if(state) {\r\n                mw.spinner({element: _loader.get(0), size: 32, decorate: false}).show();\r\n            } else {\r\n                mw.spinner({element: _loader.get(0)}).remove();\r\n            }\r\n        };\r\n\r\n\r\n        this.isSearch = function () {\r\n            return !!this.settings.query.keyword;\r\n        };\r\n\r\n        this.setPage = function (page) {\r\n            this.settings.query.page = page;\r\n            this.requestRender(this.settings.query);\r\n        }\r\n\r\n        this.requestData = function (params, cb) {\r\n            this.settings.query = params;\r\n            var _cb = function (data) {\r\n\r\n                cb.call(undefined, data);\r\n                createPagination(data)\r\n                if(!data.data || data.data.length === 0) {\r\n                    scope.root.addClass('no-results');\r\n                    if(scope.isSearch()) {\r\n                        _noResultsLabel(mw.lang('Nothing found'));\r\n                        scope. root.addClass('no-results-search');\r\n                    } else {\r\n                        _noResultsLabel(mw.lang('This folder is empty'));\r\n                        scope.root.removeClass('no-results-search');\r\n                    }\r\n                } else {\r\n                    scope.root.removeClass('no-results');\r\n                    scope.root.removeClass('no-results-search');\r\n                }\r\n                scope.loading(false, 1);\r\n            };\r\n\r\n            scope.loading(true);\r\n            var err = function (er) {\r\n                scope.loading(false, 2);\r\n            };\r\n\r\n            this.settings.requestData(\r\n                params, _cb, err\r\n            );\r\n        };\r\n\r\n\r\n\r\n\r\n        var noResultsContentLabel, noResultsContent;\r\n\r\n        var _noResultsLabel = function (label) {\r\n            noResultsContentLabel.html(label);\r\n        };\r\n\r\n\r\n        var _noResultsBlock = function () {\r\n\r\n            noResultsContentLabel = mw.element({\r\n                tag: 'h2',\r\n                props: {\r\n                    className: 'mw-file-manager-no-results-label'\r\n                },\r\n            });\r\n            noResultsContent = mw.element( {\r\n                tag: 'div',\r\n                props: {\r\n                    className: 'mw-file-manager-no-results-content',\r\n                },\r\n                content: noResultsContentLabel\r\n            });\r\n            var block = mw.element({\r\n                props: {\r\n                    className: 'mw-file-manager-no-results'\r\n                },\r\n                content: noResultsContent\r\n            });\r\n            scope.creteMethodsNode(noResultsContent.get(0), plusIcon('white', 10) + ' '  + mw.lang('Add'));\r\n            return block;\r\n        };\r\n\r\n        var userDate = function (date) {\r\n            var dt = new Date(date);\r\n            return dt.toLocaleString();\r\n        };\r\n\r\n        this.find = function (item) {\r\n            if (typeof item === 'number') {\r\n\r\n            }\r\n        };\r\n\r\n\r\n        var _activeSort = {\r\n            orderBy: this.settings.query.orderBy || 'filemtime',\r\n            order: this.settings.query.order || 'desc',\r\n        };\r\n\r\n        this.requestRender = function (query) {\r\n            this.requestData(query, function (res){\r\n                scope.setData(res);\r\n                scope.renderData();\r\n            });\r\n        }\r\n\r\n        this.refresh = function (full){\r\n            if(full) {\r\n                this.requestRender(this.settings.query)\r\n            } else {\r\n                scope.renderData();\r\n            }\r\n        };\r\n\r\n        this.sort = function (by, order, _request) {\r\n            if(typeof _request === 'undefined') {\r\n                _request = true;\r\n            }\r\n            if(!order){\r\n                if(by === _activeSort.orderBy) {\r\n                    if(_activeSort.order === 'asc') {\r\n                        order = 'desc';\r\n                    } else {\r\n                        order = 'asc';\r\n                    }\r\n                } else {\r\n                    order = 'asc';\r\n                }\r\n            }\r\n            _activeSort.orderBy = by;\r\n            _activeSort.order = order;\r\n            this.settings.query.orderBy = _activeSort.orderBy;\r\n            this.settings.query.order = _activeSort.order;\r\n\r\n            mw.element('[data-sortable]', scope.root).each(function (){\r\n                this.classList.remove('asc', 'desc');\r\n                if(this.dataset.sortable === _activeSort.orderBy) {\r\n                    this.classList.add(_activeSort.order);\r\n                }\r\n            });\r\n\r\n            if(_request) {\r\n                this.requestData(this.settings.query, function (res){\r\n                    scope.setData(res);\r\n                    scope.renderData();\r\n                });\r\n            }\r\n        };\r\n\r\n        this.search = function (keyword, _request) {\r\n            if(typeof _request === 'undefined') {\r\n                _request = true;\r\n            }\r\n\r\n            keyword = (keyword || '').trim();\r\n\r\n            if(!keyword){\r\n                mw.element('input', scope.root).val('');\r\n                mw.element('.has-value', scope.root).removeClass('has-value');\r\n                delete this.settings.query.keyword;\r\n                this.sort('filemtime', 'desc', false);\r\n            } else {\r\n                this.settings.query.keyword = keyword;\r\n                this.sort('keyword', 'desc', false);\r\n            }\r\n\r\n            mw.element('[data-sortable]', scope.root).each(function (){\r\n                this.classList.remove('asc', 'desc');\r\n                if(this.dataset.sortable === _activeSort.orderBy) {\r\n                    this.classList.add(_activeSort.order);\r\n                }\r\n            });\r\n\r\n            if(_request) {\r\n                this.requestData(this.settings.query, function (res){\r\n                    scope.setData(res);\r\n                    scope.renderData();\r\n                });\r\n            }\r\n        };\r\n\r\n        this.canSelect = function (item) {\r\n            if(typeof this.settings.selectableFilter === 'function') {\r\n                return this.settings.selectableFilter(item)\r\n            }\r\n            return true;\r\n        };\r\n\r\n\r\n\r\n\r\n        this.acceptMatches = function(item) {\r\n\r\n            if(item.type === 'folder' || !this.settings.accept  || this.settings.accept === '*') {\r\n                return true;\r\n            }\r\n\r\n            const accept = this.settings.accept.split(',');\r\n            const extension = `.${item.name.split('.').pop()}`;\r\n            return accept.indexOf(extension) !== -1 || accept.indexOf(item.mimeType) !== -1\r\n\r\n            return true;\r\n        }\r\n\r\n        this.singleListView = function (item) {\r\n\r\n            var row = mw.element({ tag: 'tr', props: {className: `mw-file-manager-list-item-type--${item.type} mw-file-manager-list-item-matches--${this.acceptMatches(item)}` } });\r\n            var cellImage = mw.element({ tag: 'td', content: _image(item), props: {className: 'mw-file-manager-list-item-thumb-image-cell'}  });\r\n            var cellName = mw.element({ tag: 'td', content: item.name , props: {className: 'mw-file-manager-list-item-name-cell', title: item.name} });\r\n            var cellSize = mw.element({ tag: 'td', content: _size(item), props: {className: 'mw-file-manager-list-item-size-cell'} });\r\n\r\n            var cellmodified = mw.element({ tag: 'td', content: userDate(item.modified), props: {className: 'mw-file-manager-list-item-modified-cell'} });\r\n            if(item.type === 'folder') {\r\n                row.on('click', function (){\r\n                    scope.path(scope.path() + '/' + item.name);\r\n                });\r\n            }\r\n\r\n\r\n\r\n            if(this.settings.selectable) {\r\n                if ((this.settings.canSelectFolder || item.type === 'file') && this.canSelect(item)) {\r\n                    var check = _check();\r\n                    if(scope.settings.selectableRow) {\r\n                        row.on('click', function(e){\r\n                            scope[check.input.get(0).checked ? 'unselect' : 'select'](item);\r\n                            _selectedUI();\r\n                            scope.dispatch('selectionChanged', scope.getSelected());\r\n                        });\r\n                        row.on('dblclick', function(e){\r\n                            scope['select'](item);\r\n                            var val = scope.getSelected();\r\n                            scope.dispatch('insertByValue', scope.getSelected());\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                        });\r\n                    }\r\n                    check.input.on('change', function () {\r\n                         scope[!this.checked ? 'unselect' : 'select'](item);\r\n                        _selectedUI();\r\n                        scope.dispatch('selectionChanged', scope.getSelected());\r\n                    });\r\n                    row.append( mw.element({ tag: 'td', content: check.root, props: {className: 'mw-file-manager-list-item-check-cell'} }));\r\n                } else {\r\n                    row.append( mw.element({ tag: 'td'  }));\r\n                }\r\n            }\r\n             row\r\n                .append(cellImage)\r\n                .append(cellName)\r\n                .append(cellSize)\r\n                .append(cellmodified);\r\n            if(this.settings.options) {\r\n                var cellOptions = mw.element({ tag: 'td', content: createOptions(item) }).addClass('mw-file-manager-options-cell');\r\n                row.append(cellOptions);\r\n            }\r\n\r\n            return row;\r\n        };\r\n\r\n        var rows = [];\r\n\r\n        var listViewBody = function () {\r\n            rows = [];\r\n            tableBody ? tableBody.remove() : '';\r\n            tableBody =  mw.element({\r\n                tag: 'tbody'\r\n            });\r\n            scope.renderData();\r\n            return tableBody;\r\n        };\r\n\r\n        this.renderData = function (){\r\n            tableBody.empty();\r\n            rows = [];\r\n            this._selected = [];\r\n            if(globalcheck) {\r\n                globalcheck.input.prop('indeterminate', false);\r\n                globalcheck.input.prop('checked', false);\r\n            }\r\n\r\n            let isLastFolder = false;\r\n            scope.getItems().forEach(function (item) {\r\n                var row = scope.singleListView(item);\r\n\r\n                rows.push({data: item, row: row});\r\n                tableBody.append(row);\r\n                if(!isLastFolder && item.type === 'file') {\r\n                    row.before('<hr class=\"mw-file-manager-list-item-type--types-delimitter\">');\r\n                    isLastFolder = true;\r\n                }\r\n            });\r\n            var folders = tableBody.find('.mw-file-manager-list-item-type--folder');\r\n            if(folders.nodes.length) {\r\n                folders.nodes[folders.nodes.length - 1].classList.add('mw-file-manager-list-item-type--folder-last');\r\n                mw.element(folders.nodes[folders.nodes.length - 1]).after\r\n            }\r\n        };\r\n\r\n\r\n        this._selected = [];\r\n\r\n        var pushUnique = function (obj) {\r\n            if (scope._selected.indexOf(obj) === -1) {\r\n                scope._selected.push(obj);\r\n            }\r\n        };\r\n\r\n\r\n        var afterSelect = function (obj, state) {\r\n            if(scope.settings.multiselect === false) {\r\n                rows.forEach(function (r){\r\n                    r.row.removeClass('selected');\r\n                });\r\n            }\r\n            var curr = rows.find(function (row){\r\n                return row.data === obj;\r\n            });\r\n            if(curr) {\r\n                curr.row[state ? 'addClass' : 'removeClass']( 'selected' );\r\n                var input = curr.row.find('input');\r\n                input.prop('checked', state);\r\n            }\r\n            _selectedUI();\r\n        };\r\n\r\n\r\n        this.getSelected = function () {\r\n            return this._selected;\r\n        };\r\n\r\n\r\n        this.areNoneSelected = function () {\r\n            return this.getSelected().length === 0;\r\n        };\r\n\r\n        this.areAllSelected = function () {\r\n             return this.getSelectableItems().length === this.getSelected().length;\r\n        };\r\n\r\n        this.selectAll = function () {\r\n            rows.forEach(function (rowItem){\r\n                scope.select(rowItem.data);\r\n            });\r\n        };\r\n        this.selectNone = function () {\r\n            rows.forEach(function (rowItem){\r\n                scope.unselect(rowItem.data);\r\n            });\r\n        };\r\n\r\n        this.selectAllToggle = function () {\r\n            if(this.areAllSelected()){\r\n                this.selectNone();\r\n            } else {\r\n                this.selectAll();\r\n            }\r\n        };\r\n\r\n        this.select = function (obj) {\r\n            if(obj.type === 'folder' && !this.settings.canSelectFolder) {\r\n                return;\r\n            }\r\n            if (this.settings.multiselect) {\r\n                pushUnique(obj);\r\n            } else {\r\n                this._selected = [obj];\r\n            }\r\n            afterSelect(obj, true);\r\n        };\r\n\r\n\r\n        this.unselect = function (obj) {\r\n            this._selected.splice(this._selected.indexOf(obj), 1);\r\n            afterSelect(obj, false);\r\n        };\r\n\r\n        this.back = function (){\r\n            var curr = this.settings.query.path;\r\n            if(!curr || curr === '/') {\r\n                return;\r\n            }\r\n            curr = curr.split('/');\r\n            curr.pop();\r\n            this.settings.query.path = curr.join('/');\r\n            this.path(this.settings.query.path );\r\n        };\r\n\r\n\r\n\r\n        this.creteSearchNode = function (target) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              var html = `<div class=\"row g-2 mw-file-manager-search form-control-live-edit-label-wrapper\">\r\n              <div class=\"col\">\r\n                <input type=\"text\" class=\"form-control-live-edit-input form-select\" placeholder=\"Search\">\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <button class=\"btn-icon mw-file-manager-search-button\" aria-label=\"Button\">\r\n\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0\"></path><path d=\"M21 21l-6 -6\"></path></svg>\r\n                </button>\r\n              </div>\r\n            </div>`;\r\n\r\n            var el = mw.element(html);\r\n            if(target) {\r\n                target.appendChild(el.get(0));\r\n            }\r\n            mw.element('input', el).on('input', function (){\r\n                this.parentNode.classList[!this.value.trim() ? 'remove' : 'add']('has-value');\r\n            });\r\n            mw.element('.mw-file-manager-search-clear', el).on('click', function (){\r\n                scope.search( '', true);\r\n                mw.element('input', el).focus();\r\n            });\r\n            mw.element('.mw-file-manager-search-button', el).on('click', function (){\r\n                scope.search( mw.element('input', el).val().trim() , true);\r\n            });\r\n\r\n            mw.element('input', el).on('keydown', function (e){\r\n                if (e.key === 'Enter' || e.keyCode === 13) {\r\n                    scope.search( mw.element('input', el).val().trim(), true);\r\n                }\r\n            });\r\n            return el.get(0);\r\n        };\r\n\r\n        this.creteMethodsNode = function (target, label) {\r\n            if(!this.settings.methods) {\r\n                return;\r\n            }\r\n            target = target || document.createElement('div');\r\n\r\n            var root = mw.element({\r\n                props: {\r\n                    className: 'mw-file-manager-create-methods-dropdown'\r\n                }\r\n            });\r\n            var addButton = mw.element({\r\n                props: {\r\n                    className: 'btn btn-success mw-file-manager-create-methods-dropdown-add',\r\n                    innerHTML: label || plusIcon('white')\r\n                }\r\n            });\r\n\r\n            addButton.on('click', function (){\r\n                this.parentElement.classList.toggle('active');\r\n            });\r\n\r\n            addButton.get(0).ownerDocument.body.addEventListener('click', function (e){\r\n                if (!addButton.get(0).includes(e.target)) {\r\n                    addButton.get(0).parentElement.classList.remove('active');\r\n                }\r\n            });\r\n\r\n            var selectElContent = mw.element({\r\n                props: {\r\n                    className: 'mw-file-manager-top-bar-actions-content'\r\n                }\r\n            });\r\n            this.settings.methods.forEach(function (method){\r\n                var node = mw.element({\r\n                    props: {\r\n                        className: 'mw-file-manager-add-node'\r\n                    }\r\n                });\r\n                node.append(scope.methods[method.method](method));\r\n                selectElContent.append(node);\r\n            });\r\n            target.appendChild(root.get(0));\r\n            root.append(addButton);\r\n            root.append(selectElContent);\r\n            return target;\r\n        };\r\n\r\n\r\n\r\n        var createTopBar = function (){\r\n            var topBar = mw.element({\r\n                props: {\r\n                    className: 'mw-file-manager-top-bar'\r\n                }\r\n            });\r\n\r\n            var selectEl = mw.element({\r\n                props: {\r\n                    className: 'mw-file-manager-top-bar-actions'\r\n                }\r\n            });\r\n\r\n\r\n            scope.creteMethodsNode(selectEl.get(0));\r\n            scope.creteSearchNode(selectEl.get(0));\r\n\r\n\r\n            var viewTypeSelectorRoot = mw.element({\r\n                props: {\r\n                    className: 'mw-file-manager-bar-view-type-selector'\r\n                }\r\n            });\r\n\r\n            var viewTypeSelector = mw.element(`\r\n            <div class=\"btn-group\">\r\n                <span class=\"btn  btn-icon\" data-view-type=\"grid\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Grid\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 96 960 960\" width=\"24\" fill=\"currentColor\" class=\"icon icon-tabler\"><path d=\"M120 536V216h320v320H120Zm0 400V616h320v320H120Zm400-400V216h320v320H520Zm0 400V616h320v320H520ZM200 456h160V296H200v160Zm400 0h160V296H600v160Zm0 400h160V696H600v160Zm-400 0h160V696H200v160Zm400-400Zm0 240Zm-240 0Zm0-240Z\"/></svg>\r\n                </span>\r\n\r\n                <span class=\"btn btn-icon \" data-view-type=\"list\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"List\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 96 960 960\" width=\"24\" fill=\"currentColor\" class=\"icon icon-tabler\"><path d=\"M360 856v-80h480v80H360Zm0-240v-80h480v80H360Zm0-240v-80h480v80H360ZM200 896q-33 0-56.5-23.5T120 816q0-33 23.5-56.5T200 736q33 0 56.5 23.5T280 816q0 33-23.5 56.5T200 896Zm0-240q-33 0-56.5-23.5T120 576q0-33 23.5-56.5T200 496q33 0 56.5 23.5T280 576q0 33-23.5 56.5T200 656Zm0-240q-33 0-56.5-23.5T120 336q0-33 23.5-56.5T200 256q33 0 56.5 23.5T280 336q0 33-23.5 56.5T200 416Z\"/></svg>\r\n                </span>\r\n            </div>`);\r\n\r\n\r\n\r\n          viewTypeSelectorRoot.append(viewTypeSelector);\r\n\r\n\r\n            viewTypeSelector.find('.btn').on('click', function (val){\r\n                scope.viewType( this.dataset.viewType );\r\n                mw.storage.set('mw-file-manager-view-type', this.dataset.viewType);\r\n            });\r\n\r\n            topBar.append(selectEl);\r\n            selectEl.append(viewTypeSelectorRoot);\r\n            return topBar.get(0);\r\n\r\n        };\r\n\r\n        var createMainBar = function (){\r\n\r\n\r\n            _backNode = mw.element({\r\n                tag: 'button',\r\n\r\n                props: {\r\n                    className: 'btn btn-link btn-sm',\r\n                    innerHTML: `\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-arrow-left\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n   <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n   <path d=\"M5 12l14 0\"></path>\r\n   <path d=\"M5 12l6 6\"></path>\r\n   <path d=\"M5 12l6 -6\"></path>\r\n</svg>\r\n                    ${mw.lang('Back')}`\r\n                }\r\n            });\r\n            _backNode.on('click', function (){\r\n                scope.back();\r\n            });\r\n\r\n\r\n            _pathNode = mw.element({\r\n                tag: 'ol',\r\n                props: {\r\n                    className: 'breadcrumb mw-file-manager-bar-path'\r\n                }\r\n            });\r\n            var _pathNodeRoot = mw.element({\r\n                props: {\r\n                    className: 'mw-file-manager-bar-path-root'\r\n                }\r\n            });\r\n            _pathNodeRoot.append(_pathNode)\r\n\r\n            var bar = mw.element({\r\n                props: {\r\n                    className: 'mw-file-manager-bar'\r\n                }\r\n            });\r\n\r\n\r\n            var multiSelectMenuTemplate = mw.element(`\r\n                <div class=\"mw-file-manager--multiselect--context-actions\">\r\n                    <div>\r\n                        <button type=\"button\" class=\"btn btn-icon btn-sm\" data-action=\"multiSelectDownloadAll\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Download\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 96 960 960\" width=\"24\" fill=\"currentColor\"><path d=\"M240 896q-33 0-56.5-23.5T160 816V696h80v120h480V696h80v120q0 33-23.5 56.5T720 896H240Zm240-160L280 536l56-58 104 104V256h80v326l104-104 56 58-200 200Z\"/></svg>\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-icon btn-danger btn-sm\" data-action=\"multiSelectDeleteAll\"  data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Delete\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 96 960 960\" width=\"24\" fill=\"currentColor\"><path d=\"M280 936q-33 0-56.5-23.5T200 856V336h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680 936H280Zm400-600H280v520h400V336ZM360 776h80V416h-80v360Zm160 0h80V416h-80v360ZM280 336v520-520Z\"/></svg>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div class=\"mw-file-manager--multiselect--selected-actions\">\r\n                        <span class=\"mw-file-manager--multiselect--count\">0</span> files are marked.\r\n                        <button type=\"button\" class=\"btn btn-outline-info btn-sm\" data-action=\"multiSelectRemoveSelection\">Cancel</button>\r\n                        <button type=\"button\" class=\"btn btn-outline-success btn-sm\" data-action=\"multiSelectInsert\">Insert</button>\r\n                    </div>\r\n                </div>\r\n            `);\r\n\r\n\r\n\r\n            scope.multiSelectDeleteAll = function() {\r\n                const selected = scope.getSelected();\r\n                _deleteHandle(selected)\r\n            }\r\n\r\n            scope.multiSelectRemoveSelection = function() {\r\n                scope.selectNone();\r\n            }\r\n            scope.multiSelectInsert = function() {\r\n                scope.dispatch('insert');\r\n            }\r\n\r\n            scope.multiSelectDownloadAll = function() {\r\n                const selected = scope.getSelected().filter(itm => itm.type === 'file');\r\n                selected.forEach(itm => {\r\n                    _downloadHandle(itm)\r\n                })\r\n\r\n            }\r\n\r\n            bar\r\n                .append(multiSelectMenuTemplate)\r\n                .append(_backNode)\r\n                .append(_pathNodeRoot)\r\n\r\n                multiSelectMenuTemplate.get(0).querySelectorAll('.btn').forEach(node => {\r\n                    node.addEventListener('click', e => {\r\n                        this[node.dataset.action]();\r\n                    });\r\n                });\r\n\r\n\r\n            return bar;\r\n        };\r\n\r\n        var createListViewHeader = function () {\r\n            var thCheck;\r\n            if (scope.settings.selectable && scope.settings.multiselect ) {\r\n                globalcheck = _check('select-fm-global-' + (new Date().getTime()));\r\n                globalcheck.root.addClass('mw-file-manager-select-all-check');\r\n                globalcheck.input.on('input', function () {\r\n                    scope.selectAllToggle();\r\n                });\r\n                thCheck = mw.element({ tag: 'th', content: globalcheck.root  }).addClass('mw-file-manager-select-all-heading');\r\n            } else {\r\n                thCheck = mw.element({ tag: 'th', }).addClass('mw-file-manager-select-all-heading');\r\n            }\r\n            var thImage = mw.element({ tag: 'th', content: ''  });\r\n            var thName = mw.element({ tag: 'th', content: '<span>Name</span>'  }).addClass('mw-file-manager-sortable-table-header');\r\n            var thSize = mw.element({ tag: 'th', content: '<span>Size</span>'  }).addClass('mw-file-manager-sortable-table-header');\r\n            var thModified = mw.element({ tag: 'th', content: '<span>Last modified</span>'  }).addClass('mw-file-manager-sortable-table-header');\r\n\r\n            var ths = [thCheck, thImage, thName, thSize, thModified];\r\n\r\n            if(scope.settings.options) {\r\n                ths.push(mw.element({ tag: 'th', content: ''  }).addClass('mw-file-manager-options-cell'));\r\n            }\r\n\r\n                ths.forEach(function (th){\r\n                    th.css('backgroundColor', scope.settings.backgroundColor);\r\n                    if(typeof scope.settings.stickyHeader === 'number') {\r\n                        th.css('top', scope.settings.stickyHeader);\r\n                    }\r\n                });\r\n\r\n            var tr = mw.element({\r\n                tag: 'tr',\r\n                content: ths\r\n            });\r\n            tableHeader =  mw.element({\r\n                tag: 'thead',\r\n                content: tr\r\n            });\r\n            tableHeader.addClass('sticky-' + (scope.settings.stickyHeader !== false && scope.settings.stickyHeader !== undefined));\r\n            tableHeader.css('backgroundColor', scope.settings.backgroundColor);\r\n            thName.dataset('sortable', 'basename').on('click', function (){ scope.sort(this.dataset.sortable) });\r\n            thSize.dataset('sortable', 'filesize').on('click', function (){ scope.sort(this.dataset.sortable) });\r\n            thModified.dataset('sortable', 'filemtime').on('click', function (){ scope.sort(this.dataset.sortable) });\r\n\r\n            return tableHeader;\r\n        };\r\n\r\n        var _view = function () {\r\n            if(!table) {\r\n                table =  mw.element('<table class=\"mw-file-manager-view-table\" />');\r\n                table.css('backgroundColor', scope.settings.backgroundColor);\r\n                table\r\n                    .append(createListViewHeader())\r\n                    .append(listViewBody());\r\n            } else {\r\n                scope.renderData();\r\n            }\r\n            var tableWrap = mw.element('<div class=\"mw-file-manager-view-table-wrap\" />');\r\n            tableWrap.append(table);\r\n            scope.tableWrapper = tableWrap;\r\n            return tableWrap;\r\n        };\r\n\r\n        this.view = function () {\r\n            this.root\r\n                .empty()\r\n                .append(createTopBar())\r\n                .append(createMainBar())\r\n                .append(_view())\r\n                .append(_noResultsBlock());\r\n        };\r\n\r\n        var createRoot = function (){\r\n            scope.root = mw.element({\r\n                props: {\r\n                    className: 'mw-file-manager-root'\r\n                }\r\n            });\r\n        };\r\n\r\n        this.viewType = function (viewType, _forced) {\r\n            if (!viewType) {\r\n                return this.settings.viewType;\r\n            }\r\n            if(viewType !== this.settings.viewType || _forced) {\r\n                this.settings.viewType = viewType;\r\n                this.root.dataset('view', this.settings.viewType);\r\n\r\n                Array.from(this.root.get(0).querySelectorAll('[data-view-type]')).forEach(function(node){\r\n                    node.classList[node.dataset.viewType === viewType ? 'add' : 'remove']('active');\r\n                });\r\n                this.dispatch('viewTypeChange', this.settings.viewType);\r\n\r\n            }\r\n        };\r\n\r\n        var pathItem = function (path, html){\r\n            var node = document.createElement('li');\r\n            node.className = 'breadcrumb-item';\r\n            node.innerHTML = html || path.split('/').pop();\r\n            node.addEventListener('click', function (e){\r\n                e.preventDefault();\r\n                scope.path(path);\r\n            });\r\n            return node;\r\n        };\r\n\r\n        this.path = function (path, _request){\r\n            if(typeof _request === 'undefined') {\r\n                _request = true;\r\n            }\r\n            if(typeof path === 'undefined'){\r\n                return this.settings.query.path;\r\n            }\r\n            path = (path || '').trim();\r\n            this.settings.query.page = 1;\r\n            this.settings.query.path = path;\r\n            delete this.settings.query.keyword;\r\n            mw.element('input', scope.root).val('');\r\n            mw.element('.has-value', scope.root).removeClass('has-value');\r\n            scope.dispatch('pathChanged', this.settings.query.path);\r\n            path = path.split('/').map(function (itm){return itm.trim()}).filter(function (itm){return !!itm});\r\n            _pathNode.empty();\r\n\r\n            var showHome = path.length > 0;\r\n\r\n\r\n            while (path.length) {\r\n                var item = pathItem(path.join('/'))\r\n                _pathNode.prepend(item);\r\n                path.pop();\r\n\r\n            }\r\n\r\n            if(showHome) {\r\n                _pathNode.prepend(pathItem('', 'Home'));\r\n                if(_backNode) {\r\n                    _backNode.show();\r\n                }\r\n\r\n            } else {\r\n                if(_backNode) {\r\n                    _backNode.hide();\r\n                }\r\n            }\r\n            if(_request) {\r\n                scope.sort(scope.settings.query.orderBy, scope.settings.query.order, false);\r\n\r\n                this.requestData(this.settings.query, function (res){\r\n                    scope.setData(res);\r\n                    scope.renderData();\r\n                });\r\n            }\r\n            _pathNode.find('.acttive').removeClass('active')\r\n            _pathNode.find('.breadcrumb-item:last-child').addClass('active')\r\n\r\n        };\r\n\r\n        this.init = function (){\r\n            createRoot();\r\n            this.requestData(this.settings.query,  (data) => {\r\n\r\n                let viewType = scope.settings.viewType;\r\n                let getViewTypeFromStorage = mw.storage.get('mw-file-manager-view-type');\r\n                if (getViewTypeFromStorage) {\r\n                    viewType = getViewTypeFromStorage;\r\n                }\r\n\r\n                scope.updateData(data);\r\n                scope.view();\r\n                scope.path(scope.settings.query.path, false);\r\n                scope.sort(scope.settings.query.orderBy, scope.settings.query.order, false);\r\n                scope.viewType(viewType, true);\r\n                scope.dispatch('ready');\r\n            });\r\n            if (this.settings.element) {\r\n                mw.element(this.settings.element).empty().append(this.root);\r\n            }\r\n        };\r\n        this.init();\r\n    };\r\n\r\n\r\n\r\n    mw.FileManager = function (options) {\r\n        return new FileManager(options);\r\n    };\r\n})();\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/filemanager.js?");

/***/ }),

/***/ "./resources/assets/components/filepicker.js":
/*!***************************************************!*\
  !*** ./resources/assets/components/filepicker.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n\r\nvar fileUploadProgress = function (fileName, progress, target) {\r\n    if (!target) {\r\n        target = document.body;\r\n    }\r\n\r\n    var node = target.querySelector('[data-file=\"' + fileName + '\"]');\r\n    if(!node) {\r\n        node = document.createElement('div');\r\n        node.dataset.file = fileName;\r\n        target.appendChild(node);\r\n    }\r\n\r\n    mw.progress({element: node, action: fileName}).set(progress);\r\n\r\n};\r\n\r\n\r\nmw.filePickerDialog = (conf = {pickerOptions: {}, dialogOptions: {}}, callback) => {\r\n\r\n    if(typeof conf === 'function') {\r\n        callback = conf;\r\n        conf = {pickerOptions: {}, dialogOptions: {}}\r\n    }\r\n    if(!conf.pickerOptions) {\r\n        conf.pickerOptions = {}\r\n    }\r\n\r\n    if(!conf.dialogOptions) {\r\n        conf.dialogOptions = {}\r\n    }\r\n\r\n    const {pickerOptions, dialogOptions} = conf;\r\n    let dialog, picker;\r\n\r\n\r\n    let filePickerDefaults = {\r\n        type: 'images',\r\n        label: false,\r\n        autoSelect: false,\r\n        footer: true,\r\n        _frameMaxHeight: true,\r\n    }\r\n\r\n    let filepickerSettings = Object.assign({}, filePickerDefaults, pickerOptions);\r\n    let url;\r\n\r\n    picker = new mw.filePicker({\r\n        ...filepickerSettings,\r\n        onResult: function(res) {\r\n            url = res.src ? res.src : res;\r\n            if(!url) {\r\n                dialog.remove();\r\n                return\r\n            }\r\n            url = url.toString();\r\n            result = url\r\n            dialog.remove();\r\n\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    var dialogDefaults = {\r\n        content: picker.root,\r\n        title: mw.lang('Select image'),\r\n        footer: false,\r\n        width: 860,\r\n    }\r\n\r\n    var dialogSettings = Object.assign({}, dialogDefaults, dialogOptions);\r\n\r\n    let resolver, result = null;\r\n    const promise = new Promise(resolve => {\r\n        resolver = resolve;\r\n    });\r\n\r\n    dialog = mw.top().dialog(dialogSettings);\r\n    picker.$cancel.on('click', function(){\r\n        dialog.remove()\r\n    });\r\n    mw.top().$(dialog).on('Remove', function(){\r\n\r\n        resolver(url);\r\n        if(typeof callback === 'function') {\r\n            callback.call(undefined, url)\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return {\r\n        picker, dialog, promise: () => promise\r\n    }\r\n}\r\n\r\nmw.filePicker = function (options) {\r\n    options = options || {};\r\n    var scope = this;\r\n    var defaults = {\r\n        components: [\r\n            {type: 'desktop', label: mw.lang('My computer')},\r\n            {type: 'url', label: mw.lang('URL')},\r\n            {type: 'server', label: mw.lang('Uploaded')},\r\n            {type: 'library', label: mw.lang('Media library')}\r\n        ],\r\n        nav: 'tabs', // 'tabs | 'dropdown',\r\n        hideHeader: false,\r\n        dropDownTargetMode: 'self', // 'self', 'dialog'\r\n        element: null,\r\n     //   type: null, // filetypes to accept, ex. images, videos, audios, documents\r\n        footer: true,\r\n        okLabel: mw.lang('OK'),\r\n        cancelLabel: mw.lang('Cancel'),\r\n        uploaderType: 'big', // 'big' | 'small'\r\n        confirm: function (data) {\r\n\r\n        },\r\n        cancel: function () {\r\n\r\n        },\r\n        label: mw.lang('Media'),\r\n        autoSelect: true, // depending on the component\r\n        boxed: false,\r\n        multiple: false\r\n    };\r\n\r\n\r\n\r\n    this.settings = $.extend(true, {}, defaults, options,  );\r\n    this.settings.type = this.settings.type || this.settings.accept;\r\n\r\n    this.$root = $('<div class=\"'+ (this.settings.boxed ? ('card mb-3') : '') +' mw-filepicker-root form-control-live-edit-label-wrapper\"></div>');\r\n    this.root = this.$root[0];\r\n\r\n    $.each(this.settings.components, function (i) {\r\n        this['index'] = i;\r\n    });\r\n\r\n\r\n    this.components = {\r\n        _$inputWrapper: function (label) {\r\n            var html = '<div class=\"form-control-live-edit-label-wrapper\">' +\r\n                /*'<label>' + label + '</label>' +*/\r\n                '</div>';\r\n            return mw.$(html);\r\n        },\r\n        url: function () {\r\n            var $input = $('<input class=\"form-control-live-edit-input\" placeholder=\"http://example.com/image.jpg\">');\r\n            scope.$urlInput = $input;\r\n            var $wrap = this._$inputWrapper(scope._getComponentObject('url').label);\r\n            $wrap.append($input);\r\n            $input.before('<label class=\"live-edit-label\">'+mw.lang('Insert file url')+'</label>');\r\n            $input.after('<span class=\"form-control-live-edit-bottom-effect\"></span>' );\r\n\r\n            $input.on('input', function () {\r\n                var val = this.value.trim();\r\n                scope.setSectionValue(val || null, false);\r\n            });\r\n\r\n\r\n            return $wrap[0];\r\n        },\r\n\r\n        desktop: function () {\r\n\r\n\r\n            var _setdesktopType = function () {\r\n                var $zone;\r\n                if(scope.settings.uploaderType === 'big') {\r\n                    $zone = $('<div class=\"mw-file-drop-zone\">' +\r\n                        '<div class=\"mw-file-drop-zone-holder\">' +\r\n                        '<div class=\"mw-file-drop-zone-img\"></div>' +\r\n                        '<div class=\"mw-ui-progress-small\"><div class=\"mw-ui-progress-bar\" style=\"width: 0%\"></div></div>' +\r\n                        '<span class=\"btn btn-pill  btn-primary\">'+mw.lang('Add file')+'</span> ' +\r\n                        '<p>'+mw.lang('or drop files to upload')+'</p>' +\r\n                        '</div>' +\r\n                        '</div>');\r\n                } else if(scope.settings.uploaderType === 'small') {\r\n                    $zone = $('<div class=\"mw-file-drop-zone mw-file-drop-zone-small mw-file-drop-square-zone\"> <div class=\"mw-file-drop-zone-holder\"> <span class=\"mw-ui-link\">'+mw.lang('Add file')+'</span> ' +\r\n                        '<p>'+mw.lang('or drop files to upload')+'</p>' +\r\n                        '</div>' +\r\n                        '</div>')\r\n                }\r\n                var $el = $(scope.settings.element).eq(0);\r\n                $el.removeClass('mw-filepicker-desktop-type-big mw-filepicker-desktop-type-small');\r\n                $el.addClass('mw-filepicker-desktop-type-' + scope.settings.uploaderType);\r\n                scope.uploaderHolder.empty().append($zone);\r\n            };\r\n\r\n            var $wrap = this._$inputWrapper(scope._getComponentObject('desktop').label);\r\n            scope.uploaderHolder = mw.$('<div class=\"mw-uploader-type-holder\"></div>');\r\n            _setdesktopType();\r\n\r\n            $wrap.append(scope.uploaderHolder);\r\n            scope.uploader = mw.upload({\r\n                element: $wrap[0],\r\n                multiple: scope.settings.multiple,\r\n                type: scope.settings.type,\r\n                on: {\r\n                    progress: function (prg, obj, b) {\r\n                        scope.uploaderHolder.find('.mw-ui-progress-bar').stop().animate({width: prg.percent + '%'}, 'fast');\r\n                    },\r\n                    fileUploadError: function (file) {\r\n                        $(scope).trigger('FileUploadError', [file]);\r\n                    },\r\n                    fileAdded: function (file) {\r\n                        $(scope).trigger('FileAdded', [file]);\r\n                    },\r\n                    fileUploaded: function (file) {\r\n                        scope.setSectionValue(file);\r\n\r\n                        $(scope).trigger('FileUploaded', [file]);\r\n                        if ( !scope.settings.disableFileAutoSelect ) {\r\n                            scope.result();\r\n                        }\r\n                        if (scope.settings.fileUploaded) {\r\n                            scope.settings.fileUploaded(file);\r\n                        }\r\n                        if (!scope.settings.multiple) {\r\n                            mw.notification.success('File uploaded');\r\n                            scope.uploaderHolder.find('.mw-file-drop-zone-img').css('backgroundImage', 'url('+file.src+')');\r\n                        }\r\n                        // scope.uploaderHolder.find('.mw-file-drop-zone-img').css('backgroundImage', 'url('+file.src+')');\r\n                    }\r\n                }\r\n            });\r\n            return $wrap[0];\r\n        },\r\n        server: function () {\r\n            var $wrap = this._$inputWrapper(scope._getComponentObject('server').label);\r\n            /*mw.load_module('files/admin', $wrap, function () {\r\n\r\n            }, {'filetype':'images'});*/\r\n\r\n            $(scope).on('$firstOpen', function (e, el, type) {\r\n                 if (type === 'server') {\r\n                      var fm = mw.FileManager({\r\n                         element:$wrap[0],\r\n                         canSelectFolder: false,\r\n                         selectable: true,\r\n                         multiselect: scope.settings.multiple,\r\n                         stickyHeader: true,\r\n                         selectableRow: true,\r\n                         type: scope.settings.type\r\n                     });\r\n                     fm.on('insert', function (){\r\n                         scope.result();\r\n                     });\r\n                     fm.on('insertByValue', function (val){\r\n                         scope.setSectionValue(val.map(a=>a.url));\r\n                         scope.result();\r\n                     });\r\n                     fm.on('selectionChanged', function (val){\r\n\r\n                         scope.setSectionValue(val.map(a=>a.url));\r\n                         if (scope.settings.autoSelect) {\r\n                             scope.result();\r\n                         }\r\n                     });\r\n                }\r\n            });\r\n\r\n            return $wrap[0];\r\n        },\r\n        library: function () {\r\n            var $wrap = this._$inputWrapper(scope._getComponentObject('library').label);\r\n            $(scope).on('$firstOpen', function (e, el, type) {\r\n                var comp = scope._getComponentObject('library');\r\n                if (type === 'library') {\r\n                    mw.tools.loading(el, true);\r\n                    var fr = mw.top().tools.moduleFrame('pictures/media_library');\r\n                    $wrap.append(fr);\r\n                    if(scope.settings._frameMaxHeight) {\r\n                        fr.style.maxHeight = '60vh';\r\n                        fr.scrolling = 'yes';\r\n                    }\r\n                    fr.onload = function () {\r\n                        mw.tools.loading(el, false);\r\n                        this.contentWindow.mw.on.hashParam('select-file', function (pval) {\r\n                            var url = pval.toString();\r\n                            scope.setSectionValue(url);\r\n                            if (scope.settings.autoSelect) {\r\n                                scope.result();\r\n                            }\r\n                        });\r\n                    };\r\n                }\r\n            });\r\n\r\n            /*mw.load_module('pictures/media_library', $wrap);*/\r\n            return $wrap[0];\r\n        }\r\n    };\r\n\r\n    this.hideUploaders = function (type) {\r\n        mw.$('.mw-filepicker-component-section', this.$root).hide();\r\n    };\r\n\r\n    this.showUploaders = function (type) {\r\n        mw.$('.mw-filepicker-component-section', this.$root).show();\r\n    };\r\n\r\n\r\n    this.settings.components = this.settings.components.filter(function (item) {\r\n        return !!scope.components[item.type];\r\n    });\r\n\r\n\r\n    this._navigation = null;\r\n    this.__navigation_first = [];\r\n\r\n    this.navigation = function () {\r\n        this._navigationHeader = document.createElement('div');\r\n        this._navigationHeader.className = 'mw-filepicker-component-navigation-header mb-3' + (this.settings.boxed ? 'card-header no-border' : '');\r\n        if (this.settings.hideHeader) {\r\n            this._navigationHeader.style.display = 'none';\r\n        }\r\n        if (this.settings.label) {\r\n            this._navigationHeader.innerHTML = '<h6><strong>' + this.settings.label + '</strong></h6>';\r\n        }\r\n        this._navigationHolder = document.createElement('div');\r\n        if(this.settings.nav === false) {\r\n\r\n        }\r\n        else if(this.settings.nav === 'tabs') {\r\n\r\n            var ul = $('<div class=\"form-control-live-edit-label-wrapper d-flex mw-live-edit-resolutions-wrapper mx-0 w-100\" />');\r\n            this.settings.components.forEach(function (item) {\r\n                ul.append('<a href=\"javascript:;\" class=\"js-filepicker-pick-type-tab-'+item.type+' tblr-body-color live-edit-toolbar-buttons w-100\" data-type=\"'+item.type+'\">'+item.label+'</a>');\r\n            });\r\n            this._navigationHolder.appendChild(this._navigationHeader);\r\n            this._navigationHeader.appendChild(ul[0]);\r\n            setTimeout(function () {\r\n                scope._tabs = mw.tabs({\r\n                    nav: $('a', ul),\r\n                    tabs: $('.mw-filepicker-component-section', scope.$root),\r\n                    activeClass: 'active',\r\n                    onclick: function (el, event, i) {\r\n                        if(scope.__navigation_first.indexOf(i) === -1) {\r\n                            scope.__navigation_first.push(i);\r\n                            $(scope).trigger('$firstOpen', [el, this.dataset.type]);\r\n                        }\r\n                        scope.manageActiveSectionState();\r\n\r\n\r\n                        setTimeout(function () {\r\n\r\n                            var dialog =  mw.top().dialog.get();\r\n                            if(dialog){\r\n                                dialog.center();\r\n                            }\r\n\r\n                        }, 50);\r\n                    }\r\n                });\r\n            }, 78);\r\n        } else if(this.settings.nav === 'dropdown') {\r\n            var select = $('<select class=\"form-select btn-as-link\" data-style=\"btn-sm\" data-width=\"auto\" data-title=\"' + mw.lang('Add file') + '\"/>');\r\n            scope._select = select;\r\n            this.settings.components.forEach(function (item) {\r\n                select.append('<option class=\"nav-item\" value=\"'+item.type+'\">'+item.label+'</option>');\r\n            });\r\n\r\n            this._navigationHolder.appendChild(this._navigationHeader);\r\n            this._navigationHeader.appendChild(select[0]);\r\n            select.on('changed.bs.select', function (e, xval) {\r\n                var val = select.selectpicker('val');\r\n                var componentObject = scope._getComponentObject(val) ;\r\n                var index = scope.settings.components.indexOf(componentObject);\r\n                var items = $('.mw-filepicker-component-section', scope.$root);\r\n                if(scope.__navigation_first.indexOf(val) === -1) {\r\n                    scope.__navigation_first.push(val);\r\n                    $(scope).trigger('$firstOpen', [items.eq(index)[0], val]);\r\n                }\r\n                if(scope.settings.dropDownTargetMode === 'dialog') {\r\n                    var temp = document.createElement('div');\r\n                    var item = items.eq(index);\r\n                    item.before(temp);\r\n                    item.show();\r\n                    var footer = false;\r\n                    if (scope._getComponentObject('url').index === index ) {\r\n                        footer =  document.createElement('div');\r\n                        var footerok = $('<button type=\"button\" class=\" btn btn-primary\">' + scope.settings.okLabel + '</button>');\r\n                        var footercancel = $('<button type=\"button\" class=\" btn\">' + scope.settings.cancelLabel + '</button>');\r\n                        footerok.disabled = true;\r\n                        footer.appendChild(footercancel[0]);\r\n                        footer.appendChild(footerok[0]);\r\n                        footer.appendChild(footercancel[0]);\r\n                        footercancel.on('click', function () {\r\n                            scope.__pickDialog.remove();\r\n                        });\r\n                        footerok.on('click', function () {\r\n                            scope.setSectionValue(scope.$urlInput.val().trim() || null);\r\n                            if (scope.settings.autoSelect) {\r\n                                scope.result();\r\n                            }\r\n                            // scope.__pickDialog.remove();\r\n                        });\r\n                    }\r\n\r\n                    scope.__pickDialog = mw.top().dialog({\r\n                        overlay: true,\r\n                        content: item,\r\n                        beforeRemove: function () {\r\n                            $(temp).replaceWith(item);\r\n                            item.hide();\r\n                            scope.__pickDialog = null;\r\n                        },\r\n                        footer: footer\r\n                    });\r\n                } else {\r\n                    items.hide().eq(index).show();\r\n                }\r\n            });\r\n        }\r\n        this.$root.prepend(this._navigationHolder);\r\n\r\n    };\r\n    this.__displayControllerByTypeTime = null;\r\n\r\n    this.displayControllerByType = function (type) {\r\n        type = (type || '').trim();\r\n        var item = this._getComponentObject(type) ;\r\n        clearTimeout(this.__displayControllerByTypeTime);\r\n        this.__displayControllerByTypeTime = setTimeout(function () {\r\n            if(scope.settings.nav === 'tabs') {\r\n                mw.$('[data-type=\"'+type+'\"]', scope.$root).click();\r\n            } else if(scope.settings.nav === 'dropdown') {\r\n                $(scope._select).selectpicker('val', type);\r\n            }\r\n        }, 10);\r\n    };\r\n\r\n\r\n\r\n    this.footer = function () {\r\n        if(!this.settings.footer || this.settings.autoSelect) return;\r\n        this._navigationFooter = document.createElement('div');\r\n        this._navigationFooter.className = 'modal-footer mw-ui-form-controllers-footer mw-filepicker-footer ' + (this.settings.boxed ? 'card-footer' : '');\r\n        this.$ok = $('<button type=\"button\" class=\"mw-admin-action-links mw-adm-liveedit-tabs mw-liveedit-button-animation-component\">' + this.settings.okLabel + '</button>');\r\n        this.$cancel = $('<button type=\"button\" class=\"mw-admin-action-links mw-adm-liveedit-tabs mw-liveedit-button-animation-component\">' + this.settings.cancelLabel + '</button>');\r\n        this._navigationFooter.appendChild(this.$cancel[0]);\r\n        this._navigationFooter.appendChild(this.$ok[0]);\r\n        this.$root.append(this._navigationFooter);\r\n        this.$ok[0].disabled = true;\r\n        this.$ok.on('click', function () {\r\n            scope.result();\r\n        });\r\n        this.$cancel.on('click', function () {\r\n            scope.settings.cancel()\r\n        });\r\n    };\r\n\r\n    this.result = function () {\r\n        var activeSection = this.activeSection();\r\n        if(this.settings.onResult) {\r\n            this.settings.onResult.call(this, activeSection._filePickerValue);\r\n        }\r\n        $(scope).trigger('Result', [activeSection._filePickerValue]);\r\n    };\r\n\r\n    this.getValue = function () {\r\n        return this.activeSection()._filePickerValue;\r\n    };\r\n\r\n    this._getComponentObject = function (type) {\r\n        return this.settings.components.find(function (comp) {\r\n            return comp.type && comp.type === type;\r\n        });\r\n    };\r\n\r\n    this._sections = [];\r\n    this.buildComponentSection = function () {\r\n        var main = mw.$('<div class=\"'+(this.settings.boxed ? 'card-body' : '') +' mw-filepicker-component-section\"></div>');\r\n        this.$root.append(main);\r\n        this._sections.push(main[0]);\r\n        return main;\r\n    };\r\n\r\n    this.buildComponent = function (component) {\r\n        if(this.components[component.type]) {\r\n            return this.components[component.type]();\r\n        }\r\n    };\r\n\r\n    this.buildComponents = function () {\r\n        $.each(this.settings.components, function () {\r\n            var component = scope.buildComponent(this);\r\n            if(component){\r\n                var sec = scope.buildComponentSection();\r\n                sec.append(component);\r\n            }\r\n        });\r\n    };\r\n\r\n    this.build = function () {\r\n        this.navigation();\r\n        this.buildComponents();\r\n        if(this.settings.nav === 'dropdown') {\r\n            $('.mw-filepicker-component-section', scope.$root).hide().eq(0).show();\r\n        }\r\n        this.footer();\r\n    };\r\n\r\n    this.init = function () {\r\n        this.build();\r\n        if (this.settings.element) {\r\n            $(this.settings.element).eq(0).append(this.$root);\r\n        }\r\n        if($.fn.selectpicker) {\r\n            $('select', scope.$root).selectpicker();\r\n        }\r\n    };\r\n\r\n    this.hide = function () {\r\n        this.$root.hide();\r\n    };\r\n    this.show = function () {\r\n        this.$root.show();\r\n    };\r\n\r\n    this.activeSection = function () {\r\n        return $(this._sections).filter(function (){\r\n            return $(this).css('display') !== 'none';\r\n        })[0];\r\n    };\r\n\r\n    this.setSectionValue = function (val, close) {\r\n        close = typeof close === 'undefined' ? true : close;\r\n        var activeSection = this.activeSection();\r\n        if(activeSection) {\r\n            activeSection._filePickerValue = val;\r\n        }\r\n\r\n        if(close && scope.__pickDialog) {\r\n            scope.__pickDialog.remove();\r\n        }\r\n        this.manageActiveSectionState();\r\n    };\r\n    this.manageActiveSectionState = function () {\r\n        // if user provides value for more than one section, the active value will be the one in the current section\r\n        var activeSection = this.activeSection();\r\n        if (this.$ok && this.$ok[0]) {\r\n            this.$ok[0].disabled = !(activeSection && activeSection._filePickerValue);\r\n        }\r\n    };\r\n\r\n    this.init();\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/filepicker.js?");

/***/ }),

/***/ "./resources/assets/components/form-controls.js":
/*!******************************************************!*\
  !*** ./resources/assets/components/form-controls.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n\r\n\r\nmw.IconClassResolver = function ($for) {\r\n    if (!$for) {\r\n        return '';\r\n    }\r\n    switch ($for) {\r\n        case 'shop': $for = 'mdi mdi-shopping'; break;\r\n        case 'website': $for = 'mdi mdi-earth'; break;\r\n        case 'module': $for = 'mdi mdi-view-grid-plus'; break;\r\n        case 'marketplace': $for = 'mdi mdi-fruit-cherries'; break;\r\n        case 'users': $for = 'mdi mdi-account-multiple'; break;\r\n        case 'post': $for = 'mdi mdi-text'; break;\r\n        case 'page': $for = 'mdi mdi-shopping'; break;\r\n        case 'static': $for = 'mdi mdi-shopping'; break;\r\n        case 'category': $for = 'mdi mdi-folder'; break;\r\n        case 'product': $for = 'mdi mdi-shopping'; break;\r\n\r\n        default: $for = '';\r\n    }\r\n    return $for;\r\n};\r\n\r\nmw.controlFields = {\r\n    __id: new Date().getTime(),\r\n    _id: function () {\r\n        this.__id++;\r\n        return 'le-' + this.__id;\r\n    },\r\n    _label: function (conf){\r\n        var id = conf.id || this._id();\r\n        var label = document.createElement('label');\r\n        label.className = conf.className || 'live-edit-label';\r\n        label.innerHTML = conf.label || conf.content || '';\r\n        label.htmlFor = id;\r\n        return label;\r\n    },\r\n    _button: function (conf){\r\n        var id = conf.id || this._id();\r\n        var button = document.createElement('button');\r\n        button.type = conf.type || 'button';\r\n        var prefix = 'mw-admin-action-links mw-adm-liveedit-tabs mw-liveedit-button-animation-component'; // new live edit style\r\n        button.className = prefix;\r\n        if(conf.size) {\r\n            button.classList.add(`${prefix}-${conf.size}`)\r\n        }\r\n        if(conf.color) {\r\n            button.classList.add(`${prefix}-${conf.color}`)\r\n        }\r\n        button.innerHTML = (conf.label || conf.content);\r\n        return button;\r\n    },\r\n    _wrap: function () {\r\n        var el =  document.createElement('div');\r\n        el.className = '';\r\n        [].forEach.call(arguments, function (content) {\r\n            if (typeof content === 'string') {\r\n                el.innerHTML += content;\r\n            } else {\r\n                el.append(content);\r\n            }\r\n        });\r\n        return el;\r\n        // return '<div class=\"form-group\">' + content + '</div>';\r\n    },\r\n    _description: function (conf) {\r\n        return conf.description ? ('<small class=\"text-muted d-block mb-2\">' + conf.description + '</small>') : '';\r\n    },\r\n    field: function (conf) {\r\n        conf = conf || {};\r\n        var placeholder = conf.placeholder ? ('placeholder=\"' + conf.placeholder + '\"') : '';\r\n        var id = (conf.id || this._id());\r\n        id =  (' id=\"' + id + '\" ');\r\n        var name = conf.name ? ('name=\"' + conf.name + '\"') : '';\r\n        conf.type = conf.type || 'text';\r\n        var required = conf.required ? ('required') : '';\r\n\r\n        return this._wrap(\r\n\r\n            this._label(conf),\r\n            // this._description(conf),\r\n            '<div class=\"form-control-live-edit-label-wrapper\">' +\r\n                '<input type=\"'+conf.type+'\" '+placeholder + '  ' + id + ' ' + name + ' ' + required + ' class=\"form-control-live-edit-input\">'\r\n                + '<span class=\"form-control-live-edit-bottom-effect\"></span>'\r\n            + '</div>'\r\n        );\r\n    },\r\n    checkbox: function (conf) {\r\n        conf = conf || {};\r\n        conf.className = conf.className || 'custom-control-label';\r\n        var id = (conf.id || this._id());\r\n        conf.id = id;\r\n        id =  (' id=\"' + id + '\" ');\r\n        var name = conf.name ? ('name=\"' + conf.name + '\"') : '';\r\n        var required = conf.required ? ('required') : '';\r\n        return  this._wrap(\r\n            '<div class=\"form-control-live-edit-label-wrapper mt-3\">' +\r\n                '<label class=\"form-check form-check-inline\">' +\r\n                '<input class=\"form-check-input\" type=\"checkbox\" ' + id + ' ' + name + ' ' + required + '>' +\r\n                '<span class=\"form-check-label\">' + (conf.label || conf.content || '') + '</span>' +\r\n                '</label>'\r\n            + '</div>');\r\n    },\r\n    radio: function (conf) {\r\n        conf = conf || {};\r\n        var id = (conf.id || this._id());\r\n        id =  (' id=\"' + id + '\" ');\r\n        var value =  (' value=\"' + conf.value + '\" ');\r\n        var name = conf.name ? ('name=\"' + conf.name + '\"') : '';\r\n        var required = conf.required ? ('required') : '';\r\n        /*return  this._wrap(\r\n            '<label class=\"mw-ui-check\">' +\r\n            '<input type=\"radio\" ' + id + ' ' + name + ' ' + required + ' ' + value + '>' +\r\n                '<span></span><span>' + (conf.label || conf.content || '') + '</span>' +\r\n            '</label>');*/\r\n\r\n            return this._wrap(`\r\n            <label class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" ${id} ${name} ${value}>\r\n                <span class=\"form-check-label\">${(conf.label || conf.content || '')}</span>\r\n            </label>\r\n            `);\r\n    },\r\n    select: function (conf) {\r\n        conf = conf || {};\r\n        var id = (conf.id || this._id());\r\n        id =  (' id=\"' + id + '\" ');\r\n        var name = conf.name ? ('name=\"' + conf.name + '\"') : '';\r\n        var required = conf.required ? ('required') : '';\r\n        var multiple = conf.multiple ? ('multiple') : '';\r\n\r\n        var options = (conf.options || []).map(function (item){\r\n            return '<option value=\"'+ item.value +'\">'+(item.title||item.name||item.label||item.value)+'</option>';\r\n        }).join('');\r\n\r\n        return  this._wrap(\r\n            this._label(conf) +\r\n            '<select class=\"form-select\" ' + multiple + '  ' + id + ' ' + name + ' ' + required + '>' +\r\n            options +\r\n            '</select>' );\r\n    }\r\n};\r\n\r\nmw.emitter = {\r\n    _events: {},\r\n    _onNative: function (node, type, callback) {\r\n        type.trim().split(' ').forEach(function (ev) {\r\n            node.addEventListener(ev, callback);\r\n        });\r\n    },\r\n    on: function (event, callback, c) {\r\n        if(!event) return;\r\n        if(Array.isArray(event)) {\r\n            for(var i = 0; i < event.length; i++) {\r\n                this.on(event[i], callback, c);\r\n            }\r\n            return;\r\n        }\r\n        if(event.nodeName) {\r\n            return this._onNative(event, callback, c);\r\n        }\r\n        if (!this._events[event]){\r\n            this._events[event] = [];\r\n        }\r\n        this._events[event].push(callback);\r\n    },\r\n    dispatch: function(event, data) {\r\n        if (this._events[event]) {\r\n            this._events[event].forEach(function(handler) {\r\n                handler(data);\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n(function(){\r\n    var UIFormControllers = {\r\n        _title: function (conf, root) {\r\n            var title = mw.element({\r\n                tag: 'label',\r\n                props: {\r\n                    className: 'form-label font-weight-bold mt-2',\r\n                    innerHTML: conf.title\r\n                }\r\n            });\r\n            mw.element(root).append(title);\r\n        },\r\n        footer: function () {\r\n            var data = {};\r\n            data.ok =  mw.controlFields._button({content: mw.lang('OK'), color: ''});\r\n            data.cancel =  mw.controlFields._button({content: mw.lang('Cancel'), color: ''});\r\n            data.root = mw.controlFields._wrap(data.cancel, data.ok);\r\n            data.root.className = 'modal-footer mw-ui-form-controllers-footer border-0 px-2 pb-3';\r\n            return data;\r\n        },\r\n        title: function (options) {\r\n            var scope = this;\r\n            var defaults = {\r\n                text: {\r\n                    label: mw.lang('Link text'),\r\n                    description: mw.lang('Selected text for the link.'),\r\n                },\r\n                icon: 'd-none',\r\n                title: 'Page title'\r\n            };\r\n            options =  mw.object.extend(true, {}, defaults, (options || {}));\r\n            this.settings = options;\r\n            if (options.text === true) options.text = defaults.text;\r\n            if (options.link === true) options.link = defaults.link;\r\n            if (options.target === true) options.target = defaults.target;\r\n\r\n            var root = document.createElement('div');\r\n            root.className = 'mw-ui-form-controller-root';\r\n            var _linkText = '', _linkUrl = '', _target = '';\r\n\r\n            if (options.text) {\r\n                _linkText = mw.controlFields.field({\r\n                    label: options.text.label,\r\n                    description: options.text.description,\r\n                    name: 'text'\r\n                });\r\n            }\r\n\r\n            UIFormControllers._title(this.settings, root)\r\n\r\n\r\n            var count = 0;\r\n            var html = [];\r\n            this.url = '';\r\n            var available_elements = document.createElement('div');\r\n            available_elements.className = 'mw-ui-box mw-ui-box-content';\r\n            var rname = mw.controlFields._id();\r\n            mw.top().$(\"h1,h12,h3,h4,h5,h6\", mw.top().win.document.body).each(function () {\r\n                if(!!this.id || mw.tools.isEditable(this)){\r\n                    if(!this.id) {\r\n                        this.id = mw.id('mw-title-element-');\r\n                    }\r\n                    count++;\r\n                    html.push({id: this.id, text: this.textContent});\r\n                    var li = mw.controlFields.radio({\r\n                        label:  '<strong>' + this.nodeName + '</strong> - ' + this.textContent,\r\n                        name: rname,\r\n                        id: mw.controlFields._id(),\r\n                        value: '#' + this.id\r\n                    });\r\n                    mw.element(available_elements).append(li);\r\n                    li.querySelector('input').oninput = function () {\r\n                        scope.url = this.value;\r\n                        scope.valid();\r\n                    };\r\n                }\r\n\r\n            });\r\n\r\n            var holder = document.createElement('div');\r\n            holder.append(_linkText);\r\n            holder.append(available_elements);\r\n\r\n\r\n            var textField = holder.querySelector('[name=\"text\"]');\r\n\r\n            this.valid = function () {\r\n                var res = this.isValid();\r\n               // footer.ok.disabled = !res;\r\n                return res;\r\n            };\r\n\r\n            this.isValid = function () {\r\n                if(textField && !textField.value) {\r\n                    return false;\r\n                }\r\n                if(!this.url) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            var footer = UIFormControllers.footer();\r\n\r\n            this.setValue = function (val) {\r\n                val = val || {};\r\n                if(textField) textField.value = val.text || '';\r\n            };\r\n\r\n            this.getValue = function () {\r\n                var val = {};\r\n                if(textField) val.text = textField.value;\r\n                val.url = this.url\r\n                return val;\r\n            };\r\n\r\n            this._onChange = [];\r\n            this.onChange = function (c) {\r\n                this._onChange.push(c);\r\n            };\r\n\r\n            this._confirm = [];\r\n            this.onConfirm = function (c) {\r\n                this._confirm.push(c);\r\n            };\r\n\r\n            this._cancel = [];\r\n            this.onCancel = function (c) {\r\n                this._cancel.push(c);\r\n            };\r\n\r\n\r\n            mw.emitter.on([textField], 'input', function (e){\r\n                if(scope.valid()) {\r\n                    scope._onChange.forEach(function (f){\r\n                        f(scope.getValue());\r\n                    });\r\n                }\r\n            });\r\n\r\n            mw.emitter.on(footer.ok, 'click', function (e){\r\n                scope._confirm.forEach(function (f){\r\n                    f(scope.getValue());\r\n                });\r\n            });\r\n\r\n            mw.emitter.on(footer.cancel, 'click', function (e){\r\n                scope._cancel.forEach(function (f){\r\n                    f();\r\n                });\r\n            });\r\n\r\n            root.append(holder);\r\n\r\n            root.append(footer.root);\r\n\r\n            this.valid();\r\n\r\n            this.root = root;\r\n        },\r\n        layout: function (options) {\r\n            var scope = this;\r\n            var defaults = {\r\n                text: {\r\n                    label: mw.lang('Link text'),\r\n                    description: mw.lang('Selected text for the link.'),\r\n                },\r\n                icon: 'd-none',\r\n                //\r\n                icon: 'd-none',\r\n                title: 'Page section'\r\n            };\r\n            options =  mw.object.extend(true, {}, defaults, (options || {}));\r\n             this.settings = options;\r\n            if (options.text === true) options.text = defaults.text;\r\n            if (options.link === true) options.link = defaults.link;\r\n            if (options.target === true) options.target = defaults.target;\r\n\r\n            var root = document.createElement('div');\r\n            root.className = 'mw-ui-form-controller-root';\r\n            var _linkText = '', _linkUrl = '', _target = '';\r\n\r\n            if (options.text) {\r\n                _linkText = mw.controlFields.field({\r\n                    label: options.text.label,\r\n                    description: options.text.description,\r\n                    name: 'text'\r\n                });\r\n            }\r\n            UIFormControllers._title(this.settings, root)\r\n\r\n            var layoutsData = [];\r\n\r\n            var _win = mw.top().app && mw.top().app.canvas ? mw.top().app.canvas.getWindow() || window : window;\r\n                var layouts = _win.$('.module[data-type=\"layouts\"]');\r\n\r\n                layouts.each(function () {\r\n                    layoutsData.push({\r\n                        name: (this.getAttribute('template') || this.dataset.template || '').split('.')[0],\r\n                        element: this,\r\n                        id: this.id\r\n                    });\r\n                });\r\n\r\n            var list = $('<div class=\"mw-ui-form-controller--radio-list\" />');\r\n\r\n            if (layoutsData.length === 0) {\r\n                list.append('<label class=\"form-label font-weight-bold mt-2\" style=\"text-align: center;padding: 50px 0;\">Current page has no sections in it</label>');\r\n            }\r\n            this.link = '';\r\n            var radioName = mw.id();\r\n            $.each(layoutsData, function(){\r\n                var li = mw.controlFields.radio({\r\n                    label: this.name,\r\n                    name: radioName,\r\n                    id: mw.controlFields._id(),\r\n                    value: this.id\r\n                });\r\n                var el = this.element;\r\n                $(li).find('input').on('click', function(){\r\n                    mw.top().app.canvas.getWindow().mw.tools.scrollTo(el);\r\n                    var initialLocation = mw.top().app.canvas.getWindow().location.href;\r\n                    var liveEditIframeData = mw.top().app.canvas.getLiveEditData();\r\n\r\n                    //sometimes the url can be modified by pop state, so we use iframedata original url\r\n                    if(typeof liveEditIframeData !== 'undefined'){\r\n                        if(typeof liveEditIframeData.content_link !== 'undefined'){\r\n                            initialLocation = liveEditIframeData.content_link;\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    var elementUrl = initialLocation.split('#')[0] + '#mw@' + el.id;\r\n                    scope.link = elementUrl;\r\n                    scope.url = elementUrl;\r\n                    scope.src = elementUrl;\r\n\r\n                    scope.valid();\r\n                });\r\n                list.append(li);\r\n            });\r\n            if(layoutsData.length > 0){\r\n                $('.page-layout-btn').show();\r\n            }\r\n\r\n            var holder = document.createElement('div');\r\n            holder.append(_linkText);\r\n            holder.append(list[0]);\r\n\r\n\r\n            var textField = holder.querySelector('[name=\"text\"]');\r\n\r\n            this.valid = function () {\r\n                var res = this.isValid();\r\n               // footer.ok.disabled = !res;\r\n                return res;\r\n            };\r\n\r\n            this.isValid = function () {\r\n                if(textField && !textField.value) {\r\n                    return false;\r\n                } else if(!this.link) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            var footer = UIFormControllers.footer();\r\n\r\n            this.setValue = function (val) {\r\n                val = val || {};\r\n                if(textField) textField.value = val.text || '';\r\n              };\r\n\r\n            this.getValue = function () {\r\n                var val = {};\r\n                if(textField) val.text = textField.value;\r\n                val.url = scope.link;\r\n                  return val;\r\n            };\r\n\r\n            this._onChange = [];\r\n            this.onChange = function (c) {\r\n                this._onChange.push(c);\r\n            };\r\n\r\n            this._confirm = [];\r\n            this.onConfirm = function (c) {\r\n                this._confirm.push(c);\r\n            };\r\n\r\n            this._cancel = [];\r\n            this.onCancel = function (c) {\r\n                this._cancel.push(c);\r\n            };\r\n\r\n\r\n            mw.emitter.on([textField], 'input', function (e){\r\n                if(scope.valid()) {\r\n                    scope._onChange.forEach(function (f){\r\n                        f(scope.getValue());\r\n                    });\r\n                }\r\n            });\r\n\r\n            mw.emitter.on(footer.ok, 'click', function (e){\r\n                 scope._confirm.forEach(function (f){\r\n                    f(scope.getValue());\r\n                });\r\n            });\r\n\r\n            mw.emitter.on(footer.cancel, 'click', function (e){\r\n                scope._cancel.forEach(function (f){\r\n                    f();\r\n                });\r\n            });\r\n\r\n            root.append(holder);\r\n\r\n            root.append(footer.root);\r\n\r\n            this.valid();\r\n\r\n            this.root = root;\r\n        },\r\n        email: function (options) {\r\n            var scope = this;\r\n            var defaults = {\r\n                text: {\r\n                    label: mw.lang('Link text'),\r\n                    description: mw.lang('Selected text for the link.'),\r\n                },\r\n                link: {\r\n                    label: mw.lang('Email'),\r\n                    description: mw.lang('Type email address in the field'),\r\n                    placeholder: \"hello@example.com\",\r\n                },\r\n                target: {\r\n                    label: mw.lang('Open the link in a new window')\r\n                },\r\n                icon: 'd-none',\r\n                title: 'Email'\r\n            };\r\n            options =  mw.object.extend(true, {}, defaults, (options || {}));\r\n\r\n\r\n            this.settings = options;\r\n            if (options.text === true) options.text = defaults.text;\r\n            if (options.link === true) options.link = defaults.link;\r\n            if (options.target === true) options.target = defaults.target;\r\n\r\n            var root = document.createElement('div');\r\n            root.className = 'mw-ui-form-controller-root';\r\n            var _linkText = '', _linkUrl = '', _target = '';\r\n            UIFormControllers._title(this.settings, root)\r\n            if (options.text) {\r\n                _linkText = mw.controlFields.field({\r\n                    label: options.text.label,\r\n                    description: options.text.description,\r\n                    name: 'text'\r\n                });\r\n            }\r\n            if (options.link) {\r\n                _linkUrl = mw.controlFields.field({\r\n                    label: options.link.label,\r\n                    description: options.link.description,\r\n                    placeholder: options.link.placeholder,\r\n                    name: 'url'\r\n                });\r\n            }\r\n\r\n            if (options.target) {\r\n                _target = mw.controlFields.checkbox({\r\n                    label: options.target.label,\r\n                    name: 'target'\r\n                });\r\n            }\r\n\r\n\r\n            var holder = document.createElement('div');\r\n            holder.append(_linkText);\r\n            holder.append(_linkUrl);\r\n            holder.append(_target);\r\n\r\n\r\n            var textField = holder.querySelector('[name=\"text\"]');\r\n            var urlField = holder.querySelector('[name=\"url\"]');\r\n            var targetField = holder.querySelector('[name=\"target\"]');\r\n\r\n            this.valid = function () {\r\n                var res = this.isValid();\r\n                //footer.ok.disabled = !res;\r\n                return res;\r\n            };\r\n\r\n            this.isValid = function () {\r\n                if(textField && !textField.value) {\r\n                    return false;\r\n                }\r\n                if(urlField && !urlField.value) {\r\n                    return false;\r\n                }\r\n\r\n                return urlField.validity;\r\n            };\r\n\r\n            var footer = UIFormControllers.footer();\r\n\r\n            this.setValue = function (val) {\r\n                val = val || {};\r\n                if(textField) textField.value = val.text || '';\r\n                if(urlField) urlField.value = (val.url || '');\r\n                if(targetField)  targetField.checked = val.target;\r\n            };\r\n\r\n            this.getValue = function () {\r\n                var val = {};\r\n                if(textField) val.text = textField.value;\r\n                if(urlField) val.url = 'mailto:' + urlField.value;\r\n                if(targetField) val.target = targetField.checked;\r\n                return val;\r\n            };\r\n\r\n            this._onChange = [];\r\n            this.onChange = function (c) {\r\n                this._onChange.push(c);\r\n            };\r\n\r\n            this._confirm = [];\r\n            this.onConfirm = function (c) {\r\n                this._confirm.push(c);\r\n            };\r\n\r\n            this._cancel = [];\r\n            this.onCancel = function (c) {\r\n                this._cancel.push(c);\r\n            };\r\n\r\n\r\n            mw.emitter.on([textField, urlField, targetField], 'input', function (e){\r\n                if(scope.valid()) {\r\n                    scope._onChange.forEach(function (f){\r\n                        f(scope.getValue());\r\n                    });\r\n                }\r\n            });\r\n\r\n            mw.emitter.on(footer.ok, 'click', function (e){\r\n                scope._confirm.forEach(function (f){\r\n                    f(scope.getValue());\r\n                });\r\n            });\r\n\r\n            mw.emitter.on(footer.cancel, 'click', function (e){\r\n                scope._cancel.forEach(function (f){\r\n                    f();\r\n                });\r\n            });\r\n\r\n            root.append(holder);\r\n\r\n            root.append(footer.root);\r\n\r\n            this.valid();\r\n\r\n            this.root = root;\r\n        },\r\n\r\n        post: function (options) {\r\n            var scope = this;\r\n            var defaults = {\r\n                text: {\r\n                    label: mw.lang('Link text'),\r\n                    description: mw.lang('Selected text for the link.'),\r\n                },\r\n                target: {\r\n                    label: mw.lang('Open the link in a new window')\r\n                },\r\n                url: {\r\n                    label: mw.lang('Search for content')\r\n                },\r\n                icon: 'd-none',\r\n                title: mw.lang('All content'),\r\n                dataUrl: function () {\r\n                    try {\r\n                        return mw.settings.site_url + \"api/get_content_admin\";\r\n                    } catch (e) {\r\n                        return null;\r\n                    }\r\n                }\r\n            };\r\n            options =  mw.object.extend(true, {}, defaults, (options || {}));\r\n            this.settings = options;\r\n            if (options.text === true) options.text = defaults.text;\r\n            if (options.target === true) options.target = defaults.target;\r\n\r\n            var root = document.createElement('div');\r\n            root.className = 'mw-ui-form-controller-root';\r\n            root.style = 'min-height: 400px;';\r\n            var _linkText = '', _linkUrl = '', _target = '';\r\n            UIFormControllers._title(this.settings, root);\r\n            var treeEl = document.createElement('input');\r\n            treeEl.className = 'form-group mw-link-editor-posts-search';\r\n            treeEl.autocomplete = 'off';\r\n\r\n            if (options.text) {\r\n                _linkText = mw.controlFields.field({\r\n                    label: options.text.label,\r\n                    description: options.text.description,\r\n                    name: 'text'\r\n                });\r\n            }\r\n            var url =  this.settings.dataUrl;\r\n            url = typeof url === 'function' ? url() : url;\r\n\r\n            var initAutoComplete = async () => {\r\n\r\n\r\n                const idata = await new Promise(resolve => {\r\n                    var conf = {\r\n                        method: 'POST',\r\n                        url: url,\r\n                        body: JSON.stringify({\r\n                            limit: '5',\r\n                            keyword: '',\r\n                            order_by: 'updated_at desc',\r\n                            search_in_fields: 'title',\r\n                        })\r\n                    }\r\n                    fetch(url, conf)\r\n                            .then(response => response.json())\r\n                            .then(json => {\r\n                                resolve(json);\r\n                            }).catch(()=>{\r\n                                resolve();\r\n                            });\r\n                })\r\n\r\n                scope.autoComplete = new TomSelect(treeEl, {\r\n                    valueField: 'id',\r\n                    labelField: 'title',\r\n                    searchField: 'title',\r\n                    copyClassesToDropdown: false,\r\n                    dropdownClass: 'dropdown-menu ts-dropdown',\r\n                    optionClass:'dropdown-item',\r\n                    controlInput: '<input>',\r\n                    mode: 'single',\r\n                    closeAfterSelect: true,\r\n                    preload: true,\r\n                    options: idata,\r\n                    // fetch remote data\r\n                    onChange : function(query, callback) {\r\n\r\n                        scope.valid()\r\n\r\n                    },\r\n                    load: function(query, callback) {\r\n\r\n\r\n\r\n                        $.ajax({\r\n                            url: url,\r\n                            type: 'POST',\r\n                            data:\r\n                                {\r\n                                    limit: '5',\r\n                                    keyword: query || treeEl.value,\r\n                                    order_by: 'updated_at desc',\r\n                                    search_in_fields: 'title',\r\n                                },\r\n                            success: function (response) {\r\n                                callback(response);\r\n                            },\r\n                            error: function () {\r\n                                callback();\r\n                            }\r\n                        });\r\n\r\n                    },\r\n                    // custom rendering functions for options and items\r\n                    render: {\r\n                        option: function(item, escape) {\r\n\r\n                            return `<div class=\"py-2 d-flex\">\r\n                            ${item.image ? (`<div class=\"icon me-3\">\r\n                            <img class=\"img-fluid\" src=\"${item.image}\" />\r\n                        </div>`) : ''}\r\n\r\n                                        <div>\r\n                                            <div class=\"mb-1\">\r\n                                                <span class=\"h4\">\r\n                                                    ${ escape(item.title) }\r\n                                                </span>\r\n                                                <span class=\"text-muted\"> - ${ escape(item.content_type) }</span>\r\n                                            </div>\r\n                                             ${item.description ? (`<div class=\"description\">${ escape(item.description.substring(0, item.description.indexOf(' ', 100))) }</div>`) : ''}\r\n                                        </div>\r\n                                    </div>`;\r\n                        },\r\n                        item: function(item, escape) {\r\n\r\n                            return `<div class=\"d-flex\">\r\n                            ${item.image ? (`<div class=\"icon me-3\">\r\n                            <img class=\"img-fluid\" src=\"${item.image}\" />\r\n                        </div>`) : ''}\r\n                                        <div>\r\n                                            <div class=\"mb-1\">\r\n                                                <span class=\"h4\">\r\n                                                    ${ escape(item.title) }\r\n                                                </span>\r\n                                                <span class=\"text-muted\"> - ${ escape(item.content_type) }</span>\r\n                                            </div>\r\n                                            ${item.description ? (`<div class=\"description\">${ escape(item.description.substring(0, item.description.indexOf(' ', 100))) }</div>`) : ''}\r\n                                        </div>\r\n                                    </div>`;\r\n                        }\r\n                    },\r\n                });\r\n                console.log\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            var label = mw.controlFields._label({\r\n                content: options.url.label\r\n            });\r\n\r\n            setTimeout(async () => {\r\n                mw.element(treeEl).before(label);\r\n                await initAutoComplete();\r\n                var dialog = mw.dialog.get(treeEl);\r\n\r\n                scope.autoComplete.focus_node.addEventListener('click', e => {\r\n                    e.stopPropagation()\r\n                    e.target.focus()\r\n                })\r\n\r\n                if(dialog) {\r\n                     dialog.dialogContainer.addEventListener('click', function(e){\r\n                        if(!mw.tools.hasParentsWithClass(e.target, 'ts-wrapper')) {\r\n                            scope.autoComplete.close()\r\n                        }\r\n                     })\r\n                }\r\n            }, 10)\r\n\r\n            if (options.target) {\r\n                _target = mw.controlFields.checkbox({\r\n                    label: options.target.label,\r\n                    name: 'target'\r\n                });\r\n            }\r\n\r\n\r\n            var holder = document.createElement('div');\r\n            holder.append(_linkText);\r\n            holder.append(treeEl);\r\n            holder.append(_target);\r\n\r\n\r\n            var textField = holder.querySelector('[name=\"text\"]');\r\n            var targetField = holder.querySelector('[name=\"target\"]');\r\n\r\n            this.valid = function () {\r\n                var res = this.isValid();\r\n                //footer.ok.disabled = !res;\r\n                return res;\r\n            };\r\n\r\n            this.isValid = function () {\r\n\r\n                if(! scope.autoComplete) { // still loading\r\n                    return false;\r\n                }\r\n\r\n                if(!scope.autoComplete.getValue().trim()) {\r\n                    return false\r\n                }\r\n\r\n\r\n                if(textField && !textField.value) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            };\r\n\r\n            var footer = UIFormControllers.footer();\r\n\r\n            this.getValue = function () {\r\n                var val = {};\r\n                if(textField) val.text = textField.value;\r\n\r\n\r\n\r\n                var getSelected, autoCompleteVal = scope.autoComplete.getValue();\r\n                for (let i in scope.autoComplete.options) {\r\n                    if(autoCompleteVal == scope.autoComplete.options[i].id) {\r\n                        getSelected = scope.autoComplete.options[i];\r\n                        break;\r\n                    }\r\n                }\r\n                val.url = getSelected ? getSelected.url : '';\r\n                val.data = getSelected;\r\n                if(targetField) val.target = targetField.checked;\r\n                return val;\r\n            };\r\n\r\n            this.setValue = function (val) {\r\n                val = val || {};\r\n                if(textField) textField.value = val.text || '';\r\n                if(targetField) targetField.checked = !!val.target;\r\n                return val;\r\n            };\r\n\r\n            this._onChange = [];\r\n            this.onChange = function (c) {\r\n                this._onChange.push(c);\r\n            };\r\n\r\n            this._confirm = [];\r\n            this.onConfirm = function (c) {\r\n                this._confirm.push(c);\r\n            };\r\n\r\n            this._cancel = [];\r\n            this.onCancel = function (c) {\r\n                this._cancel.push(c);\r\n            };\r\n\r\n            $(this.autoComplete).on(\"change\", function(e){\r\n                if(scope.valid()) {\r\n                    scope._onChange.forEach(function (f){\r\n                        f(scope.getValue());\r\n                    });\r\n                }\r\n            });\r\n            mw.emitter.on([textField, targetField], 'input', function (e){\r\n                if(scope.valid()) {\r\n                    scope._onChange.forEach(function (f){\r\n                        f(scope.getValue());\r\n                    });\r\n                }\r\n            });\r\n\r\n            mw.emitter.on(footer.ok, 'click', function (e){\r\n                scope._confirm.forEach(function (f){\r\n                    f(scope.getValue());\r\n                });\r\n            });\r\n\r\n            mw.emitter.on(footer.cancel, 'click', function (e){\r\n                scope._cancel.forEach(function (f){\r\n                    f();\r\n                });\r\n            });\r\n\r\n            root.append(holder);\r\n\r\n            root.append(footer.root);\r\n\r\n            this.valid();\r\n\r\n            this.root = root;\r\n        },\r\n        page: function (options) {\r\n            var scope = this;\r\n             var defaults = {\r\n                text: {\r\n                    label: mw.lang('Link text'),\r\n                    description: mw.lang('Selected text for the link.'),\r\n                },\r\n                target: {\r\n                    label: mw.lang('Open the link in a new window')\r\n                },\r\n                 icon: 'd-none',\r\n                title: 'Pages ',\r\n                dataUrl: function () {\r\n                    try {\r\n                        return mw.top().settings.api_url + 'content/get_admin_js_tree_json';\r\n                    } catch (e) {\r\n                        return null;\r\n                    }\r\n                }\r\n            };\r\n            options =  mw.object.extend(true, {}, defaults, (options || {}));\r\n            this.settings = options;\r\n            if (options.text === true) options.text = defaults.text;\r\n            if (options.target === true) options.target = defaults.target;\r\n\r\n            var root = document.createElement('div');\r\n            root.className = 'tab-content mw-ui-form-controller-root';\r\n            var _linkText = '', _linkUrl = '', _target = '';\r\n            UIFormControllers._title(this.settings, root)\r\n            var treeEl = document.createElement('div');\r\n            treeEl.className = 'form-group';\r\n            treeEl.style.marginInline = '15px;';\r\n            if (options.text) {\r\n                _linkText = mw.controlFields.field({\r\n                    label: options.text.label,\r\n                    description: options.text.description,\r\n                    name: 'text'\r\n                });\r\n                setTimeout(function (){\r\n                     _linkText.querySelector('input').addEventListener('keyup', function (){\r\n                        scope.shouldChange = false;\r\n                    })\r\n                    _linkText.querySelector('input').addEventListener('paste', function (){\r\n                        scope.shouldChange = false;\r\n                    })\r\n                }, 78)\r\n            }\r\n            var url = typeof this.settings.dataUrl === 'function' ? this.settings.dataUrl() : this.settings.dataUrl;\r\n\r\n            if(_linkText) {\r\n                scope.shouldChange = !_linkText.querySelector('input').value.trim();\r\n\r\n            }\r\n\r\n\r\n            var currentVal = {}\r\n\r\n\r\n            $.getJSON(url, function (res){\r\n\r\n                scope.tree = new mw.tree({\r\n                    data: res,\r\n                    element: treeEl,\r\n                    sortable: false,\r\n                    selectable: true,\r\n                    singleSelect: true,\r\n                    searchInputClassName: 'form-control-live-edit-input',\r\n                    searchInput: true\r\n                });\r\n\r\n                scope.tree.select(currentVal)\r\n\r\n                var dialog = mw.dialog.get(treeEl);\r\n                if(dialog) {\r\n                    dialog.center();\r\n                }\r\n                scope.tree.on(\"selectionChange\", function(selection){\r\n\r\n                    if (textField && selection && selection[0] && scope.shouldChange) {\r\n                        textField.value = selection[0].title;\r\n                    }\r\n                    if(scope.valid()) {\r\n                        scope._onChange.forEach(function (f){\r\n                            f(scope.getValue());\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (options.target) {\r\n                _target = mw.controlFields.checkbox({\r\n                    label: options.target.label,\r\n                    name: 'target'\r\n                });\r\n            }\r\n\r\n\r\n            var holder = document.createElement('div');\r\n            holder.append(_linkText);\r\n            holder.append(treeEl);\r\n            holder.append(_target);\r\n\r\n\r\n            var textField = holder.querySelector('[name=\"text\"]');\r\n            var targetField = holder.querySelector('[name=\"target\"]');\r\n\r\n            this.valid = function () {\r\n                var res = this.isValid();\r\n                // footer.ok.disabled = !res;\r\n                return res;\r\n            };\r\n\r\n            this.isValid = function () {\r\n                if(textField && !textField.value) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            };\r\n\r\n            var footer = UIFormControllers.footer();\r\n\r\n            this.getValue = function () {\r\n                var val = {};\r\n                if(textField) val.text = textField.value;\r\n                var getSelected = this.tree.getSelected()[0];\r\n                val.url = getSelected ? getSelected.url : '';\r\n                val.data = getSelected;\r\n                if(targetField) val.target = targetField.checked;\r\n                return val;\r\n            };\r\n\r\n            this.setValue = function (val) {\r\n                val = val || {};\r\n                currentVal = val;\r\n                if(val.id && val.type) {\r\n                    if(scope.tree) {\r\n                        scope.tree.select({\r\n                            id: val.id,\r\n                            type: val.type,\r\n                        })\r\n                    }\r\n                }\r\n                if(textField) textField.value = val.text || '';\r\n                if(targetField) targetField.checked = val.target;\r\n                return val;\r\n            };\r\n\r\n            this._onChange = [];\r\n            this.onChange = function (c) {\r\n                this._onChange.push(c);\r\n            };\r\n\r\n            this._confirm = [];\r\n            this.onConfirm = function (c) {\r\n                this._confirm.push(c);\r\n            };\r\n\r\n            this._cancel = [];\r\n            this.onCancel = function (c) {\r\n                this._cancel.push(c);\r\n            };\r\n\r\n            mw.emitter.on([textField, targetField], 'input', function (e){\r\n                if(scope.valid()) {\r\n                    scope._onChange.forEach(function (f){\r\n                        f(scope.getValue());\r\n                    });\r\n                }\r\n            });\r\n\r\n            mw.emitter.on(footer.ok, 'click', function (e){\r\n                scope._confirm.forEach(function (f){\r\n                    f(scope.getValue());\r\n                });\r\n            });\r\n\r\n            mw.emitter.on(footer.cancel, 'click', function (e){\r\n                scope._cancel.forEach(function (f){\r\n                    f();\r\n                });\r\n            });\r\n\r\n            root.append(holder);\r\n\r\n            root.append(footer.root);\r\n\r\n            this.valid();\r\n\r\n            this.root = root;\r\n            setTimeout(function (){\r\n                if(_linkText) {\r\n                    scope.shouldChange = !_linkText.querySelector('input').value.trim();\r\n\r\n                }\r\n            }, 10)\r\n        },\r\n        file: function (options) {\r\n            var scope = this;\r\n            var defaults = {\r\n                text: {\r\n                    label: mw.lang('Link text'),\r\n                    description: mw.lang('Selected text for the link.'),\r\n                },\r\n\r\n                target: {\r\n                    label: mw.lang('Open the link in a new window')\r\n                },\r\n                icon: 'd-none',\r\n                title: 'File',\r\n                dataUrl: function () {\r\n                    try {\r\n                        return mw.settings.api_url + 'content/get_admin_js_tree_json';\r\n                    } catch (e) {\r\n                        return null;\r\n                    }\r\n                }\r\n            };\r\n            options =  mw.object.extend(true, {}, defaults, (options || {}));\r\n             this.settings = options;\r\n            if (options.text === true) options.text = defaults.text;\r\n            if (options.target === true) options.target = defaults.target;\r\n\r\n            var root = document.createElement('div');\r\n            root.className = 'mw-ui-form-controller-root';\r\n            var _linkText = '', _linkUrl = '', _target = '';\r\n            UIFormControllers._title(this.settings, root)\r\n            var treeEl = document.createElement('div');\r\n            treeEl.className = 'form-group';\r\n            if (options.text) {\r\n                _linkText = mw.controlFields.field({\r\n                    label: options.text.label,\r\n                    description: options.text.description,\r\n                    name: 'text'\r\n                });\r\n            }\r\n            treeEl.append(mw.controlFields._label({content: 'Select file'}))\r\n             var url =  this.settings.dataUrl;\r\n            url = typeof url === 'function' ? url() : url;\r\n             scope.filepicker = new mw.filePicker({\r\n\r\n                element: treeEl,\r\n                nav: 'tabs',\r\n                label: false\r\n            });\r\n\r\n            if (options.target) {\r\n                _target = mw.controlFields.checkbox({\r\n                    label: options.target.label,\r\n                    name: 'target'\r\n                });\r\n            }\r\n\r\n\r\n            var holder = document.createElement('div');\r\n            holder.append(_linkText);\r\n            holder.append(treeEl);\r\n            holder.append(_target);\r\n\r\n\r\n            var textField = holder.querySelector('[name=\"text\"]');\r\n            var targetField = holder.querySelector('[name=\"target\"]');\r\n\r\n            this.valid = function () {\r\n                var res = this.isValid();\r\n                //footer.ok.disabled = !res;\r\n                return res;\r\n            };\r\n\r\n            this.isValid = function () {\r\n                if(textField && !textField.value) {\r\n                    return false;\r\n                }\r\n                return !!this.filepicker.getValue();\r\n            };\r\n\r\n            var footer = UIFormControllers.footer();\r\n\r\n            this.getValue = function () {\r\n                var val = {};\r\n                if(textField) val.text = textField.value;\r\n                var url = this.filepicker.getValue();\r\n\r\n                if(Array.isArray(url)) {\r\n                    url = url[0]\r\n                }\r\n                val.url = typeof url === 'object' ? (url.src || url.url) : url;\r\n                val.data = (url.src || url.url || null);\r\n                if(targetField) val.target = targetField.checked;\r\n                return val;\r\n            };\r\n\r\n            this.setValue = function (val) {\r\n                val = val || {};\r\n                if(textField) textField.value = val.text || '';\r\n                if(targetField) targetField.checked = !!val.target;\r\n\r\n                return val;\r\n            };\r\n\r\n            this._onChange = [];\r\n            this.onChange = function (c) {\r\n                this._onChange.push(c);\r\n            };\r\n\r\n            this._confirm = [];\r\n            this.onConfirm = function (c) {\r\n                this._confirm.push(c);\r\n            };\r\n\r\n            this._cancel = [];\r\n            this.onCancel = function (c) {\r\n                this._cancel.push(c);\r\n            };\r\n\r\n\r\n\r\n            $(this.filepicker).on('Result', function (e, res) {\r\n                // if(textField) textField.value = val.text || '';\r\n\r\n                if(textField && !textField.value) {\r\n                    var val = '';\r\n                    var press = res;\r\n                    if(Array.isArray(press)) {\r\n                        press = press[0]\r\n                    }\r\n                    if(typeof press === 'object') {\r\n                        press = press.name || press.src;\r\n                    }\r\n                    textField.value = press;\r\n                }\r\n                if(scope.valid()) {\r\n                    scope._onChange.forEach(function (f){\r\n                        f(scope.getValue());\r\n                    });\r\n                }\r\n            });\r\n            mw.emitter.on([textField, targetField], 'input', function (e){\r\n                if(scope.valid()) {\r\n                    scope._onChange.forEach(function (f){\r\n                        f(scope.getValue());\r\n                    });\r\n                }\r\n            });\r\n\r\n            mw.emitter.on(footer.ok, 'click', function (e){\r\n                scope._confirm.forEach(function (f){\r\n                    f(scope.getValue());\r\n                });\r\n            });\r\n\r\n            mw.emitter.on(footer.cancel, 'click', function (e){\r\n                scope._cancel.forEach(function (f){\r\n                    f();\r\n                });\r\n            });\r\n\r\n            root.append(holder);\r\n\r\n            root.append(footer.root);\r\n\r\n            this.valid();\r\n\r\n            this.root = root;\r\n        },\r\n\r\n        url: function (options) {\r\n            var scope = this;\r\n            var defaults = {\r\n                text: {\r\n                    label: mw.lang('Link text'),\r\n                    description: mw.lang('Selected text for the link'),\r\n                },\r\n                link: {\r\n                    label: mw.lang('Website URL'),\r\n                    description: mw.lang('Type the website URL to link it'),\r\n                    placeholder: \"http://example.com\",\r\n\r\n                },\r\n                target: {\r\n                    label: mw.lang('Open the link in a new window')\r\n                },\r\n                icon: 'd-none',\r\n                title: 'URL'\r\n            };\r\n            options =  mw.object.extend(true, {}, defaults, (options || {}));\r\n            this.settings = options;\r\n            if (options.text === true) options.text = defaults.text;\r\n            if (options.link === true) options.link = defaults.link;\r\n            if (options.target === true) options.target = defaults.target;\r\n\r\n            var root = document.createElement('div');\r\n            root.className = 'mw-ui-form-controller-root';\r\n            var _linkText = '', _linkUrl = '', _target = '';\r\n            UIFormControllers._title(this.settings, root)\r\n            if (options.text) {\r\n                _linkText = mw.controlFields.field({\r\n                    label: options.text.label,\r\n                    description: options.text.description,\r\n                    name: 'text'\r\n                });\r\n            }\r\n            if (options.link) {\r\n                _linkUrl = mw.controlFields.field({\r\n                    label: options.link.label,\r\n                    description: options.link.description,\r\n                    placeholder: options.link.placeholder,\r\n                    name: 'url'\r\n                });\r\n            }\r\n\r\n            if (options.target) {\r\n                _target = mw.controlFields.checkbox({\r\n                    label: options.target.label,\r\n                    name: 'target'\r\n                });\r\n            }\r\n\r\n\r\n            var holder = document.createElement('div');\r\n            holder.append(_linkText);\r\n            holder.append(_linkUrl);\r\n            holder.append(_target);\r\n\r\n\r\n            var textField = holder.querySelector('[name=\"text\"]');\r\n            var urlField = holder.querySelector('[name=\"url\"]');\r\n            var targetField = holder.querySelector('[name=\"target\"]');\r\n\r\n            urlField.value = location.protocol + '//';\r\n\r\n            this.valid = function () {\r\n                var res = this.isValid();\r\n               // footer.ok.disabled = !res;\r\n                return res;\r\n            };\r\n\r\n            this.isValid = function () {\r\n                if(textField && !textField.value) {\r\n                    return false;\r\n                }\r\n                if(urlField && !urlField.value) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            var footer = UIFormControllers.footer();\r\n\r\n            this.setValue = function (val) {\r\n                val = val || {};\r\n                if(textField) textField.value = val.text || '';\r\n                if(urlField) urlField.value = val.url  || '';\r\n                if(targetField) targetField.checked = val.target  ;\r\n            }\r\n            this.getValue = function () {\r\n                var val = {};\r\n                if(textField) val.text = textField.value;\r\n                if(urlField) val.url = urlField.value;\r\n                if(targetField) val.target = targetField.checked;\r\n                return val;\r\n            };\r\n\r\n            this._onChange = [];\r\n            this.onChange = function (c) {\r\n                this._onChange.push(c);\r\n            };\r\n\r\n            this._confirm = [];\r\n            this.onConfirm = function (c) {\r\n                this._confirm.push(c);\r\n            };\r\n\r\n            this._cancel = [];\r\n            this.onCancel = function (c) {\r\n                this._cancel.push(c);\r\n            };\r\n\r\n\r\n            mw.emitter.on([textField, urlField, targetField], 'input', function (e){\r\n                if(scope.valid()) {\r\n                    scope._onChange.forEach(function (f){\r\n                        f(scope.getValue());\r\n                    });\r\n                }\r\n            });\r\n\r\n            mw.emitter.on(footer.ok, 'click', function (e){\r\n                scope._confirm.forEach(function (f){\r\n                    f(scope.getValue());\r\n                });\r\n            });\r\n\r\n            mw.emitter.on(footer.cancel, 'click', function (e){\r\n                scope._cancel.forEach(function (f){\r\n                    f();\r\n                });\r\n            });\r\n\r\n            root.append(holder);\r\n\r\n            root.append(footer.root);\r\n\r\n            this.valid();\r\n\r\n            this.root = root;\r\n        }\r\n    };\r\n\r\n    mw.UIFormControllers = UIFormControllers;\r\n})();\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/form-controls.js?");

/***/ }),

/***/ "./resources/assets/components/icon_selector.js":
/*!******************************************************!*\
  !*** ./resources/assets/components/icon_selector.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n(function () {\r\n\r\n    var IconLoader = function (store) {\r\n        var scope = this;\r\n\r\n        var defaultVersion = '-1';\r\n\r\n        var common = {\r\n            'fontAwesome': {\r\n                cssSelector: '.fa',\r\n                detect: function (target) {\r\n                    return target.classList.includes('fa');\r\n                },\r\n                render: function (icon, target) {\r\n                    target.classList.add('fa');\r\n                    target.classList.add(icon);\r\n                },\r\n                remove: function (target) {\r\n                    target.classList.remove('fa');\r\n                    var exception= ['fa-lg', 'fa-2x', 'fa-3x', 'fa-4x', 'fa-5x', 'fa-fw', 'fa-spin', 'fa-pule', 'fa-rotate-90',\r\n                        'fa-rotate-180', 'fa-rotate-270', 'fa-flip-horizontal', 'fa-flip-vertical'];\r\n                    mw.tools.classNamespaceDelete(target, 'fa-', undefined, undefined, exception);\r\n                },\r\n                icons: function () {\r\n                     return new Promise(function (resolve) {\r\n                         $.get(mw.settings.modules_url + 'microweber/api/fa.icons.js',function (data) {\r\n                             resolve(JSON.parse(data));\r\n                        });\r\n                    });\r\n                },\r\n                name: 'Font Awesome',\r\n                load:  mw.settings.libs_url + 'fontawesome-4.7.0' + '/css/font-awesome.min.css',\r\n                unload: function () {\r\n                    document.querySelector('link[href*=\"fontawesome-4.7.0\"]').remove();\r\n                },\r\n                version: '4.7.0'\r\n            },\r\n            'materialIcons': {\r\n                cssSelector: '.material-icons',\r\n                detect: function (target) {\r\n                    return target.classList.contains('material-icons');\r\n                },\r\n                render: function (icon, target) {\r\n                    target.classList.add('material-icons');\r\n                    target.innerHTML = (icon);\r\n                },\r\n                remove: function (target) {\r\n                    mw.tools.removeClass(target, 'material-icons');\r\n                    target.innerHTML = '';\r\n                 },\r\n                icons: function () {\r\n                    return new Promise(function (resolve) {\r\n                        $.get(mw.settings.modules_url + 'microweber/api/material.icons.js',function (data) {\r\n                            resolve(JSON.parse(data));\r\n                        });\r\n                    });\r\n                },\r\n                name: 'Material Icons',\r\n                load: mw.settings.libs_url + 'material_icons' + '/material_icons.css',\r\n                unload: function () {\r\n                    top.document.querySelector('link[href*=\"material_icons.css\"]').remove();\r\n                },\r\n                version: 'mw'\r\n            },\r\n            'iconsMindLine': {\r\n                cssSelector: '[class*=\"mw-micon-\"]:not([class*=\"mw-micon-solid-\"])',\r\n                detect: function (target) {\r\n                    return target.className.includes('mw-micon-') && !target.className.includes('mw-micon-solid-');\r\n                },\r\n                render: function (icon, target) {\r\n                    target.classList.add(icon);\r\n                },\r\n                remove: function (target) {\r\n\r\n                    mw.tools.classNamespaceDelete(target, 'mw-micon-', undefined, undefined, []);\r\n                },\r\n                icons: function () {\r\n                    var scope = this;\r\n                    var parse = function (cssLink) {\r\n                        if(!cssLink.sheet){\r\n                            return;\r\n                        }\r\n                        var icons = cssLink.sheet.cssRules;\r\n                         var l = icons.length, i = 0, mindIcons = [];\r\n                         for (; i < l; i++) {\r\n                            var sel = icons[i].selectorText;\r\n                            if (!!sel && sel.indexOf('.mw-micon-') === 0) {\r\n                                var cls = sel.replace(\".\", '').split(':')[0];\r\n                                mindIcons.push(cls);\r\n                            }\r\n                        }\r\n                        return mindIcons\r\n                    };\r\n                    var load = function (cb) {\r\n                        var cssLink = mw.top().win.document.querySelector('link[href*=\"mw-icons-mind/line\"]');\r\n                        if(cssLink) {\r\n                            cb.call(undefined, cssLink);\r\n                        }  else {\r\n                            $.get(scope.load, function (data) {\r\n                                cssLink = document.createElement('link');\r\n                                cssLink.type = 'text/css';\r\n                                cssLink.rel = 'stylesheet';\r\n                                cssLink.href = scope.load;\r\n                                $(document.head).append(cssLink);\r\n                                cb.call(undefined, cssLink);\r\n                            });\r\n                        }\r\n                    };\r\n                    return new Promise(function (resolve) {\r\n                        load(function (link) {\r\n                            resolve(parse(link));\r\n                        });\r\n                    });\r\n                },\r\n                name: 'Icons Mind Line',\r\n                load:  mw.settings.modules_url + 'microweber/api/libs/mw-icons-mind/line/style.css',\r\n                unload: function () {\r\n                    document.querySelector('link[href*=\"mw-icons-mind/line/style\"]').remove();\r\n                },\r\n                version: 'mw_local'\r\n            },\r\n            'iconsMindSolid': {\r\n                cssSelector: '[class*=\"mw-micon-solid-\"]',\r\n                detect: function (target) {\r\n                    return target.className.includes('mw-micon-solid-');\r\n                },\r\n                render: function (icon, target) {\r\n                    target.classList.add(icon);\r\n                },\r\n                remove: function (target) {\r\n                    mw.tools.classNamespaceDelete(target, 'mw-micon-solid-', undefined, undefined, []);\r\n                },\r\n                icons: function () {\r\n                    var scope = this;\r\n                    var parse = function (cssLink) {\r\n                        if(!cssLink.sheet){\r\n                            return;\r\n                        }\r\n                        var icons = cssLink.sheet.cssRules;\r\n                        var l = icons.length, i = 0, mindIcons = [];\r\n                        for (; i < l; i++) {\r\n                            var sel = icons[i].selectorText;\r\n                            if (!!sel && sel.indexOf('.mw-micon-solid-') === 0) {\r\n                                var cls = sel.replace(\".\", '').split(':')[0];\r\n                                mindIcons.push(cls);\r\n                            }\r\n                        }\r\n                        return mindIcons\r\n                    };\r\n                    var load = function (cb) {\r\n                        var cssLink = mw.top().win.document.querySelector('link[href*=\"mw-icons-mind/solid\"]');\r\n                         if(cssLink) {\r\n                            cb.call(undefined, cssLink);\r\n                        }  else {\r\n                            $.get(scope.load, function (data) {\r\n                                cssLink = document.createElement('link');\r\n                                cssLink.type = 'text/css';\r\n                                cssLink.rel = 'stylesheet';\r\n                                cssLink.href = scope.load;\r\n                                $(document.head).append(cssLink);\r\n                                cb.call(undefined, cssLink);\r\n                            });\r\n                        }\r\n                    };\r\n                    return new Promise(function (resolve) {\r\n                        load(function (link) {\r\n                            resolve(parse(link));\r\n                        });\r\n                    });\r\n                },\r\n                name: 'Icons Mind Solid',\r\n                load:  mw.settings.modules_url + 'microweber/api/libs/mw-icons-mind/solid/style.css',\r\n                unload: function () {\r\n                    document.querySelector('link[href*=\"mw-icons-mind/solid/style\"]').remove();\r\n                },\r\n                version: 'mw_local'\r\n            },\r\n\r\n            'materialDesignIcons': {\r\n                cssSelector: '.mdi',\r\n                detect: function (target) {\r\n                    return target.classList.includes('mdi');\r\n                },\r\n                render: function (icon, target) {\r\n                    target.classList.add('mdi');\r\n                    target.classList.add(icon);\r\n                },\r\n                remove: function (target) {\r\n                    mw.tools.classNamespaceDelete(target, 'mdi-', undefined, undefined, []);\r\n                    target.classList.remove('mdi');\r\n                },\r\n                icons: function () {\r\n                    var scope = this;\r\n                    var load = function (cb) {\r\n                        var cssLink = mw.top().win.document.querySelector('link[href*=\"materialdesignicons\"]');\r\n                        if(cssLink) {\r\n                            cb.call(undefined, cssLink);\r\n                        }  else {\r\n                            $.get(scope.load, function (data) {\r\n                                cssLink = document.createElement('link');\r\n                                cssLink.type = 'text/css';\r\n                                cssLink.rel = 'stylesheet';\r\n                                cssLink.href = scope.load;\r\n                                $(document.head).append(cssLink);\r\n                                cb.call(undefined, cssLink);\r\n                            });\r\n                        }\r\n                    };\r\n                    return new Promise(function (resolve) {\r\n                        load(function (link){\r\n                            if(!link || !link.sheet) {\r\n                                resolve([]);\r\n                                return;\r\n                            }\r\n                            var icons = link.sheet.cssRules;\r\n                            var l = icons.length, i = 0, mdiIcons = [];\r\n                            for (; i < l; i++) {\r\n                                var sel = icons[i].selectorText;\r\n                                if (!!sel && sel.indexOf('.mdi-') === 0) {\r\n                                    var cls = sel.replace(\".\", '').split(':')[0];\r\n                                    mdiIcons.push(cls);\r\n                                }\r\n                            }\r\n                            resolve(mdiIcons);\r\n                        });\r\n                    });\r\n                },\r\n                name: 'Material Design Icons',\r\n                load:  mw.settings.modules_url + 'microweber/css/fonts/materialdesignicons/css/materialdesignicons.min.css',\r\n                unload: function () {\r\n                    document.querySelector('link[href*=\"materialdesignicons\"]').remove();\r\n                },\r\n                version: 'mw_local'\r\n            },\r\n            'mwIcons': {\r\n                cssSelector: '[class*=\"mw-icon-\"]',\r\n                detect: function (target) {\r\n                    return target.className.includes('mw-icon-');\r\n                },\r\n                render: function (icon, target) {\r\n                    target.classList.add(icon);\r\n                },\r\n                remove: function (target) {\r\n                    mw.tools.classNamespaceDelete(target, 'mw-icon-', undefined, undefined, []);\r\n                },\r\n                icons: function () {\r\n                    return new Promise(function (resolve) {\r\n                        $.get(mw.settings.modules_url + 'microweber/api/microweber.icons.js',function (data) {\r\n                            resolve(JSON.parse(data));\r\n                        });\r\n                    });\r\n                },\r\n                name: 'Microweber Icons',\r\n                load:  mw.settings.modules_url + 'microweber/css/fonts/materialdesignicons/css/materialdesignicons.min.css',\r\n                unload: function () {\r\n                    document.querySelector('link[href*=\"materialdesignicons\"]').remove();\r\n                },\r\n                version: 'mw_local'\r\n            },\r\n            SVGIcons: {\r\n                cssSelector: 'svg[viewBox]',\r\n                detect: function (target) {\r\n                    return target.nodeName === 'SVG'\r\n                },\r\n                render: function (icon, target) {\r\n                     target.innerHTML = icon.source;\r\n                     var svg = target.querySelector('svg');\r\n                     if (svg) {\r\n                         svg.setAttribute('width', '1em');\r\n                         svg.setAttribute('fill', 'currentColor');\r\n                         svg.setAttribute('height', '1em');\r\n                         svg.style.width = '1em';\r\n                         svg.style.height = '1em';\r\n                         svg.style.fill = 'currentColor';\r\n                     }\r\n                },\r\n                remove: function (target) {\r\n                    target.innerHTML = ''\r\n                },\r\n                icons: function () {\r\n                    return new Promise(function (resolve) {\r\n                        if(window.TemplateVectorIcons) {\r\n                            resolve(TemplateVectorIcons)\r\n                        } else {\r\n                            $.getScript(mw.settings.template_url + 'template_icons.js', function (){\r\n                                resolve(TemplateVectorIcons)\r\n                            })\r\n                        }\r\n\r\n                    });\r\n                },\r\n                name: 'Vector Icons',\r\n                load:  null,\r\n                unload: function () {\r\n\r\n                },\r\n                version: 'mw_local'\r\n            },\r\n        };\r\n\r\n        var storage = function () {\r\n            if(!mw.top().__IconStorage) {\r\n                mw.top().__IconStorage = [];\r\n            }\r\n            return mw.top().__IconStorage;\r\n        };\r\n\r\n        this.storage = store || storage;\r\n\r\n\r\n        var iconSetKey = function (options) {\r\n            return options.name + options.version;\r\n        };\r\n\r\n        var iconSetPush = function (options) {\r\n            if(!storage().find(function (a) {return iconSetKey(options) === iconSetKey(a); })) {\r\n                return storage().push(options);\r\n            }\r\n            return false;\r\n        };\r\n\r\n        var addFontIconSet = function (options) {\r\n            options.version = options.version || defaultVersion;\r\n            iconSetPush(options);\r\n\r\n            if (typeof options.load === 'string') {\r\n                mw.require(options.load);\r\n            } else if (typeof options.load === 'function') {\r\n                options.load();\r\n            }\r\n        };\r\n        var addIconSet = function (conf) {\r\n\r\n            if(typeof conf === 'string') {\r\n                if (common[conf]) {\r\n                    conf = common[conf];\r\n                } else {\r\n                    console.warn(conf + ' is not defined.');\r\n                    return;\r\n                }\r\n            }\r\n             if(!conf) return;\r\n            conf.type = conf.type || 'font';\r\n            if (conf.type === 'font') {\r\n                return addFontIconSet(conf);\r\n            }\r\n        };\r\n\r\n        this.addIconSet = function (conf) {\r\n            addIconSet(conf);\r\n            return this;\r\n        };\r\n\r\n        this.removeIconSet = function (name, version) {\r\n            var str = storage();\r\n            var item = str.find(function (a) { return a.name === name && (!version || a.version === version); });\r\n            if (item) {\r\n                if (item.unload) {\r\n                    item.unload();\r\n                }\r\n                str.splice(str.indexOf(item), 1);\r\n            }\r\n        };\r\n\r\n\r\n        this.init = function () {\r\n            storage().forEach(function (iconSet){\r\n                scope.addIconSet(iconSet);\r\n            });\r\n        };\r\n\r\n    };\r\n\r\n    mw.iconLoader = function (options) {\r\n        return new IconLoader(options);\r\n    };\r\n\r\n\r\n})();\r\n\r\n\r\n(function (){\r\n\r\n    var IconPicker = function (options) {\r\n        options = options || {};\r\n        var loader = mw.iconLoader();\r\n        var defaults = {\r\n            iconsPerPage: 40,\r\n            iconOptions: {\r\n                size: true,\r\n                color: true,\r\n                reset: false\r\n            }\r\n        };\r\n\r\n\r\n        this.settings = mw.object.extend(true, {}, defaults, options);\r\n\r\n        var scope = this;\r\n        var tabAccordionBuilder = function (items) {\r\n            var res = {root: mw.element('<div class=\"mw-tab-accordion\" data-options=\"tabsSize: medium, tabsColor: tab\" />'), items: []};\r\n            items.forEach(function (item){\r\n                var el = mw.element('<div class=\"mw-accordion-item px-3\" />');\r\n                var content = mw.element('<div class=\"mw-accordion-content px-1\">' +(item.content || '') +'</div>');\r\n                var title = mw.element('<div class=\"mw-ui-box-header mw-accordion-title\">' + item.title +'</div>');\r\n                el.append(title);\r\n                el.append(content);\r\n                content.css({\r\n                    overflowX: 'hidden'\r\n                })\r\n\r\n                res.root.append(el);\r\n                res.items.push({\r\n                    title: title,\r\n                    content: content,\r\n                    root: el,\r\n                });\r\n            });\r\n            setTimeout(function (){\r\n                if(mw.components) {\r\n                    mw.components._init();\r\n                }\r\n            }, 10);\r\n            return res;\r\n        };\r\n\r\n        var createUI = function () {\r\n            var root = mw.element({\r\n                props: { className: 'mw-icon-selector-root mx-auto w-100 my-3' }\r\n            });\r\n            var iconsBlockHolder, tabs, optionsHolder, iconsHolder;\r\n            if(scope.settings.iconOptions) {\r\n                tabs = tabAccordionBuilder([\r\n                    {title: 'Icons'},\r\n                    {title: 'Options'},\r\n\r\n                ]);\r\n                iconsBlockHolder = tabs.items[0].content;\r\n                optionsHolder = tabs.items[1].content;\r\n                root.append(tabs.root)\r\n            } else {\r\n                iconsBlockHolder = mw.element().addClass('px-3');\r\n                root.append(iconsBlockHolder);\r\n            }\r\n            iconsHolder = mw.element().addClass('mw-icon-picker-icons-holder');\r\n            iconsBlockHolder.append(iconsHolder);\r\n            return {\r\n                root: root,\r\n                tabs: tabs,\r\n                iconsBlockHolder: iconsBlockHolder,\r\n                iconsHolder: iconsHolder,\r\n                optionsHolder: optionsHolder\r\n            };\r\n        };\r\n\r\n\r\n        var _e = {};\r\n\r\n        this.on = function (e, f) { _e[e] ? _e[e].push(f) : (_e[e] = [f]) };\r\n        this.dispatch = function (e, f) { _e[e] ? _e[e].forEach(function (c){ c.call(this, f); }) : ''; };\r\n\r\n        var actionNodes = {};\r\n\r\n        var createOptions = function (holder) {\r\n\r\n            if(holder && scope.settings.iconOptions) {\r\n                if(scope.settings.iconOptions.size) {\r\n                    var label = mw.element(`\r\n                        <div class=\"mw-icon-selector-flex my-2\">\r\n                            <label class=\"mw-icon-selector-control-label live-edit-label px-0\">${mw.lang('Size')}</label>\r\n                        </div>\r\n                    `);\r\n\r\n                    var currentSize = 20;\r\n\r\n                    if(scope.settings.target) {\r\n                        currentSize = parseFloat(getComputedStyle(scope.settings.target).fontSize)\r\n                    }\r\n\r\n                    var sizeel = mw.element('<div class=\"mwiconlist-settings-section-block-item input-group input-group-flat\" style=\"width: 230px;\"><span class=\"input-group-text\"><kbd>px</kbd></span></div>');\r\n                    var sizeinput = mw.element(`<input class=\"form-control\" value=\"${currentSize}\" type=\"number\" min=\"8\" max=\"200\">`);\r\n                    var sizeinput2 = mw.element(`<input class=\"mw-icon-selector-form-control-range\" value=\"${currentSize}\" type=\"range\" min=\"8\" max=\"200\">`);\r\n\r\n                    actionNodes.size = sizeinput;\r\n                    sizeinput.on('input', function () {\r\n                        scope.dispatch('sizeChange', sizeinput.get(0).value);\r\n                        sizeinput2.val(sizeinput.get(0).value);\r\n                    });\r\n                    sizeinput2.on('input', function () {\r\n                        sizeinput.val(sizeinput2.get(0).value);\r\n                        scope.dispatch('sizeChange', sizeinput.get(0).value);\r\n                    });\r\n\r\n                    holder.append(label);\r\n\r\n                    sizeel.prepend(sizeinput2);\r\n                    sizeel.prepend(sizeinput);\r\n                    holder.append(sizeel);\r\n                }\r\n                if(scope.settings.iconOptions.color) {\r\n                    var cel = mw.element('<div class=\"mwiconlist-settings-section-block-item\"><label class=\"mw-icon-selector-control-label live-edit-label px-0 mb-2 ps-2\">Choose color</label></div>');\r\n                    var cinput = mw.element('<input class=\"mw-icon-selector-form-control mw-icon-selector-2-column\" type=\"color\">');\r\n                    actionNodes.color = cinput;\r\n                    cinput.on('input', function () {\r\n                        scope.dispatch('colorChange', cinput.get(0).value);\r\n\r\n\r\n                    });\r\n                    var cpHolder = mw.element()\r\n                    // cel.append(cinput);\r\n                    setTimeout(function (){\r\n                        var cpOptions = {\r\n                            element: cpHolder.get(0),\r\n                            position: 'bottom-center',\r\n                            onchange: function (color) {\r\n                                scope.dispatch('colorChange', color);\r\n                            },\r\n\r\n                        };\r\n                        if(scope.settings.target) {\r\n                            cpOptions.value = getComputedStyle(scope.settings.target).color\r\n                        }\r\n                        mw.colorPicker(cpOptions);\r\n                    }, 100)\r\n                    cel.append(cpHolder);\r\n                    holder.append(cel);\r\n                }\r\n                if(scope.settings.iconOptions.imageReplace) {\r\n                    var rel = mw.element(`\r\n                    <div class=\"my-3\">\r\n                        <label class=\"mw-icon-selector-control-label live-edit-label px-0 mb-2 ps-2\">${mw.lang('Replace with image')}</label>\r\n                    </div>`);\r\n                    var rinput = mw.element(`\r\n                        <button type=\"button\" style=\"min-width: 150px\" class=\"btn btn-light border-0 go-live-edit-href-set admin-toolbar-buttons\">\r\n                        ${mw.lang('Choose')}\r\n                        </button>\r\n                    `);\r\n                    rinput.on('click', function () {\r\n                        mw.filePickerDialog( (url) => {\r\n                            scope.dispatch('iconReplaced', {\r\n                                type: 'image',\r\n                                url: url,\r\n                            });\r\n                        });\r\n\r\n                    });\r\n                    rel.append(rinput);\r\n                    holder.append(rel);\r\n                }\r\n                if(scope.settings.iconOptions.reset) {\r\n                    var rel = mw.element(`\r\n                    <div class=\"my-3\">\r\n                        <label class=\"mw-icon-selector-control-label live-edit-label px-0 mb-2 ps-2\">${mw.lang('Reset icon options')}</label>\r\n                    </div>`);\r\n                    var rinput = mw.element(`\r\n                        <button type=\"button\" style=\"min-width: 150px\" class=\"btn btn-outline-secondary \">\r\n                        ${mw.lang('Reset')}\r\n                        </button>\r\n                    `);\r\n                    rinput.on('click', function () {\r\n                        scope.dispatch('reset', rinput.get(0).value);\r\n\r\n                    });\r\n                    rel.append(rinput);\r\n                    holder.append(rel);\r\n                }\r\n            }\r\n        };\r\n\r\n        var _prepareIconsLists = function (c) {\r\n            var sets = loader.storage();\r\n            var all = sets.length;\r\n            var i = 0;\r\n             sets.forEach(function (set){\r\n                 if (!set._iconsLists) {\r\n                     (function (aset){\r\n                         aset.icons().then(function (data){\r\n                             aset._iconsLists = data;\r\n                             i++;\r\n                             if(i === all) c.call(sets, sets);\r\n                         });\r\n                     })(set);\r\n                 } else {\r\n                     i++;\r\n                     if(i === all) c.call(sets, sets);\r\n                 }\r\n\r\n            });\r\n        };\r\n\r\n\r\n        var createPaging = function(length, page){\r\n            page = page || 1;\r\n            var max = 999;\r\n            var pages = Math.min(Math.ceil(length/scope.settings.iconsPerPage), max);\r\n            var paging = document.createElement('ul');\r\n            paging.className = 'pagination mw-live-edit-pagination-tabler d-flex flex-wrap mx-auto mt-3';\r\n            if(scope.settings.iconsPerPage >= length ) {\r\n                return paging;\r\n            }\r\n            var active = false;\r\n            for ( var i = 1; i <= pages; i++) {\r\n                var el = document.createElement('a');\r\n                el.innerHTML = i;\r\n                el._value = i;\r\n                if(page === i) {\r\n                    el.className = 'active';\r\n                    active = i;\r\n                }\r\n                el.classList.add('page-link');\r\n                el.onclick = function () {\r\n                    comRender({page: this._value });\r\n                };\r\n                var elLi = document.createElement('li');\r\n                elLi.className = 'page-item';\r\n\r\n                elLi.appendChild(el);\r\n\r\n\r\n                paging.appendChild(elLi);\r\n            }\r\n            var all = paging.querySelectorAll('li');\r\n            for (var i = active - 3; i < active + 2; i++){\r\n                if(all[i]) {\r\n                    all[i].className += ' mw-paging-visible-range';\r\n                }\r\n            }\r\n\r\n\r\n            if(active < pages) {\r\n                var next = document.createElement('a');\r\n                next.innerHTML = '&raquo;';\r\n                next._value = active+1;\r\n                next.className = 'mw-paging-visible-range mw-paging-next';\r\n                next.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M9 6l6 6l-6 6\"></path></svg>';\r\n                $(paging).append(next);\r\n                next.onclick = function () {\r\n                     comRender({page: this._value });\r\n                }\r\n            }\r\n            if(active > 1) {\r\n                var prev = document.createElement('a');\r\n                prev.className = 'mw-paging-visible-range mw-paging-prev';\r\n                prev.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M15 6l-6 6l6 6\"></path></svg>';\r\n                prev._value = active-1;\r\n                $(paging).prepend(prev);\r\n                prev.onclick = function () {\r\n                     comRender({page: this._value });\r\n                };\r\n            }\r\n\r\n            return paging;\r\n        };\r\n\r\n        var searchField = function () {\r\n            var time = null;\r\n            scope.searchField =  mw.element({\r\n                tag: 'input',\r\n                props: {\r\n                    className: 'form-control-live-edit-input',\r\n                    placeholder: 'Search',\r\n                    oninput: function () {\r\n                        clearTimeout(time);\r\n                        time = setTimeout(function (){\r\n                            comRender();\r\n                        }, 123);\r\n                    }\r\n                }\r\n            });\r\n\r\n            var searchFieldWrapper = mw.element('<div class=\"form-control-live-edit-label-wrapper m-0 mt-2\"></div>');\r\n            var searchFieldSpanEffect = mw.element('<span class=\"form-control-live-edit-bottom-effect\"></span>');\r\n            searchFieldWrapper.append(scope.searchField);\r\n            searchFieldWrapper.append(searchFieldSpanEffect);\r\n\r\n            return searchFieldWrapper;\r\n        };\r\n\r\n        var comRender = function (options) {\r\n            options = options || {};\r\n            options = mw.object.extend({}, {\r\n                set: scope.selectField.get(0).options[scope.selectField.get(0).selectedIndex]._value,\r\n                term: scope.searchField.get(0).value\r\n            }, options);\r\n            scope.ui.iconsHolder.empty().append(renderSearchResults(options));\r\n        };\r\n\r\n        var searchSelector = function () {\r\n            var sel = mw.element('<select class=\"form-select form-control-live-edit-input\" />');\r\n            scope.selectField = sel;\r\n            loader.storage().forEach(function (item) {\r\n                var el = document.createElement('option');\r\n                el._value = item;\r\n                el.innerHTML = item.name;\r\n                sel.append(el);\r\n            });\r\n            sel.on('change', function (){\r\n                comRender()\r\n            });\r\n\r\n            var searchSelectorWrapper = mw.element('<div class=\"form-control-live-edit-label-wrapper m-0 mt-2\"></div>');\r\n            searchSelectorWrapper.append(sel);\r\n\r\n            return searchSelectorWrapper;\r\n        };\r\n\r\n        var search = function (conf) {\r\n            conf = conf || {};\r\n            conf.set = conf.set ||  loader.storage()[0];\r\n            conf.page = conf.page || 1;\r\n            conf.term = (conf.term || '').trim().toLowerCase();\r\n\r\n            if (!conf.set._iconsLists) {\r\n                return;\r\n            }\r\n\r\n            var all = conf.set._iconsLists.filter(function (f){ return (f.name || f).toLowerCase().indexOf(conf.term) !== -1; });\r\n\r\n            var off = scope.settings.iconsPerPage * (conf.page - 1);\r\n            var to = off + Math.min(all.length - off, scope.settings.iconsPerPage);\r\n\r\n            return mw.object.extend({}, conf, {\r\n                data: all.slice(off, to),\r\n                all: all,\r\n                off: off\r\n            });\r\n            /*for ( var i = off; i < to; i++ ) {\r\n\r\n            }*/\r\n        };\r\n\r\n        var renderSearchResults = function (conf) {\r\n            var res = search(conf);\r\n\r\n            if(!res) return;\r\n            var pg = createPaging(res.all.length, res.page);\r\n            var root = mw.element();\r\n            if(!res.data.length) {\r\n                root.append( mw.element(`<div class=\"alert\" role=\"alert\"><h5 class=\"text-secondary fw-normal\">No results for <strong>${conf.term}</strong></h5></div>`));\r\n            }\r\n            res.data.forEach(function (iconItem){\r\n                var icon = mw.element({\r\n                    tag: 'span',\r\n                    props: {\r\n                        className: 'mwiconlist-icon',\r\n                        onclick: function (e) {\r\n                            scope.dispatch('select', {\r\n                                icon: iconItem,\r\n                                renderer: res.set.render,\r\n                                render: function () {\r\n                                    var sets = loader.storage();\r\n                                    sets.forEach(function (set) {\r\n                                        set.remove(scope.target)\r\n                                    })\r\n                                    return res.set.render(iconItem, scope.target);\r\n                                }\r\n                            });\r\n                            setTimeout(function (){\r\n                                mw.trigger('iconInserted')\r\n                            })\r\n                        }\r\n                    }\r\n                });\r\n                root.append(icon);\r\n                res.set.render(iconItem, icon.get(0));\r\n            });\r\n            root.append(pg)\r\n            return root;\r\n        };\r\n\r\n        var createIconsBlock = function () {\r\n            mw.spinner({element: scope.ui.iconsHolder.get(0), size: 30}).show();\r\n            _prepareIconsLists(function (){\r\n                comRender();\r\n                mw.spinner({element: scope.ui.iconsHolder.get(0)}).hide();\r\n            });\r\n        };\r\n\r\n        this.create = function () {\r\n            this.ui = createUI();\r\n            createOptions(this.ui.optionsHolder);\r\n            this.ui.iconsBlockHolder.prepend(searchField());\r\n\r\n            this.ui.iconsBlockHolder.prepend(searchSelector());\r\n            createIconsBlock();\r\n\r\n        };\r\n\r\n        this.get = function () {\r\n            return this.ui.root.get(0);\r\n        };\r\n\r\n        this.dialog = function (method) {\r\n            if(method === 'hide') {\r\n                this._dialog.hide();\r\n                return;\r\n            }\r\n            if(!this._dialog) {\r\n                this._dialog = mw.top().dialog({content: this.get(), title: 'Select icon', closeButtonAction: 'hide', width: 450,overlayClose: true});\r\n\r\n                this._dialog.dialogContainer.style.padding = '0px';\r\n                this._dialog.overlay.style.backgroundColor = 'transparent';\r\n\r\n                mw.components._init();\r\n            }\r\n            this._dialog.show();\r\n            return this._dialog;\r\n        };\r\n\r\n        this.destroy = function () {\r\n            this.get().remove()\r\n            if(this._dialog) {\r\n                this._dialog.remove();\r\n            }\r\n            if(this._tooltip) {\r\n                this._tooltip.remove();\r\n            }\r\n        };\r\n\r\n        this.target = null;\r\n\r\n        this.tooltip = function (target) {\r\n            this.target = target;\r\n            if(target === 'hide' && this._tooltip) {\r\n                this._tooltip.style.display = 'none';\r\n            } else {\r\n                if (!this._tooltip) {\r\n                    this._tooltip = mw.tooltip({\r\n                        content: this.get(),\r\n                        element: target,\r\n                        position: 'bottom-center',\r\n                    });\r\n                } else {\r\n                    mw.tools.tooltip.setPosition(this._tooltip, target, 'bottom-center');\r\n                }\r\n\r\n                this._tooltip.style.display = 'block';\r\n                if(target.nodeType === 1) {\r\n                    var css = getComputedStyle(target);\r\n                    $('[type=\"number\"],[type=\"range\"]', this._tooltip).val(parseFloat(css.fontSize));\r\n\r\n                    $('[type=\"color\"]', this._tooltip).val(mw.color.rgbOrRgbaToHex(css.color));\r\n                }\r\n\r\n            }\r\n\r\n            mw.components._init();\r\n            return this._tooltip;\r\n        };\r\n\r\n        this.init = function () {\r\n            this.create();\r\n        };\r\n\r\n        this.promise = function () {\r\n            return new Promise(function (resolve){\r\n               scope.on('select', function (data) {\r\n                   resolve(data);\r\n               });\r\n            });\r\n        };\r\n\r\n        this.init();\r\n\r\n    };\r\n\r\n\r\n    mw.iconPicker = function (options) {\r\n        return new IconPicker(options);\r\n    };\r\n\r\n})();\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/icon_selector.js?");

/***/ }),

/***/ "./resources/assets/components/link-editor.js":
/*!****************************************************!*\
  !*** ./resources/assets/components/link-editor.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n\r\n\r\n    mw.LinkEditor = function(options) {\r\n\r\n        var scope = this;\r\n        var defaults = {\r\n            mode: 'dialog',\r\n            controllers: [\r\n                { type: 'url'},\r\n                { type: 'page' },\r\n                { type: 'post' },\r\n                { type: 'file' },\r\n                { type: 'email' },\r\n                { type: 'layout' },\r\n                /*{ type: 'title' },*/\r\n            ],\r\n            title: '<i class=\"mdi mdi-link mw-link-editor-icon\"></i> ' + mw.lang('Link Settings'),\r\n            nav: 'tabs',\r\n            safeMode: true\r\n        };\r\n\r\n        this._confirm = [];\r\n        this.onConfirm = function (c) {\r\n            this._confirm.push(c);\r\n        };\r\n\r\n        this._cancel = [];\r\n        this.onCancel = function (c) {\r\n            this._cancel.push(c);\r\n        };\r\n\r\n        this.setValue = function (data, controller) {\r\n            data = this.cleanData(data);\r\n            controller = controller || 'auto';\r\n\r\n\r\n            if(controller === 'auto') {\r\n                this.controllers.forEach(function (item){\r\n                    item.controller.setValue(data);\r\n                });\r\n            } else {\r\n                this.controllers.find(function (item){\r\n                    return item.type === controller;\r\n                }).controller.setValue(data);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        this.settings =  mw.object.extend({}, defaults, options || {});\r\n\r\n        if(this.settings.hideTextFied) {\r\n            for (var i = 0; i < this.settings.controllers.length; i++) {\r\n                if(!this.settings.controllers[i].config) {\r\n                    this.settings.controllers[i].config = {};\r\n                }\r\n                this.settings.controllers[i].config.text = false;\r\n            }\r\n        }\r\n\r\n        var _filterXSS = function (html){\r\n            var options = {\r\n\r\n            };\r\n\r\n            return (filterXSS(html, options)) ;\r\n        };\r\n        this.cleanData = function (data) {\r\n            if(scope.settings.safeMode) {\r\n                data = Object.assign({}, data);\r\n                if(data.url) {\r\n                    data.url = _filterXSS(data.url);\r\n                }\r\n                if(data.text) {\r\n                    // data.text = _filterXSS(data.text);\r\n                }\r\n            }\r\n            return data;\r\n        };\r\n\r\n\r\n\r\n        var handleSelect = function (__for, target) {\r\n            [].forEach.call(scope.nav.querySelectorAll('li a'), function (item){\r\n                if(item.__for === __for) {\r\n                    item.classList.add('active');\r\n                } else {\r\n                    item.classList.remove('active');\r\n                }\r\n\r\n            });\r\n            scope.controllers.forEach(function (item){item.controller.root.classList.remove('active');});\r\n            if(target && target.classList) {\r\n                target.classList.add('active');\r\n            }\r\n            __for.controller.root.classList.add('active');\r\n            if(scope.dialog) {\r\n                scope.dialog.center();\r\n            }\r\n        };\r\n\r\n\r\n        this.selectController = function(type) {\r\n            var ctrl = scope.controllers.find(c => c.type === type);\r\n            if(ctrl) {\r\n                handleSelect(ctrl)\r\n            }\r\n        }\r\n\r\n\r\n        this.buildNavigation = function (){\r\n            if(this.settings.nav === 'tabs') {\r\n                this.nav = document.createElement('ul');\r\n                this.nav.className = 'nav nav-tabs mw-ac-editor-nav border-0 col-4 gap-3 d-flex flex-column';\r\n\r\n                var nav = scope.controllers;\r\n                var dropdown = [];\r\n\r\n                var navTitle = document.createElement('li');\r\n                navTitle.innerHTML = `<label class=\"form-label font-weight-bold mt-2 p-0\">${mw.lang('Choose from')}</label>`;\r\n\r\n                scope.nav.appendChild(navTitle)\r\n\r\n\r\n\r\n                var createA = function (ctrl, index) {\r\n                    var li =  document.createElement('li');\r\n                    li.className = 'pe-3'\r\n                    var a =  document.createElement('a');\r\n                    a.className = 'mw-admin-action-links mw-adm-liveedit-tabs' + (index === 0 ? ' active' : '');\r\n                    a.innerHTML = ('<i class=\"'+ctrl.controller.settings.icon+'\"></i> '+ctrl.controller.settings.title);\r\n                    a.__for = ctrl;\r\n                    a.onclick = function (){\r\n                        handleSelect(this.__for, this);\r\n                    };\r\n                    li.appendChild(a)\r\n                    return li;\r\n                };\r\n\r\n\r\n                nav.forEach(function (ctrl, index){\r\n                    scope.nav.appendChild(createA(ctrl, index));\r\n                });\r\n                this.settings.selectedIndex = this.settings.selectedIndex || 0;\r\n\r\n\r\n                let navCount = -1;\r\n                for(let i = 0; i < this.nav.children.length; i++) {\r\n                    const link = this.nav.children[i].querySelector('a');\r\n                    if(link) {\r\n                        navCount++;\r\n                        if(navCount === this.settings.selectedIndex) {\r\n                            link.click()\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                this.root.prepend(this.nav);\r\n\r\n                if(dropdown.length) {\r\n                    const dropdownEl = mw.element(`\r\n                        <li class=\"pe-3 dropdown admin-action-links-dropdown\">\r\n\r\n                                <a class=\"mw-admin-action-links mw-adm-liveedit-tabs \" data-bs-toggle=\"dropdown\">${mw.lang('More')}</a>\r\n                                <div class=\"dropdown-menu\">\r\n\r\n                                </div>\r\n\r\n                        </li>\r\n\r\n                    `);\r\n\r\n\r\n\r\n                    dropdown.forEach(function (ctrl, index){\r\n\r\n                        mw.element('.dropdown-menu', dropdownEl)\r\n                            .append(mw.element({\r\n                                tag: 'span',\r\n                                props: {\r\n                                    className: 'dropdown-item',\r\n                                    __for: ctrl,\r\n                                    innerHTML: ('<i class=\"' + ctrl.controller.settings.icon + '\"></i> '+ctrl.controller.settings.title),\r\n                                    onclick: function () {\r\n                                         handleSelect(this.__for);\r\n                                        mw.element(dropdownEl).hide();\r\n                                    }\r\n                                }\r\n                            }));\r\n                    });\r\n                    this.nav.append(dropdownEl.get(0));\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        this.buildControllers = function (){\r\n            this.controllers = [];\r\n            this.settings.controllers.forEach(function (item) {\r\n                if(mw.UIFormControllers[item.type]) {\r\n                    var ctrl = new mw.UIFormControllers[item.type](item.config);\r\n                    scope.root.appendChild(ctrl.root);\r\n                    scope.controllers.push({\r\n                        type: item.type,\r\n                        controller: ctrl\r\n                    });\r\n                    ctrl.onConfirm(function (data){\r\n                        data = scope.cleanData(data);\r\n                        scope._confirm.forEach(function (f){\r\n                            f(data);\r\n                        });\r\n                    });\r\n                    ctrl.onCancel(function (){\r\n                        scope._cancel.forEach(function (f){\r\n                            f();\r\n                        });\r\n                    });\r\n                }\r\n\r\n            });\r\n        };\r\n        this.build = function (){\r\n            this.root = document.createElement('div');\r\n            this.root.setAttribute('x-data', '{}');\r\n            this.root.setAttribute('x-trap', 'true');\r\n            this.root.onclick = function (e) {\r\n                var le2 = mw.tools.firstParentOrCurrentWithAnyOfClasses(e.target, ['mw-link-editor-nav-drop-box', 'mw-link-editor-more-button']);\r\n                if(!le2) {\r\n                    mw.element('.mw-link-editor-nav-drop-box').hide();\r\n                }\r\n            };\r\n\r\n            this.root.className = 'mw-link-editor-root position-relative mw-link-editor-root-inIframe-' + (window.self !== window.top )\r\n\r\n            $(this.root).append('<span onclick=\"mw.dialog.get(this).remove()\" class=\"x-close-modal-link\"> <i class=\"mdi mdi-close\"></i>  </span>');\r\n\r\n            this.buildControllers ();\r\n            if(this.settings.mode === 'dialog') {\r\n                this.dialog = mw.top().dialog({\r\n                    content: this.root,\r\n                    width: 860,\r\n                    skin: 'default mw_modal_live_edit_link_editor_settings',\r\n                    height: 'auto',\r\n                    minHeight: 400,\r\n                    title: this.settings.title,\r\n                    overflowMode: 'visible',\r\n                    shadow: false,\r\n                });\r\n\r\n                this.dialog.center();\r\n                this.onConfirm(function (){\r\n                    scope.dialog.remove();\r\n                });\r\n                this.onCancel(function (){\r\n                    scope.dialog.remove();\r\n                });\r\n            } else if(this.settings.mode === 'element') {\r\n                this.settings.element.append(this.root);\r\n            }\r\n        };\r\n        this.init = function(options) {\r\n            this.build();\r\n            this.buildNavigation();\r\n        };\r\n        this.init();\r\n        this.promise = function () {\r\n            return new Promise(function (resolve){\r\n                scope.onConfirm(function (data){\r\n                    resolve(data);\r\n                });\r\n                scope.onCancel(function (){\r\n                    resolve();\r\n                });\r\n            });\r\n        };\r\n    };\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/link-editor.js?");

/***/ }),

/***/ "./resources/assets/components/modules-dialogs.js":
/*!********************************************************!*\
  !*** ./resources/assets/components/modules-dialogs.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SystemDialogsService: () => (/* binding */ SystemDialogsService)\n/* harmony export */ });\nconst  SystemDialogsService = {\n        moduleFrame: function(type, params, autoHeight){\n            if(typeof autoHeight === 'undefined') {\n                autoHeight = true;\n            }\n            params = params || {};\n            if(!type) return;\n\n            var frame = document.createElement('iframe');\n            frame.className = 'mw-editor-frame';\n            frame.allow = 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture';\n            frame.allowFullscreen = true;\n            frame.scrolling = \"auto\";\n            frame.width = \"100%\";\n            frame.frameBorder = \"0\";\n\n             frame.src = route('live_edit.module_settings') + '?type=' + type + '&params=' + $.param(params).split('&').join(',');\n            if(autoHeight) {\n                mw.tools.iframeAutoHeight(frame)\n            }\n            return frame;\n        },\n          confirm_reset_module_by_id: function (module_id, cb, customHtml) {\n\n              var html = '<div class=\"\">' +\n                  '<h4 class=\"\">' +  mw.lang('Are you sure you want to reset this module ?') +  '</h4>' +\n                  '<div class=\"\">' +\n                  '<br>' + mw.lang('You will delete all settings of the module !') +\n                  '<br>' + mw.lang('This operation cannot be undone !') +\n                  '</div>' +\n                  '</div>';\n\n              if (customHtml) {\n                  html = customHtml;\n              }\n\n              mw.confirm(html, function () {\n\n                      var is_a_preset = mw.$('#'+module_id).attr('data-module-original-id');\n                      var is_a_preset_attrs = mw.$('#'+module_id).attr('data-module-original-attrs');\n                      if(is_a_preset){\n                          var orig_attrs_decoded = JSON.parse(window.atob(is_a_preset_attrs));\n                          if (orig_attrs_decoded) {\n                              mw.$('#'+module_id).removeAttr('data-module-original-id');\n                              mw.$('#'+module_id).removeAttr('data-module-original-attrs');\n                              mw.$('#'+module_id).removeAttr('data-module-original-attrs');\n                              mw.$('#'+module_id).attr(orig_attrs_decoded).reload_module();\n\n                              if(  mw.top().win.module_settings_modal_reference_preset_editor_thismodal ){\n                                  mw.top().win.module_settings_modal_reference_preset_editor_thismodal.remove();\n                              }\n                          }\n                          return;\n                      }\n                      mw.$('#'+module_id).removeAttr('data-module-id-from-preset');\n\n                      var data = {};\n                      data.modules_ids = [module_id];\n\n                      var childs_arr = [];\n                      mw.$('#'+module_id).andSelf().find('.edit').each(function (i) {\n                          var some_child = {};\n                          mw.tools.removeClass(this, 'changed')\n                          some_child.rel = mw.$(this).attr('rel');\n                          some_child.field = mw.$(this).attr('field');\n                          childs_arr.push(some_child);\n                      });\n\n\n                      mw.$('#'+module_id).andSelf().find('.module').each(function (i) {\n\n                          var some_child = mw.$(this).attr('id');\n\n                          data.modules_ids.push(some_child);\n\n                      });\n\n                      window.mw.on.DOMChangePause = true;\n                      var done = 0, alldone = 1;\n\n                      if (childs_arr.length) {\n                          alldone++;\n                          $.ajax({\n                              type: \"POST\",\n                              // dataType: \"json\",\n                              //processData: false,\n                              url: mw.settings.api_url + \"content/reset_edit\",\n                              data: {reset:childs_arr}\n                              //  success: success,\n                              //  dataType: dataType\n                          }).always(function (){\n                              done++;\n                              if(done === alldone) {\n                                  if(cb){\n                                      cb.call()\n                                  }\n                              }\n                          });\n                      }\n\n\n                      //data-module-original-attrs\n\n                      $.ajax({\n                          type: \"POST\",\n                          // dataType: \"json\",\n                          //processData: false,\n                          url: mw.settings.api_url + \"content/reset_modules_settings\",\n                          data: data,\n                          success: function(){\n\n                              setTimeout(function () {\n\n\n                                  mw.$('#'+module_id).removeAttr('data-module-original-id');\n                                  mw.reload_module('#'+module_id);\n                                  window.mw.on.DOMChangePause = false;\n\n                              }, 1000);\n                              done++;\n                              if(done === alldone) {\n                                  if(cb){\n                                      cb.call()\n                                  }\n                              }\n\n                          },\n                      });\n\n\n              });\n\n\n    },\n    open_reset_content_editor: function (root_element_id) {\n\n\n\n        var moduleType = 'editor/reset_content';\n        var attrsForSettings = {};\n\n        attrsForSettings.live_edit = true;\n        attrsForSettings.module_settings = true;\n        attrsForSettings.id = 'mw_global_reset_content_editor';\n        attrsForSettings.type = moduleType;\n        attrsForSettings.iframe = true;\n        attrsForSettings.from_url = mw.app.canvas.getWindow().location.href;\n\n\n        var src = route('live_edit.module_settings') + \"?\" + json2url(attrsForSettings);\n\n\n\n       // var src = mw.settings.site_url + 'api/module?id=mw_global_reset_content_editor&live_edit=true&module_settings=true&type=editor/reset_content&autosize=true';\n\n        if(typeof(root_element_id) != 'undefined') {\n            var src = src + '&root_element_id='+root_element_id;\n        }\n\n        // mw.dialogIframe({\n        var modal = mw.dialogIframe({\n            url: src,\n            // width: 500,\n            // height: mw.$(window).height() - (2.5 * mw.tools.TemplateSettingsModalDefaults.top),\n            name: 'mw-reset-content-editor-front',\n            title: 'Reset content',\n            template: 'default',\n            center: false,\n            resize: true,\n            autosize: true,\n            autoHeight: true,\n            draggable: true\n        });\n    },\n    open_global_module_settings_modal: function (module_type, module_id, modalOptions, additional_params) {\n\n\n        var params = {};\n        params.id = module_id;\n        params.live_edit = true;\n        params.iframe = true;\n        params.module_settings = true;\n        params.type = module_type;\n        params.autosize = false;\n\n        var params_url = $.extend({}, params, additional_params);\n\n    //    var src = mw.settings.site_url + \"api/module?\" + json2url(params_url);\n        var src =  route('live_edit.module_settings') + '?' + json2url(params_url);\n\n\n        modalOptions = modalOptions || {};\n\n        var defaultOpts = {\n            url: src,\n            // width: 500,\n            height: 'auto',\n            autoHeight: true,\n            name: 'mw-module-settings-editor-front',\n            title: 'Settings',\n            template: 'default',\n            center: false,\n            resize: true,\n            draggable: true\n        };\n\n        var settings = $.extend({}, defaultOpts, modalOptions);\n\n        // return mw.dialogIframe(settings);\n        return mw.top().dialogIframe(settings);\n    },\n    open_module_modal: function (module_type, params, modalOptions) {\n\n        var id = mw.id('module-modal-');\n        var id_content = id + '-content';\n        modalOptions = modalOptions || {};\n\n        var settings = $.extend({}, {\n            content: '<div class=\"module-modal-content\" id=\"' + id_content + '\"></div>',\n            id: id\n        }, modalOptions, {skin: 'default'});\n\n        var xhr = false;\n        var openiframe = false;\n        if (typeof (settings.iframe) != 'undefined' && settings.iframe) {\n            openiframe = true;\n        }\n        if (openiframe) {\n\n            var additional_params = {};\n            additional_params.type = module_type;\n            var params_url = $.extend({}, params, additional_params);\n\n            var src =  route('live_edit.module_settings') + '?' + json2url(params_url);\n\n\n            var settings = {\n                url: src,\n                name: 'mw-module-settings-editor-front',\n                title: 'Settings',\n                center: false,\n                resize: true,\n                draggable: true,\n                height:'auto',\n                autoHeight: true\n            };\n            return mw.top().dialogIframe(settings);\n\n        } else {\n            delete settings.skin;\n            delete settings.template;\n            if(!settings.height){\n            settings.height = 'auto';\n            settings.autoHeight = true;\n            }\n\n            settings.encapsulate = false;\n            var modal = mw.dialog(settings);\n            xhr = mw.load_module(module_type, '#' + id_content, function(){\n                setTimeout(function(){\n                    modal.center();\n                },333)\n            }, params);\n        }\n\n\n        return {\n            xhr: xhr,\n            modal: modal,\n        }\n    }\n    };\n\n\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/modules-dialogs.js?");

/***/ }),

/***/ "./resources/assets/components/notification.js":
/*!*****************************************************!*\
  !*** ./resources/assets/components/notification.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n;(function(){\r\n\r\nvar defaultTimeout = 5000;\r\n\r\nvar targetWindow = window.top;\r\nvar targetDocument = window.top.document;\r\n\r\nvar errorsHandlePrev = [];\r\nmw.errorsHandle = function (obj) {\r\n    while (errorsHandlePrev.length) {\r\n        errorsHandlePrev[errorsHandlePrev.length-1].remove();\r\n        errorsHandlePrev.pop();\r\n    }\r\n\r\n    if(!obj) return;\r\n    if(obj.status === 401) {\r\n\r\n        mw.session.checkPause = false;\r\n        mw.session.checkPauseExplicitly = false;\r\n        mw.session.logRequest();\r\n\r\n    }\r\n    obj.errors = obj.errors || obj.form_errors;\r\n    if(!obj.errors) {\r\n        $('.invalid-feedback', targetDocument).hide();\r\n        $('.valid-feedback', targetDocument).hide();\r\n    }\r\n    if(obj.errors) {\r\n        var html = [];\r\n        for (var key in obj.errors) {\r\n            var bsel = $('.custom-file-input[name=\"' + key + '\"], .form-control[name=\"' + key + '\"]').last()[0]\r\n            if(!bsel) {\r\n                var err = obj.errors[key].map ? obj.errors[key][0] : obj.errors[key];\r\n                html.push(err);\r\n            } else if ( bsel ) {\r\n                var next = bsel.nextElementSibling;\r\n                if (!next || !next.classList.contains('invalid-feedback')) {\r\n                    next = targetDocument.createElement('div');\r\n                    next.classList.add('invalid-feedback');\r\n                    bsel.parentNode.insertBefore(next, bsel.nextSibling);\r\n                    errorsHandlePrev.push(next);\r\n                }\r\n                next.style.display = 'block';\r\n\r\n                $(next, targetDocument).css('display','block');\r\n                next.innerHTML = obj.errors[key];\r\n            }\r\n        }\r\n        if (html.length) {\r\n\r\n            mw.notification.warning(html.join('<br>'))\r\n        }\r\n    }\r\n    if (obj.errors && obj.message) {\r\n        mw.notification.warning(obj.message);\r\n    }\r\n};\r\nmw.notification = {\r\n    msg: function (data, timeout, alert) {\r\n        timeout = timeout || defaultTimeout;\r\n        alert = alert || false;\r\n        if (data) {\r\n\r\n            if(data.status) {\r\n                if(data.responseJSON && data.responseJSON.message) {\r\n                    var conf = {};\r\n                    if(data.status === 200) {\r\n                        conf.success = data.responseJSON.message || data.statusText;\r\n                    } else {\r\n                        conf.warning = data.responseJSON.message || data.statusText;\r\n                    }\r\n                    mw.notification.msg(conf, timeout, alert);\r\n\r\n                }\r\n\r\n            } else if (data.success) {\r\n                if (alert) {\r\n                    mw.notification.success(data.success, timeout);\r\n                }\r\n                else {\r\n                    mw.alert(data.success);\r\n                }\r\n            } else if (data.error) {\r\n                mw.notification.error(data.error, timeout);\r\n            } else if (data.warning) {\r\n                mw.notification.warning(data.warning, timeout);\r\n            }\r\n        }\r\n    },\r\n    build: function (type, text, name) {\r\n        var div = targetDocument.createElement('div');\r\n        div.id = name;\r\n        div.className = 'mw-notification mw-' + type;\r\n        div.innerHTML = '<div>' + text + '</div>';\r\n        return div;\r\n    },\r\n    append: function (type, text, timeout, name) {\r\n\r\n        if(typeof type === 'object') {\r\n            text = type.text;\r\n            timeout = type.timeout;\r\n            name = type.name;\r\n            type = type.type;\r\n        }\r\n\r\n\r\n        var closeBtn = `\r\n            <button style=\"--c-300:var(--gray-300);--c-400:var(--gray-400);--c-500:var(--gray-500);--c-600:var(--gray-600);\" class=\"fi-icon-btn relative flex items-center justify-center rounded-lg outline-none transition duration-75 focus-visible:ring-2 -m-2 h-9 w-9 text-gray-400 hover:text-gray-500 focus-visible:ring-primary-600 dark:text-gray-500 dark:hover:text-gray-400 dark:focus-visible:ring-primary-500 fi-color-gray fi-no-notification-close-btn\" type=\"button\"  >\r\n                <svg class=\"fi-icon-btn-icon h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\r\n                    <path d=\"M6.28 5.22a.75.75 0 0 0-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 1 0 1.06 1.06L10 11.06l3.72 3.72a.75.75 0 1 0 1.06-1.06L11.06 10l3.72-3.72a.75.75 0 0 0-1.06-1.06L10 8.94 6.28 5.22Z\"></path>\r\n                </svg>\r\n            </button>\r\n        `;\r\n\r\n        var tpl = `\r\n\r\n        <div class=\"mw-notification\">\r\n            <div class=\"  align-items-center text-bg-${type} border-0\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n                <div class=\"flex items-center justify-between\">\r\n                    <div>\r\n                        ${text}\r\n                    </div>\r\n                    ${closeBtn}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        `;\r\n        var last = $('.mw-notification', targetDocument).last();\r\n        if(last.length) {\r\n            var btm = parseFloat(last.css('top'));\r\n\r\n            if(isNaN(btm)) {\r\n                btm = 0;\r\n            }\r\n            btm += last.outerHeight();\r\n        }\r\n\r\n        tpl = $(tpl, targetDocument).appendTo(targetDocument.body);\r\n        tpl.css('top', btm);\r\n        tpl.find('button').on('click', function () {\r\n            tpl.remove()\r\n        })\r\n\r\n\r\n        setTimeout(function () {\r\n            tpl.remove()\r\n        }, timeout)\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n    success: function (text, timeout, name) {\r\n        if ( typeof text === 'object' ) {\r\n            timeout = text.timeout;\r\n            name = text.name;\r\n            text = text.text;\r\n        }\r\n        timeout = timeout || defaultTimeout;\r\n        mw.notification.append('success', text, timeout, name);\r\n    },\r\n    error: function (text, timeout, name) {\r\n        if ( typeof text === 'object' ) {\r\n            timeout = text.timeout;\r\n            name = text.name;\r\n            text = text.text;\r\n        }\r\n        timeout = timeout || defaultTimeout;\r\n        mw.notification.append('danger', text, timeout, name);\r\n    },\r\n    warning: function (text, timeout, name) {\r\n        if ( typeof text === 'object' ) {\r\n            timeout = text.timeout;\r\n            name = text.name;\r\n            text = text.text;\r\n        }\r\n        timeout = timeout || defaultTimeout;\r\n        mw.notification.append('warning', text, timeout, name);\r\n    }\r\n};\r\n\r\n\r\n})();\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/notification.js?");

/***/ }),

/***/ "./resources/assets/components/schema-form.js":
/*!****************************************************!*\
  !*** ./resources/assets/components/schema-form.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemaForm: () => (/* binding */ SchemaForm)\n/* harmony export */ });\n/* harmony import */ var _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../containers/base-class.js */ \"./resources/assets/containers/base-class.js\");\n\r\n\r\n\r\nclass FieldBaseClass extends _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #value = null;\r\n\r\n    $setValue(value, dispatch = true) {\r\n        if(value === this.#value) {\r\n            return this;\r\n        }\r\n        this.#value = value;\r\n        this.dispatch('$change', this.#value);\r\n        if(dispatch) {\r\n            this.dispatch('change', this.#value);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getValue() {\r\n        return this.#value\r\n    }\r\n}\r\n\r\n\r\nclass Select extends FieldBaseClass {\r\n    constructor(options = {}) {\r\n        super();\r\n        const defaults = {\r\n            id: mw.id(`field-`),\r\n            name: mw.id(`field-name-`),\r\n            value: '',\r\n            label: '',\r\n            placeholder: '',\r\n            options: [\r\n                // {value: 1, title: 'Option 1'},\r\n            ],\r\n\r\n\r\n        }\r\n        this.settings = Object.assign({}, defaults, options)\r\n    }\r\n\r\n    setValue(value, dispatch) {\r\n        this.select.value = value;\r\n        this.$setValue(value, dispatch);\r\n    }\r\n\r\n    onRendered() {\r\n        this.select.addEventListener('input', e => {\r\n            this.$setValue(this.select.value);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return `\r\n        <div>\r\n            <label class=\"form-label\" for=\"${this.settings.id}\">${this.settings.label}</label>\r\n            <select\r\n                ref=\"select\"\r\n                type=\"text\"\r\n                class=\"form-select\"\r\n                id=\"${this.settings.id}\"\r\n                name=\"${this.settings.name}\"\r\n                ${this.settings.placeholder ? ` placeholder=\"${this.settings.placeholder}\" ` : ``}\r\n                ${this.settings.required ? `  required ` : ``}\r\n                >\r\n                ${this.settings.placeholder ? ` <option selected disabled>${this.settings.placeholder} ` : ``}\r\n\r\n                ${this.settings.options.map(obj => `<option ${obj.value == this.settings.value ? ' selected ' : ''} value=\"${obj.value}\">${obj.title}</option>`).join('')}\r\n            </select>\r\n        </div>\r\n        `;\r\n    }\r\n}\r\n\r\nclass Checkbox extends FieldBaseClass {\r\n    constructor(options = {}) {\r\n        super();\r\n        const defaults = {\r\n            id: mw.id(`field-`),\r\n            name: mw.id(`field-name-`),\r\n            value: [1, 2],\r\n            label: '',\r\n\r\n            options: [\r\n                // {value: 1, title: 'Option 1'},\r\n                // {value: 2, title: 'Option 2'},\r\n            ],\r\n\r\n\r\n        }\r\n        this.settings = Object.assign({}, defaults, options)\r\n    }\r\n\r\n    setValue(value, dispatch) {\r\n        const fields = this.checkboxList.querySelectorAll('input');\r\n        for (let i = 0; i < value.length; i++) {\r\n            for (let i2 = 0; i2 < fields.length; i2++) {\r\n                fields[i].checked = fields[i].value == value[i]\r\n            }\r\n        }\r\n\r\n        this.$setValue(value, dispatch);\r\n    }\r\n    syncValue() {\r\n        const value = [];\r\n        const fields = this.checkboxList.querySelectorAll('input');\r\n        for (let i = 0; i < fields.length; i++) {\r\n            if(fields[i].checked) {\r\n                value.push(fields[i].value);\r\n            }\r\n        }\r\n        this.$setValue(value, true);\r\n    }\r\n\r\n    onRendered() {\r\n        this.checkboxList.querySelectorAll('input').forEach(node => {\r\n            node.addEventListener('input', e => {\r\n                this.syncValue()\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return `\r\n        <div>\r\n            <label class=\"form-label\">${this.settings.label}</label>\r\n            <div ref=\"checkboxList\">\r\n                ${this.settings.options.map(obj => {\r\n                    const id = mw.id(`field-`)\r\n                    return `\r\n                        <div class=\"form-check\">\r\n                            <input\r\n                                class=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                value=\"${obj.value}\"\r\n                                id=\"${id}\"\r\n                                ${obj.value == this.settings.value ? ' checked ' : ''}>\r\n                            <label class=\"form-check-label\" for=\"${id}\" >\r\n                                ${obj.title}\r\n                            </label>\r\n                        </div>`\r\n                }).join('')}\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n}\r\n\r\nclass Text extends FieldBaseClass {\r\n    constructor(options = {}) {\r\n        super();\r\n        const defaults = {\r\n            id: mw.id(`field-`),\r\n            name: mw.id(`field-name-`),\r\n            value: '',\r\n            label: '',\r\n            placeholder: '',\r\n\r\n        }\r\n        this.settings = Object.assign({}, defaults, options)\r\n    }\r\n\r\n    setValue(value, dispatch) {\r\n        this.field.value = value;\r\n        this.$setValue(value, dispatch);\r\n    }\r\n\r\n    onRendered() {\r\n        this.field.addEventListener('input', e => {\r\n            this.$setValue(this.field.value);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return `\r\n        <div>\r\n            <label class=\"form-label\" for=\"${this.settings.id}\">${this.settings.label}</label>\r\n            <input\r\n                type=\"text\"\r\n                ref=\"field\"\r\n                class=\"form-control\"\r\n                id=\"${this.settings.id}\"\r\n                name=\"${this.settings.name}\"\r\n                ${this.settings.placeholder ? ` placeholder=\"${this.settings.placeholder}\" ` : ``}\r\n                ${this.settings.required ? `  required ` : ``}\r\n                >\r\n        </div>`;\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Email extends FieldBaseClass {\r\n\r\n    constructor(options = {}) {\r\n        super();\r\n        const defaults = {\r\n            id: mw.id(`field-`),\r\n            name: mw.id(`field-name-`),\r\n            value: '',\r\n            label: '',\r\n            placeholder: '',\r\n\r\n        }\r\n        this.settings = Object.assign({}, defaults, options)\r\n    }\r\n\r\n    setValue(value, dispatch) {\r\n        this.field.value = value;\r\n        this.$setValue(value, dispatch);\r\n    }\r\n\r\n    onRendered() {\r\n        this.field.addEventListener('input', e => {\r\n            this.$setValue(this.field.value);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return `\r\n            <div>\r\n                <label class=\"form-label\" for=\"${this.settings.id}\">${this.settings.label}</label>\r\n                <input\r\n                    ref=\"field\"\r\n                    type=\"email\"\r\n                    class=\"form-control\"\r\n                    id=\"${this.settings.id}\"\r\n                    name=\"${this.settings.name}\"\r\n                    ${this.settings.placeholder ? ` placeholder=\"${this.settings.placeholder}\" ` : ``}\r\n                    ${this.settings.value ? ` value=\"${this.settings.value}\" ` : ``}\r\n                    ${this.settings.required ? `  required ` : ``}\r\n                >\r\n            </div>\r\n        `;\r\n    }\r\n}\r\n\r\n\r\nconst types = {\r\n    text: Text,\r\n    email: Email,\r\n    select: Select,\r\n    checkbox: Checkbox,\r\n}\r\n\r\nclass SchemaForm extends _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(options = {}) {\r\n        super();\r\n\r\n        const defaults = {\r\n            data: [],\r\n            target: null\r\n        }\r\n        this.settings = Object.assign({}, defaults, options);\r\n        this.fields = [];\r\n        this.root = document.createElement(\"div\");\r\n        this.render();\r\n    }\r\n\r\n    getValue() {\r\n\r\n        return this.fields.map(field => {\r\n            return {\r\n                name: field.name,\r\n                value: field.getValue(),\r\n            }\r\n        })\r\n    }\r\n\r\n    setValue(value, dispatch) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const field = this.getFieldByName(value[i].name);\r\n            if(field) {\r\n                field.setValue(value[i].value, dispatch);\r\n            }\r\n        }\r\n    }\r\n\r\n    getFieldByName(name) {\r\n        return this.fields.find(field => field.name === name);\r\n    }\r\n\r\n    renderSingle(curr) {\r\n        const field = new types[curr.type](curr);\r\n        field.name = curr.name;\r\n        const node = mw.element(field.render());\r\n        this.root.appendChild(node.get(0));\r\n\r\n        const refs = node.get(0).querySelectorAll('[ref]');\r\n        for (let i = 0; i < refs.length; i++) {\r\n            field[refs[i].getAttribute('ref')] = refs[i]\r\n        }\r\n\r\n        if(field.onRendered) {\r\n            field.onRendered()\r\n        }\r\n        field.on('change', val => {\r\n            this.dispatch('change', this.getValue());\r\n        })\r\n        this.fields.push(field);\r\n    }\r\n\r\n    render() {\r\n        this.root.innerHTML = '';\r\n        this.fields = [];\r\n        for (let i = 0; i < this.settings.data.length; i++) {\r\n            const curr = this.settings.data[i];\r\n            if(curr.type && types.hasOwnProperty(curr.type)) {\r\n                this.renderSingle(curr);\r\n            }\r\n        }\r\n        if(typeof this.settings.target === \"string\") {\r\n            this.settings.target = document.querySelector(this.settings.target);\r\n        }\r\n        if(this.settings.target) {\r\n\r\n            this.settings.target.appendChild(this.root);\r\n        }\r\n        this.setValue(this.settings.data, false);\r\n        this.dispatch('ready', this.getValue());\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/schema-form.js?");

/***/ }),

/***/ "./resources/assets/components/select.js":
/*!***********************************************!*\
  !*** ./resources/assets/components/select.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/*\r\n    options.data = [\r\n        {\r\n            title: string,\r\n            value: any,\r\n            icon?: string,\r\n            selected?: boolean\r\n        }\r\n    ]\r\n\r\n */\r\n\r\n\r\n\r\n\r\nmw.Select = function(options) {\r\n    var defaults = {\r\n        data: [],\r\n        skin: 'default',\r\n        multiple: false,\r\n        autocomplete: false,\r\n        mobileAutocomplete: false,\r\n        showSelected: false,\r\n        document: document,\r\n        size: 'normal',\r\n        color: 'default',\r\n        dropMode: 'over', // 'over' | 'push'\r\n        placeholder: mw.lang('Select'),\r\n        tags: false, // only if multiple is set to true,\r\n        ajaxMode: {\r\n            paginationParam: 'page',\r\n            searchParam: 'keyword',\r\n            endpoint: null,\r\n            method: 'get'\r\n        }\r\n    };\r\n    options  = options || {};\r\n    this.settings = $.extend({}, defaults, options);\r\n\r\n    var _e = {};\r\n    this.on = function (e, f) { _e[e] ? _e[e].push(f) : (_e[e] = [f]); return this; };\r\n    this.dispatch = function (e, f) { _e[e] ? _e[e].forEach(function (c){ c.call(this, f); }) : ''; return this; };\r\n\r\n    if(this.settings.ajaxMode && !this.settings.ajaxMode.endpoint){\r\n        this.settings.ajaxMode = false;\r\n    }\r\n\r\n    this.$element = $(this.settings.element).eq(0);\r\n    this.element = this.$element[0];\r\n\r\n    if(!this.element) {\r\n        return;\r\n    }\r\n\r\n    this._rootInputMode = this.element.nodeName === 'INPUT';\r\n\r\n    if(this.element._mwSelect) {\r\n        return this.element._mwSelect;\r\n    }\r\n\r\n    var scope = this;\r\n    this.document = this.settings.document;\r\n\r\n    this._value = null;\r\n\r\n\r\n    this.getLabel = function(item) {\r\n        return item.title || item.name || item.label || item.value;\r\n    };\r\n\r\n    this._loading = false;\r\n\r\n    this._page = 1;\r\n\r\n    this.nextPage = function () {\r\n        this._page++;\r\n    };\r\n\r\n    this.page = function (state) {\r\n        if (typeof state === 'undefined') {\r\n            return this._page;\r\n        }\r\n        this._page = state;\r\n    };\r\n\r\n    this.loading = function (state) {\r\n        if (typeof state === 'undefined') {\r\n            return this._state;\r\n        }\r\n        this._state = state;\r\n        mw.tools.classNamespaceDelete(this.root, 'mw-select-loading-');\r\n        mw.tools.addClass(this.root, 'mw-select-loading-' + state);\r\n    };\r\n\r\n    this.xhr = null;\r\n\r\n    this.ajaxFilter = function (val, callback) {\r\n        if (this.xhr) {\r\n            this.xhr.abort();\r\n        }\r\n        val = (val || '').trim().toLowerCase();\r\n        var params = { };\r\n        params[this.settings.ajaxMode.searchParam] = val;\r\n        params = (this.settings.ajaxMode.endpoint.indexOf('?') === -1 ? '?' : '&' ) + $.param(params);\r\n        this.xhr = $[this.settings.ajaxMode.method](this.settings.ajaxMode.endpoint + params, function (data) {\r\n            callback.call(this, data);\r\n            scope.xhr = null;\r\n        });\r\n    };\r\n\r\n    this._disabled = false;\r\n\r\n    this.disable = () => {\r\n        this._disabled = true;\r\n        this.root.classList.add('disabled');\r\n    }\r\n\r\n    this.enable = () => {\r\n        this._disabled = false;\r\n        this.root.classList.remove('disabled');\r\n    }\r\n\r\n    this.disabled = (state) => {\r\n        if(typeof state === \"undefined\") {\r\n            return this._disabled;\r\n        }\r\n        if(state === true) {\r\n            this.disable();\r\n        } else if(state === false) {\r\n            this.enable();\r\n        }\r\n    }\r\n\r\n    this.enabled = (state) => {\r\n        if(typeof state === \"undefined\") {\r\n            return !this._disabled;\r\n        }\r\n        if(state === false) {\r\n            this.disable();\r\n        } else if(state === true) {\r\n            this.enable();\r\n        }\r\n    }\r\n\r\n    this.filter = function (val) {\r\n        val = (val || '').trim().toLowerCase();\r\n        if (this.settings.ajaxMode) {\r\n            this.loading(true);\r\n            this.ajaxFilter(val, function (data) {\r\n                scope.setData(data.data);\r\n                if(data.data && data.data.length){\r\n                    scope.open();\r\n                } else {\r\n                    scope.close();\r\n                }\r\n                scope.loading(false);\r\n            });\r\n        } else {\r\n            var all = this.root.querySelectorAll('.mw-select-option'), i = 0;\r\n            if (!val) {\r\n                for( ; i< all.length; i++) {\r\n                    all[i].style.display = '';\r\n                }\r\n            } else {\r\n                for( ; i< all.length; i++) {\r\n                    all[i].style.display = this.getLabel(all[i].$value).toLowerCase().indexOf(val) !== -1 ? '' : 'none';\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.setPlaceholder = function (plval) {\r\n        /*plval = plval || this.settings.placeholder;\r\n        if(scope.settings.autocomplete){\r\n            $('.mw-ui-invisible-field', this.root).attr('placeholder', plval);\r\n        } else {\r\n            $('.mw-ui-btn-content', this.root).html(plval);\r\n        }*/\r\n        return this.displayValue(plval)\r\n    };\r\n    this.displayValue = function(plval){\r\n        if(typeof plval === 'undefined' && !this.settings.multiple && this.value()) {\r\n            plval = scope.getLabel(this.value());\r\n        }\r\n        plval = typeof plval === 'undefined' ? this.settings.placeholder : plval;\r\n        if(!scope._displayValue) {\r\n            scope._displayValue = scope.document.createElement('span');\r\n            scope._displayValue.className = 'mw-select-display-value mw-ui-size-' + this.settings.size;\r\n            $('.mw-select-value', this.root).append(scope._displayValue);\r\n        }\r\n        if(this._rootInputMode){\r\n            scope._displayValue.innerHTML = '&nbsp';\r\n            $('input.mw-ui-invisible-field', this.root).val(plval);\r\n\r\n        } else {\r\n            scope._displayValue.innerHTML = plval + this.__indicateNumber();\r\n\r\n        }\r\n    };\r\n\r\n    this.__indicateNumber = function () {\r\n        if(this.settings.multiple && this.value() && this.value().length){\r\n            return \"<span class='mw-select-indicate-number'>\" + this.value().length + \"</span>\";\r\n        } else {\r\n            return \"<span class='mw-select-indicate-number mw-select-indicate-number-empty'>\" + 0 + \"</span>\";\r\n        }\r\n    };\r\n\r\n    this.rend = {\r\n\r\n        option: function(item){\r\n            var oh = scope.document.createElement('label');\r\n            oh.$value = item;\r\n            oh.className = 'mw-select-option';\r\n            if (scope.settings.multiple) {\r\n                oh.className = 'mw-ui-check mw-select-option';\r\n                oh.innerHTML =  '<input type=\"checkbox\"><span></span><span>'+scope.getLabel(item)+'</span>';\r\n\r\n                $('input', oh).on('change', function () {\r\n                    this.checked ? scope.valueAdd(oh.$value) : scope.valueRemove(oh.$value)\r\n                });\r\n            } else {\r\n                oh.innerHTML = scope.getLabel(item);\r\n                oh.onclick = function () {\r\n                    scope.value(oh.$value)\r\n                };\r\n            }\r\n            return oh;\r\n        },\r\n        value: function() {\r\n            var tag = 'span', cls = 'btn form-select';\r\n            if(scope.settings.autocomplete){\r\n                tag = 'span';\r\n                cls = 'mw-ui-field';\r\n            }\r\n            var oh = scope.document.createElement(tag);\r\n            oh.className = cls + 'btn-' + scope.settings.size + ' mw-ui-bg-' + scope.settings.color + ' mw-select-value';\r\n\r\n            if(scope.settings.autocomplete){\r\n                oh.innerHTML = '<input type=\"text\" class=\"mw-ui-invisible-field mw-ui-field-' + scope.settings.size + '\">';\r\n            } else {\r\n                oh.innerHTML = '<span class=\"mw-ui-btn-content\"></span>';\r\n            }\r\n\r\n            if(scope.settings.autocomplete){\r\n                $('input', oh)\r\n                    .on('input focus', function (e) {\r\n                        scope.filter(this.value);\r\n                        if(scope._rootInputMode) {\r\n                            scope.element.value = this.value;\r\n\r\n                        }\r\n                    })\r\n                    .on('keydown', function (e) {\r\n                        if(mw.event.is.enter(e) || mw.event.is.comma(e)) {\r\n                            e.preventDefault();\r\n                            $(scope).trigger('enterOrComma', [this, e]);\r\n                            $(this).val('adsadasd')\r\n                        }\r\n                    })\r\n                    .on('focus', function () {\r\n                        if(scope.settings.data && scope.settings.data.length) {\r\n                            scope.open();\r\n                        }\r\n                    }).on('focus blur input', function () {\r\n                    var hasVal = !!this.value.trim();\r\n                    mw.tools[hasVal ? 'addClass' : 'removeClass'](scope.root, 'mw-select-has-value')\r\n                });\r\n            } else {\r\n                oh.onclick = function () {\r\n                    scope.toggle();\r\n                };\r\n            }\r\n            return oh;\r\n        },\r\n        options: function(){\r\n            scope.optionsHolder = scope.document.createElement('div');\r\n            scope.holder = scope.document.createElement('div');\r\n            scope.optionsHolder.className = 'mw-select-options';\r\n            var options = [];\r\n            $.each(scope.settings.data, function(){\r\n                var opt = scope.rend.option(this);\r\n                options.push(opt);\r\n                scope.holder.appendChild(opt);\r\n            });\r\n            scope.optionsHolder.appendChild(scope.holder);\r\n\r\n            setTimeout(function (){\r\n                scope.dispatch('optionsReady', options)\r\n            }, 10)\r\n\r\n            return scope.optionsHolder;\r\n        },\r\n        root: function () {\r\n            scope.root = scope.document.createElement('div');\r\n            scope.root.className = 'mw-select mw-select-dropmode-' + scope.settings.dropMode + ' mw-select-multiple-' + scope.settings.multiple;\r\n\r\n            return scope.root;\r\n        }\r\n    };\r\n\r\n    this.state = 'closed';\r\n\r\n    this.open = function () {\r\n        this.state = 'opened';\r\n        mw.tools.addClass(scope.root, 'active');\r\n        mw.Select._register.forEach(function (item) {\r\n            if(item !== scope) {\r\n                item.close()\r\n            }\r\n        });\r\n    };\r\n\r\n    this.close = function () {\r\n        this.state = 'closed';\r\n        mw.tools.removeClass(scope.root, 'active');\r\n    };\r\n\r\n    this.tags = function () {\r\n        if(!this._tags) {\r\n            if(this.settings.multiple && this.settings.tags) {\r\n                var holder = scope.document.createElement('div');\r\n                holder.className = 'mw-select-tags';\r\n                this._tags = new mw.tags({element:holder, data:scope._value || [], color: this.settings.tagsColor, size: this.settings.tagsSize || 'small'})\r\n                $(this.optionsHolder).prepend(holder);\r\n                mw.$(this._tags).on('tagRemoved', function (e, tag) {\r\n                    scope.valueRemove(tag)\r\n                })\r\n            }\r\n        } else {\r\n            this._tags.setData(scope._value)\r\n        }\r\n        this.displayValue()\r\n    };\r\n\r\n\r\n    this.toggle = function () {\r\n        if (this.state === 'closed') {\r\n            this.open();\r\n        } else {\r\n            this.close();\r\n        }\r\n    };\r\n\r\n\r\n    this._valueGet = function (val) {\r\n        if(typeof val === 'number') {\r\n            val = this.settings.data.find(function (item) {\r\n                return item.id === val;\r\n            })\r\n        }\r\n        return val;\r\n    };\r\n\r\n\r\n\r\n    this.valueAdd = function(val){\r\n        if (!val) return;\r\n        val = this._valueGet(val);\r\n        if (!val) return;\r\n        if (!this._value) {\r\n            this._value = []\r\n        }\r\n        var exists = this._value.find(function (item) {\r\n            return item.id === val.id;\r\n        });\r\n        if (!exists) {\r\n            this._value.push(val);\r\n            $(this.root.querySelectorAll('.mw-select-option')).each(function () {\r\n                if(this.$value === val) {\r\n                    this.querySelector('input').checked = true;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.afterChange();\r\n    };\r\n\r\n    this.afterChange = function () {\r\n        this.tags();\r\n        this.displayValue();\r\n        if($.isArray(this._value)) {\r\n            $.each(this._value, function () {\r\n\r\n            });\r\n            $(this.root.querySelectorAll('.mw-select-option')).each(function () {\r\n                if(scope._value.indexOf(this.$value) !== -1) {\r\n                    mw.tools.addClass(this, 'active')\r\n                }\r\n                else {\r\n                    mw.tools.removeClass(this, 'active')\r\n                }\r\n            });\r\n        }\r\n        $(this).trigger('change', [this._value]);\r\n        this.dispatch('change', [this._value])\r\n    };\r\n\r\n    this.valueRemove = function(val) {\r\n        if (!val) return;\r\n        val = this._valueGet(val);\r\n        if (!val) return;\r\n        if (!this._value) {\r\n            this._value = [];\r\n        }\r\n        var exists = this._value.find(function (item) {\r\n            return item.id === val.id;\r\n        });\r\n        if (exists) {\r\n            this._value.splice(this._value.indexOf(exists), 1);\r\n        }\r\n        $(this.root.querySelectorAll('.mw-select-option')).each(function () {\r\n            if(this.$value === val) {\r\n                this.querySelector('input').checked = false;\r\n            }\r\n        });\r\n        this.afterChange()\r\n    };\r\n\r\n    this._valueToggle = function(val){\r\n        if (!val) return;\r\n        if (!this._value) {\r\n            this._value = [];\r\n        }\r\n        var exists = this._value.find(function (item) {\r\n            return item.id === val.id;\r\n        });\r\n        if (exists) {\r\n            this._value.splice(this._value.indexOf(exists), 1);\r\n        } else {\r\n            this._value.push(val);\r\n        }\r\n        this.afterChange();\r\n    };\r\n\r\n    this.value = function(val){\r\n        if(!val) return this._value;\r\n        val = this._valueGet(val);\r\n        if (!val) return;\r\n        if(this.settings.multiple){\r\n            this._valueToggle(val)\r\n        }\r\n        else {\r\n            this._value = val;\r\n            $('.mw-ui-invisible-field', this.root).val(this.getLabel(val))\r\n            this.close();\r\n        }\r\n\r\n        this.afterChange()\r\n    };\r\n\r\n    this.setData = function (data) {\r\n        $(scope.holder).empty();\r\n        scope.settings.data = data;\r\n        var options = []\r\n        $.each(scope.settings.data, function(){\r\n            var opt = scope.rend.option(this)\r\n            options.push(opt)\r\n            scope.holder.appendChild(opt)\r\n        });\r\n        setTimeout(function (){\r\n            scope.dispatch('optionsReady', options)\r\n        }, 10)\r\n        return scope.holder;\r\n    };\r\n\r\n    this.addData = function (data) {\r\n        $.each(data, function(){\r\n            scope.settings.data.push(this);\r\n            scope.holder.appendChild(scope.rend.option(this));\r\n        });\r\n        return scope.holder;\r\n    };\r\n\r\n    this.build = function () {\r\n        this.rend.root();\r\n        this.root.appendChild(this.rend.value());\r\n        this.root.appendChild(this.rend.options());\r\n        if (this._rootInputMode) {\r\n            this.element.type = 'hidden';\r\n            this.$element.before(this.root);\r\n        } else {\r\n            this.$element.html(this.root);\r\n        }\r\n        this.setPlaceholder();\r\n        mw.Select._register.push(this);\r\n    };\r\n\r\n    this.init = function () {\r\n        this.build();\r\n        this.element._mwSelect = this;\r\n    };\r\n\r\n\r\n\r\n    this.init();\r\n\r\n\r\n};\r\n\r\nmw.Select._register = [];\r\n\r\n\r\n$(document).ready(function () {\r\n    $(document).on('mousedown touchstart', function (e) {\r\n        if(!mw.tools.firstParentOrCurrentWithClass(e.target, 'mw-select')){\r\n            mw.Select._register.forEach(function (item) {\r\n                item.close();\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n\r\nmw.select = function(options) {\r\n    return new mw.Select(options);\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/select.js?");

/***/ }),

/***/ "./resources/assets/components/system-dialogs.js":
/*!*******************************************************!*\
  !*** ./resources/assets/components/system-dialogs.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alert: () => (/* binding */ Alert),\n/* harmony export */   Confirm: () => (/* binding */ Confirm),\n/* harmony export */   Prompt: () => (/* binding */ Prompt)\n/* harmony export */ });\nconst Alert = function (text) {\r\n\r\n    var html = ''\r\n        + '<div class=\"mw_alert\">'\r\n        + '<div class=\"mw-alert-holder\">' + text + '</div>'\r\n        + '<div class=\"mw-alert-footer !p-0\"><span class=\"btn btn-primary mb-2\" onclick=\"mw.dialog.remove(this);\"><b>' + mw.msg.ok + '</b></span></div>'\r\n        + '</div>';\r\n\r\n    if (mw.$(\"#mw_alert\").length === 0) {\r\n        return mw.dialog({\r\n            html: html,\r\n            width: 400,\r\n            height: \"auto\",\r\n            overlay: false,\r\n            name: \"mw_alert\",\r\n            template: \"mw_modal_basic\"\r\n        });\r\n    }\r\n    else {\r\n        mw.$(\"#mw_alert .mw-alert-holder\").html(text);\r\n        return mw.$(\"#mw_alert\")[0].modal;\r\n    }\r\n};\r\n\r\n\r\nconst Prompt = function (q, callback, currentVal) {\r\n    if(!q) return ;\r\n\r\n     var input = document.createElement('input');\r\n    input.className = 'form-control-live-edit-input';\r\n\r\n    var bottomEffect = document.createElement('span');\r\n    bottomEffect.className = 'form-control-live-edit-bottom-effect';\r\n\r\n\r\n    var question = mw.$('<div class=\"form-control-live-edit-label-wrapper\"><label class=\"live-edit-label\">'+q+'</label> </div>');\r\n    question.append(input, bottomEffect);\r\n    var footer = mw.$('<div class=\"mw-dialog-footer\">');\r\n    var ok = mw.$('<button type=\"button\" disabled class=\"btn btn-primary\">'+mw.lang('OK')+'</button>');\r\n    var cancel = mw.$('<span class=\"btn\">'+mw.lang('Cancel')+'</span>');\r\n    footer.append(cancel);\r\n    footer.append(ok);\r\n    console.log(mw.top())\r\n    var dialog = mw.top().dialog({\r\n        content: question,\r\n        title: q,\r\n        footer: footer\r\n    });\r\n    var qresolve, promise = new Promise(resolve => {\r\n        qresolve = resolve;\r\n    });\r\n    ok.on('click', function (){\r\n        if (callback) {\r\n            callback.call(window, input.value);\r\n        }\r\n        qresolve(input.value)\r\n        dialog.remove();\r\n    });\r\n    cancel.on('click', function (){\r\n        qresolve(false)\r\n        dialog.remove();\r\n    });\r\n    if(currentVal) {\r\n        input.value = currentVal.trim()\r\n    }\r\n    setTimeout(function (){\r\n        input.focus();\r\n    }, 50);\r\n    input.oninput = function () {\r\n        var val = this.value.trim();\r\n        ok[0].disabled = !val;\r\n    };\r\n    input.onkeydown = function (e) {\r\n        if (mw.event.is.enter(e)) {\r\n            var val = this.value.trim();\r\n            if (val) {\r\n                if (callback) {\r\n                    callback.call(window, input.value);\r\n                }\r\n                qresolve(input.value)\r\n                dialog.remove();\r\n\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    return {\r\n        dialog,\r\n        promise: () => promise\r\n    };\r\n};\r\nconst Confirm = function (question, callback, onCancel) {\r\n    if(typeof question === 'function') {\r\n        callback = question;\r\n        question = 'Are you sure?';\r\n    }\r\n    question = question || 'Are you sure?';\r\n        var html = ''\r\n            + '<div class=\"mw_alert\">'\r\n            + '<div class=\"mw-alert-holder\">' + question + '</div>'\r\n            + '</div>';\r\n\r\n        var ok = mw.top().$('<span tabindex=\"99999\" class=\"btn btn-primary mb-3\">' + mw.msg.ok + '</span>');\r\n        var cancel = mw.top().$('<span class=\"btn btn-link \">' + mw.msg.cancel + '</span>');\r\n        var modal, qresolve, promise = new Promise(resolve => {\r\n            qresolve = resolve;\r\n        });\r\n\r\n        if (mw.$(\"#mw_confirm_modal\").length === 0) {\r\n            modal = mw.top().dialog({\r\n                content: html,\r\n                width: 400,\r\n                height: 'auto',\r\n                autoHeight: true,\r\n                overlay: true,\r\n                name: \"mw_confirm_modal\",\r\n                footer: [cancel, ok],\r\n                title: mw.lang('Confirm')\r\n            });\r\n\r\n        }\r\n        else {\r\n            mw.$(\"#mw_confirm_modal .mw-alert-holder\").html(question);\r\n            modal = mw.$(\"#mw_confirm_modal\")[0]._dialog;\r\n        }\r\n\r\n        ok.on('keydown', function (e) {\r\n            if (e.keyCode === 13 || e.keyCode === 32) {\r\n            if (callback) {\r\n                callback.call(window);\r\n            }\r\n                modal.remove();\r\n                qresolve(true)\r\n                e.preventDefault();\r\n            }\r\n        });\r\n        if(modal.dialogHeader) {\r\n            var close = modal.dialogHeader.querySelector('.mw-dialog-close');\r\n            if(close){\r\n                close.addEventListener('click', function (){\r\n                    qresolve(false)\r\n                    if(onCancel) {\r\n                        onCancel.call();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        cancel.on('click', function () {\r\n            if(onCancel) {\r\n\r\n                onCancel.call()\r\n            }\r\n            qresolve(false)\r\n            modal.remove();\r\n        });\r\n        ok.on('click', function () {\r\n            if(callback) {\r\n                callback.call(window);\r\n            }\r\n\r\n            qresolve(true)\r\n            setTimeout(function () {\r\n                modal.remove();\r\n            }, 78);\r\n        });\r\n        setTimeout(function () {\r\n            mw.$(ok).focus();\r\n        }, 120);\r\n        return {\r\n            dialog: modal,\r\n            promise: () => promise\r\n        };\r\n    };\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/system-dialogs.js?");

/***/ }),

/***/ "./resources/assets/components/tags.js":
/*!*********************************************!*\
  !*** ./resources/assets/components/tags.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n\r\n\r\n\r\nmw.tags = mw.chips = function(options){\r\n\r\n    \"use strict\";\r\n\r\n    options.element = mw.$(options.element)[0];\r\n    options.size = options.size || 'sm';\r\n\r\n    this.options = options;\r\n    this.options.map = this.options.map || {\r\n        title: 'title',\r\n        value: 'id',\r\n        image: 'image',\r\n        icon: 'icon'\r\n    };\r\n    this.map = this.options.map;\r\n    var scope = this;\r\n    /*\r\n        data: [\r\n            {title:'Some tag', icon:'<i class=\"icon\"></i>'},\r\n            {title:'Some tag', icon:'icon', image:'http://some-image/jpg.png'},\r\n            {title:'Some tag', color:'warn'},\r\n        ]\r\n    */\r\n\r\n    var _e = {};\r\n\r\n    this.on = function (e, f) { _e[e] ? _e[e].push(f) : (_e[e] = [f]) };\r\n\r\n    this.dispatch = function (e, f) { _e[e] ? _e[e].forEach(function (c){ c.call(this, f); }) : ''; };\r\n\r\n    this.refresh = function(){\r\n        mw.$(scope.options.element).empty();\r\n        this.rend();\r\n    };\r\n\r\n    this.setData = function(data){\r\n        this.options.data = data;\r\n        this.refresh();\r\n    };\r\n    this.rend = function(){\r\n        scope.options.element.classList.add('mw-tags--container', 'd-flex', 'flex-wrap', 'gap-3')\r\n\r\n         $.each(this.options.data, function(i){\r\n            var data = $.extend({index:i}, this);\r\n            scope.options.element.appendChild(scope.tag(data));\r\n        });\r\n        if(this.options.inputField) {\r\n            scope.options.element.appendChild(this.addInputField());\r\n        }\r\n    };\r\n\r\n    this.addInputField = function () {\r\n        this._field = document.createElement('input');\r\n        this._field.className = 'mw-ui-invisible-field mw-ui-field-' + this.options.size;\r\n\r\n        this._field.onkeydown = function (e) {\r\n            var val = scope._field.value.trim();\r\n            if(mw.event.is.enter(e) || mw.event.is.comma(e)) {\r\n                e.preventDefault();\r\n\r\n                if(val) {\r\n                    scope.addTag({\r\n                        title: val\r\n                    });\r\n                }\r\n            } else if (mw.event.is.backSpace(e)) {\r\n                if(!val) {\r\n                    var last = scope.options.data[scope.options.data.length - 1];\r\n                    scope.removeTag(scope.options.data.length - 1);\r\n                    scope._field.value = scope.dataTitle(last) + ' ';\r\n                    scope._field.focus();\r\n\r\n                }\r\n            }\r\n            scope.handleAutocomplete(val, e)\r\n\r\n\r\n        };\r\n        return this._field;\r\n    };\r\n    this.handleAutocomplete = function (val, e) {\r\n        if(this.options.autocomplete){\r\n\r\n\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    this.dataValue = function(data){\r\n        if(typeof data === 'string'){\r\n            return data;\r\n        }\r\n        else{\r\n            return data[this.map.value]\r\n        }\r\n    };\r\n\r\n    this.dataImage = function(data){\r\n        if(data[this.map.image]){\r\n            var img = document.createElement('span');\r\n            img.className = 'mw-ui-btn-img';\r\n            img.style.backgroundImage = 'url('+data.image+')';\r\n            return img;\r\n        }\r\n    };\r\n\r\n    this.dataTitle = function(data){\r\n        if(typeof data === 'string'){\r\n            return data;\r\n        }\r\n        else{\r\n            return data[this.map.title];\r\n        }\r\n    };\r\n\r\n    this.dataIcon = function(data){\r\n        if(typeof data === 'string'){\r\n            return;\r\n        }\r\n        else{\r\n            return data[this.map.icon];\r\n        }\r\n    };\r\n\r\n     this.createImage = function (config) {\r\n         var img = this.dataImage(config);\r\n        if(img){\r\n            return img;\r\n        }\r\n     };\r\n\r\n     this.createIcon = function (config) {\r\n        var ic = this.dataIcon(config);\r\n\r\n        if(!ic && config.type){\r\n            ic = mw.iconResolver(config.type)\r\n        }\r\n        var icon;\r\n        if(typeof ic === 'string' && ic.indexOf('<') === -1){\r\n            icon = document.createElement('i');\r\n\r\n        }\r\n        else{\r\n            icon = ic;\r\n        }\r\n        icon = mw.element(icon).get(0);\r\n\r\n\r\n        return icon;\r\n     };\r\n\r\n     this.removeTag = function (index) {\r\n        var item = this.options.data[index];\r\n        this.options.data.splice(index,1);\r\n        this.refresh();\r\n        mw.$(scope).trigger('tagRemoved', [item, this.options.data]);\r\n        mw.$(scope).trigger('change', [item, this.options.data]);\r\n     };\r\n\r\n\r\n\r\n\r\n\r\n\r\n     this.unique = function () {\r\n        var first = this.options.data[0];\r\n        if(!first) return;\r\n        var id = this.options.map.value;\r\n        if(!first[id]) {\r\n            id = this.options.map.title;\r\n        }\r\n        var i = 0, curr = first;\r\n        var _findIndex = function (tag) {\r\n            var tagId = isNaN(tag[id]) ? tag[id].toLowerCase() : tag[id];\r\n            var currId = isNaN(curr[id]) ? curr[id].toLowerCase() : curr[id];\r\n            return tagId == currId;\r\n        };\r\n        while (curr) {\r\n            if (this.options.data.findIndex(_findIndex) === i) {\r\n                i++;\r\n            } else {\r\n                this.options.data.splice(i, 1);\r\n            }\r\n            curr = this.options.data[i];\r\n        }\r\n     };\r\n\r\n    this.addTag = function(data, index){\r\n        index = typeof index === 'number' ? index : this.options.data.length;\r\n        this.options.data.splice( index, 0, data );\r\n        this.unique();\r\n        this.refresh();\r\n        if (this._field) {\r\n            this._field.focus();\r\n        }\r\n\r\n        mw.$(scope).trigger('tagAdded', [data, this.options.data]);\r\n        mw.$(scope).trigger('change', [data, this.options.data]);\r\n    };\r\n\r\n     this.tag = function (options) {\r\n            var config = {\r\n                close:true,\r\n                tagBtnClass:'btn btn-' + this.options.size\r\n            };\r\n\r\n            $.extend(config, options);\r\n\r\n\r\n         config.tagBtnClass +=  '  btn';\r\n\r\n         if (this.options.outline){\r\n             config.tagBtnClass +=  '-outline';\r\n         }\r\n\r\n         if (this.options.color){\r\n             config.tagBtnClass +=  '-' + this.options.color;\r\n         }\r\n\r\n\r\n\r\n         if(this.options.rounded){\r\n             config.tagBtnClass +=  ' btn-rounded';\r\n         }\r\n\r\n\r\n            var tag_holder = document.createElement('span');\r\n            var tag_close = document.createElement('span');\r\n\r\n            tag_close._index = config.index;\r\n            tag_holder._index = config.index;\r\n            tag_holder._config = config;\r\n            tag_holder.dataset.index = config.index;\r\n\r\n            tag_holder.className = 'btn-group';\r\n\r\n             if(options.image){\r\n\r\n             }\r\n\r\n            tag_holder.innerHTML = '<span class=\"' + config.tagBtnClass + '\">' + this.dataTitle(config) + '</span>';\r\n\r\n             if(typeof this.options.disableItem === 'function') {\r\n                 if(this.options.disableItem(config)){\r\n                     tag_holder.className += ' disabled';\r\n                 }\r\n             }\r\n             if(typeof this.options.hideItem === 'function') {\r\n                 if(this.options.hideItem(config)){\r\n                     tag_holder.className += ' hidden';\r\n                 }\r\n             }\r\n\r\n            var icon = this.createIcon(config);\r\n\r\n            var image = this.createImage(config);\r\n\r\n             if(image){\r\n                 mw.$(':first-child', tag_holder).prepend(image);\r\n             }\r\n             if(icon){\r\n                 mw.$(':first-child', tag_holder).prepend(icon);\r\n             }\r\n\r\n\r\n            tag_holder.onclick = function (e) {\r\n                if(e.target !== tag_close){\r\n                    mw.$(scope).trigger('tagClick', [this._config, this._index, this]);\r\n                    scope.dispatch('tagClick', [this._config, this._index, this]);\r\n                }\r\n            };\r\n\r\n            tag_close.className = config.tagBtnClass + ' btn-icon';\r\n            tag_close.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-trash\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n            <path d=\"M4 7l16 0\"></path>\r\n            <path d=\"M10 11l0 6\"></path>\r\n            <path d=\"M14 11l0 6\"></path>\r\n            <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\"></path>\r\n            <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\"></path>\r\n         </svg>`;\r\n            if(config.close){\r\n                tag_close.onclick = function () {\r\n                    scope.removeTag(this._index);\r\n                };\r\n            }\r\n            tag_holder.appendChild(tag_close);\r\n            return tag_holder;\r\n        };\r\n\r\n     this.init = function () {\r\n         this.rend();\r\n         $(this.options.element).on('click', function (e) {\r\n             if(e.target === scope.options.element){\r\n                 $('input', this).focus();\r\n             }\r\n         })\r\n     };\r\n    this.init();\r\n};\r\n\r\nmw.treeTags = mw.treeChips = function(options){\r\n    this.options = options;\r\n    this.options.on = this.options.on || {};\r\n    var scope = this;\r\n\r\n    var tagsHolder = options.tagsHolder || mw.$('<div class=\"mw-tree-tag-tags-holder\"></div>');\r\n    var treeHolder = options.treeHolder || mw.$('<div class=\"mw-tree-tag-tree-holder\"></div>');\r\n\r\n    var treeSettings = $.extend({}, this.options, {element:treeHolder});\r\n\r\n\r\n    const treeSelectedData = (selectedData) => {\r\n        return (this.options.selectedData || []).map(obj => {\r\n            return Object.assign({}, obj, scope.tree.get(obj)._data);\r\n        });\r\n    }\r\n\r\n\r\n    this.tree = new mw.tree(treeSettings);\r\n\r\n\r\n    var tagsSettings = $.extend({}, this.options, {element:tagsHolder, data: treeSelectedData(this.options.selectedData || [])});\r\n\r\n    this.tags = new mw.tags(tagsSettings);\r\n\r\n    mw.$( this.options.element ).append(tagsHolder);\r\n    mw.$( this.options.element ).append(treeHolder);\r\n\r\n     mw.$(this.tags).on('tagClick', function(e, data){\r\n         var li = scope.tree.get(data);\r\n\r\n         if(li) {\r\n             scope.tree.show(data);\r\n         }\r\n\r\n         li.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"center\"});\r\n     });\r\n     mw.$(this.tags).on('tagRemoved', function(event, item){\r\n         scope.tree.unselect(item);\r\n     });\r\n     mw.$(this.tree).on('selectionChange', function(event, selectedData){\r\n        scope.tags.setData(selectedData);\r\n        if (scope.options.on.selectionChange) {\r\n            scope.options.on.selectionChange(selectedData)\r\n        }\r\n    });\r\n\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/tags.js?");

/***/ }),

/***/ "./resources/assets/components/tree.js":
/*!*********************************************!*\
  !*** ./resources/assets/components/tree.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n/********************************************************\r\n\r\n\r\n var myTree = new mw.tree({\r\n\r\n});\r\n\r\n\r\n ********************************************************/\r\n\r\n\r\n\r\n\r\n(function(){\r\n\r\n   /*  mw.lib.require('jqueryui');\r\n\r\n    mw.lib.require('nestedSortable');\r\n\r\n     mw.require('tree-icons.js');*/\r\n\r\n\r\n    var mwtree = function(config){\r\n\r\n        var scope = this;\r\n\r\n        this.config = function(config){\r\n\r\n            window.mwtree = (typeof window.mwtree === 'undefined' ? 0 : window.mwtree)+1;\r\n\r\n            if(!config.id && typeof config.saveState === undefined){\r\n                config.saveState = false;\r\n            }\r\n\r\n            var defaults = {\r\n                data:[],\r\n                openedClass:'opened',\r\n                selectedClass:'selected',\r\n                skin:'default',\r\n                multiPageSelect:true,\r\n                saveState: true,\r\n                stateStorage: {\r\n                    get: function (id) {\r\n                        return mw.storage.get( id);\r\n                    },\r\n                    set: function (id, dataToSave) {\r\n                        mw.storage.set(id, dataToSave);\r\n                    }\r\n                },\r\n                sortable:false,\r\n                resizable:false,\r\n                resizableOn: 'tree', // 'tree' | 'treeParent'\r\n                nestedSortable: false,\r\n                singleSelect: false,\r\n                clickSelect: false,\r\n                selectedData:[],\r\n                openSelectedDataItems: true,\r\n                skip:[],\r\n                contextMenu:false,\r\n                append:false,\r\n                prepend:false,\r\n                selectable:false,\r\n                selectableNodes:false, // 'singleSelect' | 'singleSelectToggle' | 'multiSelect' | 'multiSelectToggle'\r\n                disableSelectTypes:[],\r\n                filter:false,\r\n                cantSelectTypes: [],\r\n                document: document,\r\n                _tempRender: true,\r\n                filterRemoteURL: null,\r\n                filterRemoteKey: 'keyword',\r\n                toggleSelect: true,\r\n                contextMenuMode: 'inline', // 'inline' | 'dropdown'\r\n            };\r\n\r\n\r\n            var options = $.extend({}, defaults, config);\r\n\r\n\r\n\r\n            options.element = mw.$(options.element)[0];\r\n            options.data = options.data || [];\r\n\r\n            this.options = options;\r\n            this.document = options.document;\r\n            this._selectionChangeDisable = false;\r\n\r\n            this.stateStorage = this.options.stateStorage;\r\n\r\n            if(this.options.selectedData){\r\n                this.selectedData = this.options.selectedData;\r\n            }\r\n            else{\r\n                this.selectedData = [];\r\n            }\r\n        };\r\n        this.filterLocal = function(val, key){\r\n            key = key || 'title';\r\n            val = (val || '').toLowerCase().trim();\r\n\r\n\r\n            if(!val){\r\n                this.dispatch( 'searchResults')\r\n                scope.showAll();\r\n            }\r\n            else{\r\n                var hasResults = false;\r\n                scope.options.data.forEach(function(item){\r\n                    if(item[key].toLowerCase().indexOf(val) === -1){\r\n                        scope.hide(item);\r\n                    }\r\n                    else{\r\n                        scope.show(item);\r\n                        hasResults = true;\r\n                    }\r\n                });\r\n                this.dispatch(hasResults ? 'searchResults' : 'searchNoResults')\r\n                mw.$(scope.options.element)[hasResults ? 'removeClass' : 'addClass']('mw-tree-no-results')\r\n            }\r\n        };\r\n\r\n        this._filterRemoteTime = null;\r\n        this.filterRemote = function(val, key){\r\n            clearTimeout(this._filterRemoteTime);\r\n            this._filterRemoteTime = setTimeout(function () {\r\n                key = key || 'title';\r\n                val = (val || '').toLowerCase().trim();\r\n                var ts = {};\r\n                ts[scope.options.filterRemoteKey] = val;\r\n                $.get(scope.options.filterRemoteURL, ts, function (data) {\r\n                    scope.setData(data);\r\n                });\r\n            }, 777);\r\n        };\r\n\r\n        this.filter = function(val, key){\r\n\r\n            if (!!this.options.filterRemoteURL && !!this.options.filterRemoteKey) {\r\n                this.filterRemote(val, key);\r\n            } else {\r\n                this.filterLocal(val, key);\r\n            }\r\n        };\r\n\r\n        var _e = {};\r\n\r\n        this.on = function (e, f) { _e[e] ? _e[e].push(f) : (_e[e] = [f]) };\r\n        this.dispatch = function (e, f) { _e[e] ? _e[e].forEach(function (c){ c.call(this, f); }) : ''; };\r\n\r\n        this.search = function(){\r\n            if(this.options.searchInput === true) {\r\n                const inputTemplate = mw.element(`\r\n                <div>\r\n                    <label class=\"live-edit-label\">${mw.lang('Search for page or category')}</label>\r\n                    <div class=\"form-control-live-edit-label-wrapper\">\r\n                        <input type=\"text\" class=\"form-control-live-edit-input\">\r\n                        <span class=\"form-control-live-edit-bottom-effect\"></span>\r\n                    </div>\r\n                </div>\r\n\r\n                `);\r\n                this.options.searchInput = inputTemplate.find('input').get(0);\r\n\r\n\r\n                if(this.options.searchInputClassName){\r\n                    this.options.searchInput.className = this.options.searchInputClassName;\r\n                }\r\n\r\n                this.options.searchInput.placeholder = this.options.searchInputPlaceholder || mw.lang('Search');\r\n\r\n                if(this.options.searchInputSticky) {\r\n                    minputTemplate.css({\r\n                        position: 'sticky',\r\n                        top: '20px',\r\n                        zIndex: '1',\r\n                        margin: '9px 15px 15px 0',\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n\r\n                    });\r\n                }\r\n\r\n                this.options.searchInput.addEventListener('input', function () {\r\n                    scope.search();\r\n                });\r\n\r\n                setTimeout(function (){\r\n                    mw.$(scope.options.element).before(inputTemplate.get(0));\r\n\r\n                }, 200)\r\n\r\n            }\r\n            this._seachInput = mw.$(this.options.searchInput);\r\n            if(!this._seachInput[0] || this._seachInput[0]._tree) return;\r\n            this._seachInput[0]._tree = this;\r\n            var scope = this;\r\n            this._seachInput.on('input', function(){\r\n                scope.filter(this.value);\r\n            });\r\n        };\r\n\r\n        this.skip = function(itemData){\r\n            if(this.options.skip && this.options.skip.length > 0){\r\n                for( var n = 0; n < scope.options.skip.length; n++ ){\r\n                    var item = scope.options.skip[n];\r\n\r\n                    var case1 = (item.id == itemData.id && item.type == itemData.type);\r\n                    var case2 = (itemData.parent_id != 0 && itemData.parent_id == item.id && item.type == itemData.type);\r\n\r\n\r\n\r\n\r\n                    if(case1 || case2){\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        };\r\n\r\n        this.prepareData = function(){\r\n            if(typeof this.options.filter === 'object'){\r\n                var final = [], scope = this;\r\n                for( var i in this.options.filter){\r\n                    $.each(this.options.data, function(){\r\n                        if(this[i] && this[i] == scope.options.filter[i]){\r\n                            final.push(this);\r\n                        }\r\n                    });\r\n                }\r\n                this.options.data = final;\r\n            }\r\n        };\r\n\r\n\r\n        this._postCreated = [];\r\n\r\n        this.json2ul = function(){\r\n            this.list = scope.document.createElement( 'ul' );\r\n            this.list._tree = this;\r\n            this.options.id = this.options.id || ( 'mw-tree-' + window.mwtree );\r\n            this.list.id = this.options.id;\r\n            this.list.className = 'mw-defaults mw-tree-nav mw-tree-nav-skin-' + this.options.skin;\r\n            this.list._id = 0;\r\n            this.options.data.forEach(function(item){\r\n                var list = scope.getParent(item);\r\n                if(list){\r\n                    var li = scope.createItem(item);\r\n                    if(li){\r\n                        list.appendChild(li);\r\n                    }\r\n                }\r\n                else if(typeof list === 'undefined'){\r\n                    scope._postCreated.push(item);\r\n                }\r\n            });\r\n            if(this.options._tempRender) {\r\n                this.tempRend();\r\n            }\r\n        };\r\n\r\n\r\n\r\n        this._tempPrepare = function () {\r\n            for (var i=0; i<this._postCreated.length; i++) {\r\n                var it = this._postCreated[i];\r\n                if(it.parent_id !== 0) {\r\n                    var has = this.options.data.find(function (a) {\r\n                        return a.id == it.parent_id; // 1 == '1'\r\n                    });\r\n                    if(!has) {\r\n                        it.parent_id = 0;\r\n                        it.parent_type = \"page\";\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.tempRend = function () {\r\n            this._tempPrepare()\r\n            var curr = scope._postCreated[0];\r\n            var max = 10000, itr = 0;\r\n\r\n            while(scope._postCreated.length && itr<max){\r\n                itr++;\r\n                var index = scope._postCreated.indexOf(curr);\r\n                var selector = '#' + scope.options.id + '-' + curr.type + '-'  + curr.id;\r\n                var lastc = selector.charAt(selector.length - 1);\r\n                if( lastc === '.' || lastc === '#') {\r\n                    selector = selector.substring(0, selector.length - 1);\r\n                }\r\n                var it = mw.$(selector)[0];\r\n                if(it){\r\n                    scope._postCreated.splice(index, 1);\r\n                    curr = scope._postCreated[0];\r\n                    continue;\r\n                }\r\n                var list = scope.getParent(curr);\r\n\r\n                if(list && !$(selector)[0]){\r\n                    var li = scope.createItem(curr);\r\n                    if(li){\r\n                        list.appendChild(li);\r\n                    }\r\n                    scope._postCreated.splice(index, 1);\r\n                    curr = scope._postCreated[0];\r\n                }\r\n                else if(typeof list === 'undefined'){\r\n                    curr = scope._postCreated[index+1] || scope._postCreated[0];\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        this._triggerChange = function(){\r\n            if(!this._selectionChangeDisable) {\r\n                mw.$(scope).trigger('selectionChange', [scope.selectedData]);\r\n                scope.dispatch('selectionChange', scope.selectedData)\r\n            }\r\n        }\r\n\r\n        this.setData = function(newData){\r\n            this.options.data = newData;\r\n            this._postCreated = [];\r\n            this._ids = [];\r\n            this.init();\r\n        };\r\n\r\n        this.saveState = function(){\r\n            if(!this.options.saveState) return;\r\n            var data = [];\r\n            mw.$( 'li.' + this.options.openedClass, this.list  ).each(function(){\r\n                if(this._data) {\r\n                    data.push({type:this._data.type, id:this._data.id});\r\n                }\r\n            });\r\n\r\n            this.stateStorage.set(this.options.id, data);\r\n        };\r\n\r\n        this.restoreState = function(data){\r\n            if(!this.options.saveState) return;\r\n            if(!data) {\r\n              data = this.stateStorage.get(this.options.id);\r\n            }\r\n\r\n            if(!data) return;\r\n\r\n            try{\r\n                $.each(data, function(){\r\n                    if(typeof this.id === 'string'){\r\n                        this.id = parseInt(this.id, 10);\r\n                    }\r\n                    scope.open(this.id, this.type);\r\n                });\r\n            }\r\n            catch(e){ }\r\n        };\r\n\r\n        this.manageUnselected = function(){\r\n            mw.$('input:not(:checked)', this.list).each(function(){\r\n                var li = scope.parentLi(this);\r\n                mw.$(li).removeClass(scope.options.selectedClass)\r\n            });\r\n        };\r\n\r\n        this.analizeLi = function(li){\r\n            if(typeof li === 'string'){\r\n                li = decodeURIComponent(li).trim();\r\n                if(/^\\d+$/.test(li)){\r\n                    li = parseInt(li, 10);\r\n                }\r\n                else{\r\n                    return mw.$(li)[0];\r\n                }\r\n            }\r\n            return li;\r\n        };\r\n\r\n        this.select = function(li, type, trigger){\r\n            if(typeof trigger === 'undefined') {\r\n                trigger = true;\r\n            }\r\n            if(Array.isArray(li)){\r\n                $.each(li, function(){\r\n                    scope.select(this, type, trigger);\r\n                });\r\n                return;\r\n            }\r\n            li = this.get(li, type);\r\n            if(li && li.dataset && this.options.cantSelectTypes.indexOf(li.dataset.type) === -1){\r\n                li.classList.add(this.options.selectedClass);\r\n                var input = li.querySelector('input');\r\n                if(input) input.checked = true;\r\n            }\r\n\r\n            this.manageUnselected();\r\n            this.getSelected();\r\n\r\n            if (trigger) {\r\n                this._triggerChange();\r\n            }\r\n        };\r\n\r\n\r\n\r\n        this.unselect = function(li, type, trigger){\r\n            if(typeof trigger === 'undefined') {\r\n                trigger = true;\r\n            }\r\n            if(Array.isArray(li)){\r\n                $.each(li, function(){\r\n                    scope.unselect(this, type, trigger);\r\n                });\r\n                return;\r\n            }\r\n            li = this.get(li, type);\r\n            if(li){\r\n                li.classList.remove(this.options.selectedClass);\r\n                var input = li.querySelector('input');\r\n                if(input) input.checked = false;\r\n            }\r\n            this.manageUnselected();\r\n            this.getSelected();\r\n            if (trigger) {\r\n                this._triggerChange();\r\n            }\r\n        };\r\n\r\n        this.get = function(li, type){\r\n            if(typeof li === 'undefined') return false;\r\n            if(li === null) return false;\r\n            if(li.nodeType) return li;\r\n            li = this.analizeLi(li);\r\n            if(typeof li === 'object' && typeof li.id !== 'undefined'){\r\n                return this.get(li.id, li.type);\r\n            }\r\n            if(typeof li === 'object' && li.constructor === Number){\r\n                li = parseInt(li);\r\n            }\r\n            if(typeof li === 'number'){\r\n                if(!type) return;\r\n                return this.list.querySelector('li[data-type=\"'+type+'\"][data-id=\"'+li+'\"]');\r\n            }\r\n            if(typeof li === 'string' && /^\\d+$/.test(li)){\r\n                if(!type) return;\r\n                return this.list.querySelector('li[data-type=\"'+type+'\"][data-id=\"'+li+'\"]');\r\n            }\r\n            return li;\r\n        };\r\n\r\n        this.isSelected = function(li, type){\r\n            li = this.get(li, type);\r\n            if(!li) return;\r\n            var input = li.querySelector('input');\r\n            if(!input) return false;\r\n            return input.checked === true;\r\n        };\r\n        this.toggleSelect = function(li, type){\r\n            if(this.isSelected(li, type)){\r\n                this.unselect(li, type);\r\n            }\r\n            else{\r\n                this.select(li, type);\r\n            }\r\n        };\r\n\r\n        this.selectAll = function(trigger){\r\n            if(typeof trigger === 'undefined') {\r\n                trigger = true;\r\n            }\r\n            this._selectionChangeDisable = true;\r\n\r\n            this.select(this.options.data);\r\n            this._selectionChangeDisable = false;\r\n            if(trigger) {\r\n                this._triggerChange();\r\n            }\r\n        };\r\n\r\n        this.unselectAll = function(trigger){\r\n            if(typeof trigger === 'undefined') {\r\n                trigger = true;\r\n            }\r\n            this._selectionChangeDisable = true;\r\n            this.unselect(this.selectedData);\r\n            this._selectionChangeDisable = false;\r\n            if(trigger) {\r\n                this._triggerChange();\r\n            }\r\n\r\n        };\r\n\r\n        this.open = function(li, type, _skipsave){\r\n            if(Array.isArray(li)){\r\n                $.each(li, function(){\r\n                    scope.open(this);\r\n                });\r\n                return;\r\n            }\r\n            li = this.get(li, type);\r\n            if(!li) return;\r\n            li.classList.add(this.options.openedClass);\r\n            if(!_skipsave) this.saveState();\r\n        };\r\n        this.show = function(li, type){\r\n            if(Array.isArray(li)){\r\n                $.each(li, function(){\r\n                    scope.show(this);\r\n                });\r\n                return;\r\n            }\r\n            li = this.get(li, type);\r\n            if(!li) return;\r\n            li.classList.remove('mw-tree-item-hidden');\r\n            mw.$(li).parents(\"li\").each(function(){\r\n\r\n                scope.show(this);\r\n                scope.open(this);\r\n            });\r\n            setTimeout(function(li){\r\n                li.classList.remove('mw-tree-item-hidden');\r\n            }, 10, li)\r\n        };\r\n\r\n        this.showAll = function(){\r\n            mw.$(this.list.querySelectorAll('li')).removeClass('mw-tree-item-hidden');\r\n        };\r\n\r\n        this.hide = function(li, type){\r\n            if(Array.isArray(li)){\r\n                $.each(li, function(){\r\n                    scope.hide(this);\r\n                });\r\n                return;\r\n            }\r\n            li = this.get(li, type);\r\n            if(!li) return;\r\n            li.classList.add('mw-tree-item-hidden');\r\n        };\r\n\r\n        this.hideAll = function(){\r\n            mw.$(this.list.querySelectorAll('li')).addClass('mw-tree-item-hidden');\r\n        };\r\n\r\n        this.close = function(li,type, _skipsave){\r\n            if(Array.isArray(li)){\r\n                $.each(li, function(){\r\n                    scope.close(this);\r\n                });\r\n                return;\r\n            }\r\n            li = this.get(li, type);\r\n            if(!li) return;\r\n            li.classList.remove(this.options.openedClass);\r\n            if(!_skipsave) this.saveState();\r\n        };\r\n\r\n        this.toggle = function(li, type){\r\n            li = this.get(li, type);\r\n            if(!li) return;\r\n            li.classList.toggle(this.options.openedClass);\r\n            this.saveState();\r\n        };\r\n\r\n        this.openAll = function(){\r\n            var all = this.list.querySelectorAll('li');\r\n            mw.$(all).each(function(){\r\n                scope.open(this, undefined, true);\r\n            });\r\n            this.saveState();\r\n        };\r\n\r\n        this.closeAll = function(){\r\n            var all = this.list.querySelectorAll('li.'+this.options.openedClass);\r\n            mw.$(all).each(function(){\r\n                scope.close(this, undefined, true);\r\n            });\r\n            this.saveState();\r\n        };\r\n\r\n        this.button = function(){\r\n            var btn = scope.document.createElement('mwbutton');\r\n            btn.className = 'mw-tree-toggler';\r\n\r\n            btn.onclick = function(){\r\n                scope.toggle(mw.tools.firstParentWithTag(this, 'li'));\r\n            };\r\n            return btn;\r\n        };\r\n\r\n        this.addButtons = function(){\r\n            var all = this.list.querySelectorAll('li ul.pre-init'), i=0;\r\n            for( ; i<all.length; i++ ){\r\n                var ul = all[i];\r\n                ul.classList.remove('pre-init');\r\n                mw.$(ul).parent().children('.mw-tree-item-content-root').prepend(this.button());\r\n            }\r\n        };\r\n\r\n        this.checkBox = function(element){\r\n            if(this.options.cantSelectTypes.indexOf(element.dataset.type) !== -1){\r\n                return scope.document.createTextNode('');\r\n            }\r\n            var itype = 'radio';\r\n\r\n            if(this.options.singleSelect){\r\n\r\n            }\r\n            else if(this.options.multiPageSelect || element._data.type !== 'page'){\r\n                itype = 'checkbox';\r\n            }\r\n\r\n            var label = scope.document.createElement('tree-label');\r\n            var input = scope.document.createElement('input');\r\n            var span = scope.document.createElement('span');\r\n            input.type = itype;\r\n            input._data = element._data;\r\n            input.value = element._data.id;\r\n            input.name = this.list.id;\r\n            input.className = 'form-check-input';\r\n            label.className = 'form-check';\r\n\r\n            label.appendChild(input);\r\n\r\n\r\n            label.appendChild(span);\r\n\r\n            /*input.onchange = function(){\r\n                var li = scope.parentLi(this);\r\n                mw.$(li)[this.checked?'addClass':'removeClass'](scope.options.selectedClass)\r\n                var data = scope.getSelected();\r\n                scope.manageUnselected()\r\n                mw.$(scope).trigger('change', [data]);\r\n            }*/\r\n            return label;\r\n        };\r\n\r\n        this.parentLi = function(scope){\r\n            if(!scope) return;\r\n            if(scope.nodeName === 'LI'){\r\n                return scope;\r\n            }\r\n            while(scope.parentNode){\r\n                scope = scope.parentNode;\r\n                if(scope.nodeName === 'LI'){\r\n                    return scope;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.getSelected = function(){\r\n            var selected = [];\r\n            var all = this.list.querySelectorAll('li.selected');\r\n            mw.$(all).each(function(){\r\n                if(this._data) selected.push(this._data);\r\n            });\r\n            this.selectedData = selected;\r\n            this.options.selectedData = selected;\r\n            return selected;\r\n        };\r\n\r\n        this.decorate = function(element){\r\n            var _selectable = this.options.selectable && this.options.disableSelectTypes.indexOf(element._data.type) === -1;\r\n            if(_selectable){\r\n                mw.$(element.querySelector('.mw-tree-item-content')).prepend(this.checkBox(element))\r\n            } else {\r\n                if(!this.options.selectableNodes) {\r\n                    var content = mw.$(element.querySelector('.mw-tree-item-content'))\r\n                    content.css('pointerEvents', 'none')\r\n\r\n                    setTimeout((content)=>{\r\n                        content.children().css('pointerEvents', 'all')\r\n                    }, 10, content)\r\n\r\n                }\r\n\r\n            }\r\n            var cont = element.querySelector('.mw-tree-item-content');\r\n            cont.classList.add('item-selectable-' + _selectable);\r\n            cont.appendChild(this.contextMenu(element));\r\n            this.sortable();\r\n            this.nestedSortable();\r\n        };\r\n\r\n        this.resizable = function(){\r\n             if(this.options.resizable){\r\n                var resEl;\r\n                if(this.options.resizableOn === 'tree') {\r\n                    resEl = mw.$(this.list);\r\n                } else if(this.options.resizableOn === 'treeParent') {\r\n                    resEl = mw.$(this.options.element);\r\n                }\r\n\r\n                setTimeout(function (){\r\n                    resEl.resizable({\r\n                        maxWidth: 650,\r\n                        minWidth: 200,\r\n                        handles: \"e\",\r\n                        resize: function () {\r\n                            if( resEl[0].id ) {\r\n                                scope.stateStorage.set('size-' + resEl[0].id, resEl[0].style.width);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if(resEl[0].id && scope.stateStorage.get('size-' + resEl[0].id)) {\r\n                        resEl[0].style.width = scope.stateStorage.get('size-' + resEl[0].id) ;\r\n                    }\r\n                }, 300);\r\n\r\n            }\r\n\r\n        };\r\n\r\n        var _orderChangeHandle = function (e, ui){\r\n            setTimeout(function(){\r\n                var old = $.extend({},ui.item[0]._data);\r\n                var obj = ui.item[0]._data;\r\n                var objParent = ui.item[0].parentNode.parentNode._data;\r\n                ui.item[0].dataset.parent_id = objParent ? objParent.id : 0;\r\n\r\n                obj.parent_id = objParent ? objParent.id : 0;\r\n                obj.parent_type = objParent ? objParent.id : 'page';\r\n                var newdata = [];\r\n                mw.$('li', scope.list).each(function(){\r\n                    if(this._data) newdata.push(this._data);\r\n                });\r\n                scope.options.data = newdata;\r\n                var local = [];\r\n                mw.$(ui.item[0].parentNode).children('li').each(function(){\r\n                    if(this._data) {\r\n                        local.push(this._data.id);\r\n                    }\r\n                });\r\n                //$(scope.list).remove();\r\n                //scope.init();\r\n                mw.$(scope).trigger('orderChange', [obj, scope.options.data, old, local]);\r\n                scope.dispatch('orderChange', [obj, scope.options.data, old, local]);\r\n            }, 110);\r\n        };\r\n\r\n        this.sortable = function(){\r\n\r\n            if(this.options.sortable){\r\n                var selector = '.type-category, .type-page';\r\n                if(typeof this.options.sortable === 'string') {\r\n                    selector = this.options.sortable;\r\n                }\r\n                var items = mw.$(this.list);\r\n                mw.$('ul', this.list).each(function () {\r\n                    items.push(this);\r\n                });\r\n                if(this.options.createSortableHandle) {\r\n                    this.options.createSortableHandle(this.list);\r\n                }\r\n                if($.fn.sortable) {\r\n                    items.sortable({\r\n                        items: selector,\r\n                        start: function(){ // firefox triggers click when drag ends\r\n                            scope._disableClick = true;\r\n                        },\r\n                        stop: function(){\r\n                            setTimeout(() => {scope._disableClick = false;}, 78)\r\n\r\n                        },\r\n                        axis:'y',\r\n                        listType:'ul',\r\n                        handle: scope.options.sortableHandle || '.mw-tree-item-title',\r\n                        update:function(e, ui){\r\n\r\n                            _orderChangeHandle(e, ui)\r\n                        }\r\n                    });\r\n                } else {\r\n                    console.log('$.fn.sortable is not defined')\r\n                }\r\n\r\n            }\r\n        };\r\n\r\n        this.getSameLevelObjects = function(object){\r\n             var parent = this.get(object).parentElement;\r\n            return Array.from(parent.children).map(function (li) {\r\n                return li._data;\r\n            });\r\n        }\r\n        this.getChildObjects = function(parentObject){\r\n            return Array.from(this.get(parentObject).children).map(function (li) {\r\n                return li._data;\r\n            });\r\n        };\r\n\r\n        this.nestedSortable = function(){\r\n            if(typeof this.options.nestedSortable === 'string') {\r\n                mw.$(this.options.nestedSortable, this.list).each(function (){\r\n                    $(this).nestedSortable({\r\n                        items: \".type-category\",\r\n                        listType:'ul',\r\n                        handle: scope.options.nestedSortableHandle || '.mw-tree-item-title',\r\n                        update:function(e, ui){\r\n\r\n                            _orderChangeHandle(e, ui)\r\n                        },\r\n                        start: function(){ // firefox triggers click when drag ends\r\n                            scope._disableClick = true;\r\n                        },\r\n                        stop: function(){\r\n                            setTimeout(() => {scope._disableClick = false;}, 78)\r\n                        },\r\n                    });\r\n                })\r\n            } else if (this.options.nestedSortable === true) {\r\n                mw.$('ul', this.list).nestedSortable({\r\n                    items: \".type-category\",\r\n                    listType:'ul',\r\n                    handle:'.mw-tree-item-title',\r\n                    start: function(){ // firefox triggers click when drag ends\r\n                        scope._disableClick = true;\r\n                    },\r\n                    stop: function(){\r\n                        setTimeout(() => {scope._disableClick = false;}, 78)\r\n                    },\r\n                    update:function(e, ui){\r\n                        _orderChangeHandle(e, ui);\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n        };\r\n\r\n        var _contextMenuOnce = null;\r\n        this.contextMenu = function(element){\r\n            var menu = scope.document.createElement('span');\r\n            menu.className = 'mw-tree-context-menu';\r\n            if(this.options.contextMenu) {\r\n                var menuButton = scope.document.createElement('span');\r\n                var menuContent = scope.document.createElement('span');\r\n                menuButton.className = 'mw-tree-context-menu-content-button';\r\n                menuButton.innerHTML = ' ';\r\n                menuButton.addEventListener('click', function (e){\r\n                   e.stopImmediatePropagation();\r\n                   Array.from(scope.document.querySelectorAll('.context-menu-active')).forEach(function (node){\r\n                       if(node !== element) {\r\n                           node.classList.remove('context-menu-active');\r\n                       }\r\n                   });\r\n                   element.classList.toggle('context-menu-active');\r\n                   if(scope.options.contextMenuMode === 'dropdown'){\r\n\r\n                    scope.document.querySelectorAll('.mw-tree-context-menu-content-active').forEach(function(node){\r\n                        node.classList.remove('mw-tree-context-menu-content-active');\r\n                    })\r\n\r\n                    if(element.classList.contains('context-menu-active')){\r\n                        var off = mw.element(menuButton).offset();\r\n                        menuButton.$$menuContent.style.top = off.offsetTop + 'px';\r\n                        menuButton.$$menuContent.style.left = off.offsetLeft + 'px';\r\n                        menuButton.$$menuContent.style.display =  'block';\r\n                        menuButton.$$menuContent.classList.add('mw-tree-context-menu-content-active');\r\n\r\n                    } else {\r\n                        menuButton.$$menuContent.style.display =  'none';\r\n                        menuButton.$$menuContent.classList.remove('mw-tree-context-menu-content-active');\r\n                    }\r\n                   }\r\n                });\r\n\r\n                menuContent.className = 'mw-tree-context-menu-content mw-tree-context-menu-content-' + this.options.skin + ' mw-tree-context-menu-content-mode-' + this.options.contextMenuMode;\r\n                menu.appendChild(menuButton);\r\n                menuButton.$$menuContent = menuContent;\r\n                menuContent.$$menuButton = menuButton;\r\n                if(this.options.contextMenuMode === 'inline') {\r\n                    menu.appendChild(menuContent);\r\n                } else if(this.options.contextMenuMode === 'dropdown') {\r\n                    scope.document.body.appendChild(menuContent);\r\n                }\r\n\r\n                    $.each(this.options.contextMenu, function(){\r\n                    if(!this.filter || this.filter(element._data, element)){\r\n                        var menuitem = scope.document.createElement('span');\r\n                        var icon = scope.document.createElement('span');\r\n                        menuitem.title = this.title;\r\n                        menuitem.innerHTML = iconResolver(this) +  this.title;\r\n                        menuitem.className = ((this.className || '') + ' mw-tree-context-menu-item ').trim();\r\n                        if(this.icon.indexOf('<') === -1) {\r\n                            icon.className = 'mw-tree-context-menu-icon ' + this.icon;\r\n                        } else {\r\n                            icon.className = 'mw-tree-context-menu-icon';\r\n                            icon.innerHTML = this.icon;\r\n                        }\r\n\r\n                        menuitem.prepend(icon);\r\n                        menuContent.appendChild(menuitem);\r\n                        (function(menuitem, element, obj){\r\n                            menuitem.onclick = function(event){\r\n                                event.stopImmediatePropagation();\r\n                                if(obj.action){\r\n                                    obj.action.call(element, element, element._data, menuitem)\r\n                                }\r\n                            };\r\n                        })(menuitem, element, this);\r\n                    }\r\n\r\n                });\r\n                if(!_contextMenuOnce) {\r\n                    _contextMenuOnce = true;\r\n                    if(scope.document.defaultView) {\r\n                        scope.document.defaultView.addEventListener('scroll', function (e) {\r\n                            Array.from(scope.document.querySelectorAll('.mw-tree-context-menu-content-active')).forEach(function (node) {\r\n                                var off = mw.element(node.$$menuButton).offset();\r\n                                node.style.top = off.offsetTop + 'px';\r\n                                node.style.left = off.offsetLeft + 'px';\r\n                            });\r\n                        })\r\n                    }\r\n                    scope.document.body.addEventListener('click', function (e){\r\n                        var active =  Array.from(scope.document.querySelectorAll('.context-menu-active,.mw-tree-context-menu-content-active'));\r\n                        if(active.length) {\r\n                            if(!scope.list.contains(e.target)) {\r\n                                active.forEach(function (node){\r\n                                    node.classList.remove('context-menu-active', 'mw-tree-context-menu-content-active');\r\n                                });\r\n                            } else {\r\n                                var li = mw.tools.firstParentOrCurrentWithTag(e.target, 'li');\r\n                                if(li) {\r\n                                    active.forEach(function (node){\r\n                                        if(!li.contains(node)) {\r\n                                            node.classList.remove('context-menu-active', 'mw-tree-context-menu-content-active');\r\n                                        }\r\n\r\n                                    });\r\n                                }\r\n\r\n                            }\r\n                        }\r\n\r\n                    })\r\n                }\r\n            }\r\n            return menu\r\n\r\n        };\r\n\r\n        this.rend = function(){\r\n            if(this.options.element){\r\n                var el = mw.$(this.options.element);\r\n                if(el.length!==0){\r\n                    el.empty().append(this.list);\r\n                }\r\n            }\r\n        };\r\n\r\n        this._ids = [];\r\n\r\n\r\n        var iconResolver = function(item) {\r\n            if(!mw.iconResolver) {\r\n                return ''\r\n            }\r\n\r\n            return mw.iconResolver(item.icon) || mw.iconResolver(item.subtype) || mw.iconResolver(item.type)\r\n        }\r\n\r\n        this.createItem = function(item){\r\n            var selector = '#'+scope.options.id + '-' + item.type+'-'+item.id;\r\n            if(this._ids.indexOf(selector) !== -1) return false;\r\n            this._ids.push(selector);\r\n            var li = scope.document.createElement('li');\r\n            li.dataset.type = item.type;\r\n            li.dataset.id = item.id;\r\n            li.dataset.parent_id = item.parent_id;\r\n            var skip = this.skip(item);\r\n            li.className = 'type-' + item.type + ' subtype-'+ (item.icon || item.subtype) + ' skip-' + (skip || 'none') + ' tree-item-active-' + (item.is_active !== 0);\r\n            var container = scope.document.createElement('span');\r\n            container.className = \"mw-tree-item-content\";\r\n            var titleNode = document.createElement('span');\r\n            titleNode.className = 'form-check-label mw-tree-item-title';\r\n            titleNode.innerHTML = iconResolver(item) + item.title;\r\n            if(!item.is_active){\r\n                titleNode.title = mw.lang('Category is hidden');\r\n            }\r\n\r\n            container.addEventListener('click', function (e){\r\n                if(e.target === container || e.target === titleNode) {\r\n                    scope.dispatch('itemClick', item);\r\n                }\r\n            });\r\n\r\n            container.appendChild(titleNode)\r\n\r\n            li._data = item;\r\n            li.id = scope.options.id + '-' + item.type+'-'+item.id;\r\n            li.appendChild(container);\r\n            $(container).wrap('<span class=\"mw-tree-item-content-root\"></span>')\r\n            if(!skip){\r\n                container.onclick = function(event){\r\n\r\n                    if(scope._disableClick) {\r\n                        return;\r\n                    }\r\n\r\n                    var target = event.target;\r\n                    var canSelect = true;\r\n                    if(scope.options.rowSelect === false) {\r\n                        if(target.nodeName !== 'TREE-LABEL') {\r\n                            canSelect = false;\r\n                        }\r\n                    }\r\n                    if(canSelect && (scope.options.selectable || scope.options.selectableNodes)) {\r\n                        if(scope.options.selectableNodes === 'singleSelect' || scope.options.selectableNodes ===  'singleSelectToggle') {\r\n\r\n                            scope.unselect(scope.selectedData.filter(function (obj){\r\n                                return li._data.id !== obj.id || li._data.type !== obj.type\r\n                            }), undefined, false)\r\n                        }\r\n                        if(scope.options.toggleSelect || scope.options.selectableNodes === 'toggle') {\r\n                            scope.toggleSelect(li);\r\n                        } else {\r\n                            scope.select(li);\r\n                        }\r\n                    }\r\n                };\r\n                this.decorate(li);\r\n            }\r\n\r\n\r\n            return li;\r\n        };\r\n\r\n\r\n\r\n        this.additional = function (obj) {\r\n            var li = scope.document.createElement('li');\r\n            li.className = 'mw-tree-additional-item';\r\n            var container = scope.document.createElement('span');\r\n            var containerTitle = scope.document.createElement('span');\r\n            container.className = \"mw-tree-item-content\";\r\n            containerTitle.className = \"mw-tree-item-title\";\r\n            container.appendChild(containerTitle);\r\n\r\n            li.appendChild(container);\r\n            $(container).wrap('<span class=\"mw-tree-item-content-root\"></span>')\r\n            mw.$(containerTitle).append(iconResolver(obj))\r\n            var title = scope.document.createElement('span');\r\n            title.innerHTML = obj.title;\r\n            title.alt = obj.title;\r\n            containerTitle.appendChild(title);\r\n            li.onclick = function (ev) {\r\n                if(obj.action){\r\n                    obj.action.call(this, obj)\r\n                }\r\n            };\r\n            return li;\r\n        }\r\n\r\n        this.createList = function(item){\r\n            var nlist = scope.document.createElement('ul');\r\n            nlist.dataset.type = item.parent_type;\r\n            nlist.dataset.id = item.parent_id;\r\n            nlist.className = 'pre-init';\r\n            return nlist;\r\n        };\r\n\r\n        this.getParent = function(item, isTemp){\r\n            if(!item.parent_id) return this.list;\r\n            var findul = this.list.querySelector('ul[data-type=\"'+item.parent_type+'\"][data-id=\"'+item.parent_id+'\"]');\r\n            var findli = this.list.querySelector('li[data-type=\"'+item.parent_type+'\"][data-id=\"'+item.parent_id+'\"]');\r\n            if(findul){\r\n                return findul;\r\n            }\r\n            else if(findli){\r\n                var nlistwrap = this.createItem(item);\r\n                if(!nlistwrap) return false;\r\n                var nlist = this.createList(item);\r\n                nlist.appendChild(nlistwrap);\r\n                findli.appendChild(nlist);\r\n                return false;\r\n            }\r\n        };\r\n\r\n        this.append = function(){\r\n            if(this.options.append){\r\n                $.each(this.options.append, function(){\r\n                    scope.list.appendChild(scope.additional(this))\r\n                })\r\n            }\r\n        };\r\n\r\n        this.prepend = function(){\r\n            if(this.options.prepend){\r\n                $.each(this.options.append, function(){\r\n                    mw.$(scope.list).prepend(scope.additional(this))\r\n                })\r\n            }\r\n        };\r\n\r\n        this.addHelperClasses = function(root, level){\r\n            level = (level || 0) + 1;\r\n            root = root || this.list;\r\n            mw.$( root.children ).addClass('level-'+level).each(function(){\r\n                var ch = this.querySelector('ul');\r\n                if(ch){\r\n                    mw.$(this).addClass('has-children')\r\n                    scope.addHelperClasses(ch, level);\r\n                }\r\n            })\r\n        };\r\n\r\n        this.loadSelected = function(){\r\n            if(this.selectedData){\r\n                scope.select(this.selectedData, undefined, false);\r\n                if(this.options.openSelectedDataItems){\r\n                    this.selectedData.forEach(obj => {\r\n                        jQuery(this.get(obj)).parents('li').each(function(){\r\n                            scope.open(this)\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n        };\r\n        this.init = function(){\r\n\r\n            this.prepareData();\r\n            this.json2ul();\r\n            this.addButtons();\r\n            this.rend();\r\n            this.append();\r\n            this.prepend();\r\n            this.addHelperClasses();\r\n            this.restoreState();\r\n            // this.loadSelected();\r\n            this.search();\r\n            this.resizable();\r\n            setTimeout(() => {\r\n                this.loadSelected();\r\n                mw.$(this).trigger('ready');\r\n            }, 78)\r\n        };\r\n\r\n        this.config(config);\r\n        this.init();\r\n    };\r\n    mw.tree = mwtree;\r\n    mw.tree.get = function (a) {\r\n        a = mw.$(a)[0];\r\n        if(!a) return;\r\n        if(mw.tools.hasClass(a, 'mw-tree-nav')){\r\n            return a._tree;\r\n        }\r\n        var child = a.querySelector('.mw-tree-nav');\r\n        if(child) return child._tree;\r\n        var parent = mw.tools.firstParentWithClass(a, 'mw-tree-nav');\r\n\r\n        if(parent) {\r\n            return parent._tree;\r\n        }\r\n    }\r\n\r\n\r\n})();\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/tree.js?");

/***/ }),

/***/ "./resources/assets/components/uiaccordion.js":
/*!****************************************************!*\
  !*** ./resources/assets/components/uiaccordion.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nmw.uiAccordion = function (options) {\r\n    if (!options) return;\r\n    options.element = options.element || '.mw-accordion';\r\n\r\n    var scope = this;\r\n\r\n\r\n\r\n    this.getContents = function () {\r\n        this.contents = this.root.children(this.options.contentSelector);\r\n        if (!this.contents.length) {\r\n            this.contents = mw.$();\r\n            this.root.children(this.options.itemSelector).each(function () {\r\n                var title = mw.$(this).children(scope.options.contentSelector)[0];\r\n                if (title) {\r\n                    scope.contents.push(title)\r\n                }\r\n            });\r\n        }\r\n    }\r\n    this.getTitles = function () {\r\n        this.titles = this.root.children(this.options.titleSelector);\r\n        if (!this.titles.length) {\r\n            this.titles = mw.$();\r\n            this.root.children(this.options.itemSelector).each(function () {\r\n                var title = mw.$(this).children(scope.options.titleSelector)[0];\r\n                if (title) {\r\n                    scope.titles.push(title)\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    this.prepare = function (options) {\r\n        var defaults = {\r\n            multiple: false,\r\n            itemSelector: \".mw-accordion-item,mw-accordion-item\",\r\n            titleSelector: \".mw-accordion-title,mw-accordion-title\",\r\n            contentSelector: \".mw-accordion-content,mw-accordion-content\",\r\n            openFirst: true,\r\n            toggle: true\r\n        };\r\n        this.options = $.extend({}, defaults, options);\r\n\r\n        this.root = mw.$(this.options.element).not('.mw-accordion-ready').eq(0);\r\n        if (!this.root.length) return;\r\n        this.root.addClass('mw-accordion-ready');\r\n        this.root[0].uiAccordion = this;\r\n        this.getTitles();\r\n        this.getContents();\r\n\r\n    };\r\n\r\n    this.getItem = function (q) {\r\n        var item;\r\n        if (typeof q === 'number') {\r\n            item = this.contents.eq(q)\r\n        }\r\n        else {\r\n            item = mw.$(q);\r\n        }\r\n        return item;\r\n    };\r\n\r\n    this.set = function (index) {\r\n        var item = this.getItem(index);\r\n        if (!this.options.multiple) {\r\n            this.contents.not(item)\r\n                .slideUp()\r\n                .removeClass('active')\r\n                .prev()\r\n                .removeClass('active')\r\n                .parents('.mw-accordion-item').eq(0)\r\n                .removeClass('active');\r\n        }\r\n        item.stop()\r\n            .slideDown()\r\n            .addClass('active')\r\n            .prev()\r\n            .addClass('active')\r\n            .parents('.mw-accordion-item').eq(0)\r\n            .addClass('active');\r\n        mw.$(this).trigger('accordionSet', [item]);\r\n    };\r\n\r\n    this.unset = function (index) {\r\n        if (typeof index === 'undefined') return;\r\n        var item = this.getItem(index);\r\n        item.stop()\r\n            .slideUp()\r\n            .removeClass('active')\r\n            .prev()\r\n            .removeClass('active')\r\n            .parents('.mw-accordion-item').eq(0)\r\n            .removeClass('active');\r\n\r\n        mw.$(this).trigger('accordionUnset', [item]);\r\n    }\r\n\r\n    this.toggle = function (index) {\r\n        var item = this.getItem(index);\r\n        if (item.hasClass('active')) {\r\n            if (this.options.toggle) {\r\n                this.unset(item)\r\n            }\r\n        }\r\n        else {\r\n            this.set(item)\r\n        }\r\n    }\r\n\r\n    this.init = function (options) {\r\n        this.prepare(options);\r\n        if(typeof(this.contents) !== 'undefined'){\r\n            this.contents.hide()\r\n        }\r\n\r\n        if (this.options.openFirst) {\r\n            if(typeof(this.contents) !== 'undefined'){\r\n                this.contents.eq(0).show().addClass('active')\r\n            }\r\n            if(typeof(this.titles) !== 'undefined'){\r\n                this.titles.eq(0).addClass('active').parent('.mw-accordion-item').addClass('active');\r\n            }\r\n        }\r\n        if(typeof(this.titles) !== 'undefined') {\r\n            this.titles.on('click', function () {\r\n                scope.toggle(scope.titles.index(this));\r\n            });\r\n        }\r\n    }\r\n\r\n    this.init(options);\r\n\r\n};\r\n\r\n\r\nmw.tabAccordion = function (options, accordion) {\r\n    if (!options) return;\r\n    var scope = this;\r\n    this.options = options;\r\n\r\n    this.options.breakPoint = this.options.breakPoint || 800;\r\n    this.options.activeClass = this.options.activeClass || 'active';\r\n\r\n\r\n    this.buildAccordion = function () {\r\n        this.accordion = accordion || new mw.uiAccordion(this.options);\r\n    }\r\n\r\n    this.breakPoint = function () {\r\n        if (matchMedia(\"(max-width: \" + this.options.breakPoint + \"px)\").matches) {\r\n            mw.$(this.nav).hide();\r\n            mw.$(this.accordion.titles).show();\r\n        }\r\n        else {\r\n            mw.$(this.nav).show();\r\n            mw.$(this.accordion.titles).hide();\r\n        }\r\n    }\r\n\r\n    this.createTabButton = function (content, index) {\r\n        this.buttons = this.buttons || mw.$();\r\n        var btn = document.createElement('span');\r\n        this.buttons.push(btn)\r\n        var size = (this.options.tabsSize ? ' mw-ui-btn-' + this.options.tabsSize : '');\r\n        var color = (this.options.tabsColor ? ' mw-ui-btn-' + this.options.tabsColor : '');\r\n        var active = (index === 0 ? (' ' + this.options.activeClass) : '');\r\n        btn.className = (active + ' mw-admin-action-links mw-adm-liveedit-tabs mx-1');\r\n        btn.innerHTML = content;\r\n        btn.onclick = function () {\r\n            scope.buttons.removeClass(scope.options.activeClass).eq(index).addClass(scope.options.activeClass);\r\n            scope.accordion.set(index);\r\n        }\r\n        return btn;\r\n    }\r\n\r\n    this.createTabs = function () {\r\n        this.nav = document.createElement('div');\r\n        this.nav.className = 'mx-3 mb-3';\r\n        mw.$(this.accordion.titles)\r\n            .each(function (i) {\r\n                scope.nav.appendChild(scope.createTabButton($(this).html(), i))\r\n            })\r\n            .hide();\r\n        mw.$(this.accordion.root).before(this.nav)\r\n    }\r\n\r\n    this.init = function () {\r\n        this.buildAccordion();\r\n        this.createTabs();\r\n        this.breakPoint();\r\n        mw.$(window).on('load resize orientationchange', function () {\r\n            scope.breakPoint();\r\n        });\r\n    };\r\n\r\n    this.init();\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/uiaccordion.js?");

/***/ }),

/***/ "./resources/assets/components/uploader.js":
/*!*************************************************!*\
  !*** ./resources/assets/components/uploader.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n;(function (){\r\n\r\n    var Uploader = function( options ) {\r\n        //var upload = function( url, data, callback, type ) {\r\n        options = options || {};\r\n        options.accept = options.accept || options.filetypes || options.type;\r\n        var defaults = {\r\n            multiple: false,\r\n            progress: null,\r\n            element: null,\r\n            url: options.url || (mw.settings.site_url + 'plupload'),\r\n            urlParams: {},\r\n            on: {},\r\n            autostart: true,\r\n            async: true,\r\n            accept: '*',\r\n            chunkSize: 1500000,\r\n        };\r\n\r\n        var normalizeAccept = function (type) {\r\n\r\n            type = (type || '').trim().toLowerCase();\r\n            if(!type) return '*';\r\n            if (type === 'image' || type === 'images') return '.png,.gif,.jpg,.jpeg,.bmp,.svg,.ico,.avif,.webp';\r\n            if (type === 'video' || type === 'videos') return '.mp4,.webm,.ogg,.wma,.mov,.wmv';\r\n            if (type === 'document' || type === 'documents') return '.doc,.docx,.log,.pdf,.msg,.odt,.pages,' +\r\n                '.rtf,.tex,.txt,.wpd,.wps,.pps,.ppt,.pptx,.xml,.htm,.html,.xlr,.xls,.xlsx';\r\n\r\n            return '*';\r\n        };\r\n\r\n        var scope = this;\r\n        this.settings = $.extend({}, defaults, options);\r\n\r\n        this.settings.accept = normalizeAccept(this.settings.accept);\r\n\r\n        var _e = {};\r\n\r\n        this.on = function (e, f) { _e[e] ? _e[e].push(f) : (_e[e] = [f]) };\r\n\r\n        this.dispatch = function (e, f) { _e[e] ? _e[e].forEach(function (c){ c.call(this, f); }) : ''; };\r\n\r\n\r\n        this.getUrl = function () {\r\n            var params = this.urlParams();\r\n            var empty = mw.tools.isEmptyObject(params);\r\n            return this.url() + (empty ? '' : ('?' + $.param(params)));\r\n        };\r\n\r\n        this.urlParam = function (param, value) {\r\n            if(typeof value === 'undefined') {\r\n                return this.settings.urlParams[param];\r\n            }\r\n            this.settings.urlParams[param] = value;\r\n        };\r\n\r\n        this.urlParams = function (params) {\r\n            if(!params) {\r\n                return this.settings.urlParams;\r\n            }\r\n            this.settings.urlParams = params;\r\n        };\r\n\r\n        this.url = function (url) {\r\n            if(!url) {\r\n                return this.settings.url;\r\n            }\r\n            this.settings.url = url;\r\n        };\r\n\r\n        this.create = function () {\r\n            this.input = document.createElement('input');\r\n            this.input.multiple = this.settings.multiple;\r\n            this.input.accept = this.settings.accept;\r\n            this.input.type = 'file';\r\n            this.input.className = 'mw-uploader-input';\r\n            this.input.oninput = function () {\r\n                scope.addFiles(this.files);\r\n            };\r\n        };\r\n\r\n        this.files = [];\r\n        this._uploading = false;\r\n        this.uploading = function (state) {\r\n            if(typeof state === 'undefined') {\r\n                return this._uploading;\r\n            }\r\n            this._uploading = state;\r\n        };\r\n\r\n        this._validateAccept = this.settings.accept\r\n            .toLowerCase()\r\n            .replace(/\\*/g, '')\r\n            .replace(/ /g, '')\r\n            .split(',')\r\n            .filter(function (item) {\r\n                return !!item;\r\n            });\r\n        this.validate = function (file) {\r\n            if(!file) return false;\r\n            var ext = '.' + file.name.split('.').pop().toLowerCase();\r\n            if (this._validateAccept.length === 0) {\r\n                return true;\r\n            }\r\n            for (var i = 0; i < this._validateAccept.length; i++) {\r\n                var item =  this._validateAccept[i];\r\n                if(item === ext) {\r\n                    return true;\r\n                }\r\n                else if(file.type.indexOf(item) === 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n\r\n        };\r\n\r\n        this.addFile = function (file) {\r\n            if(this.validate(file)) {\r\n                if(!this.files.length || this.settings.multiple){\r\n                    this.files.push(file);\r\n                    if(this.settings.on.fileAdded) {\r\n                        this.settings.on.fileAdded(file);\r\n                    }\r\n                    $(scope).trigger('FileAdded', file);\r\n                } else {\r\n                    this.files = [file];\r\n                    $(scope).trigger('FileAdded', file);\r\n                    if(this.settings.on.fileAdded) {\r\n                        this.settings.on.fileAdded(file);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.addFiles = function (files) {\r\n\r\n            if(!files || !files.length) return;\r\n\r\n            if(!this.settings.multiple) {\r\n                files = [files[0]];\r\n            }\r\n            if (files && files.length) {\r\n                for (var i = 0; i < files.length; i++) {\r\n                    scope.addFile(files[i]);\r\n                }\r\n                if(this.settings.on.filesAdded) {\r\n                    if(this.settings.on.filesAdded(files) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n                $(scope).trigger('FilesAdded', [files]);\r\n                this.dispatch('filesAdded', [files]);\r\n                if(this.settings.autostart) {\r\n                    this.uploadFiles();\r\n                }\r\n            }\r\n        };\r\n\r\n        this.remove = function () {\r\n            if(this.input.parentNode) {\r\n                this.input.parentNode.removeChild(this.input);\r\n            }\r\n        }\r\n\r\n        this.build = function () {\r\n            if(this.settings.element) {\r\n                this.$element = $(this.settings.element);\r\n                this.element = this.$element[0];\r\n\r\n                if(this.element) {\r\n                    this.$element/*.empty()*/.append(this.input);\r\n                    var pos = getComputedStyle(this.element).position;\r\n                    if(pos === 'static') {\r\n                        this.element.style.position = 'relative';\r\n                    }\r\n                    this.element.style.overflow = 'hidden';\r\n                }\r\n            }\r\n        };\r\n\r\n        this.show = function () {\r\n            this.$element.show();\r\n        };\r\n\r\n        this.hide = function () {\r\n            this.$element.hide();\r\n        };\r\n\r\n        this.initDropZone = function () {\r\n            if (!!this.settings.dropZone) {\r\n                mw.$(this.settings.dropZone).each(function () {\r\n                    $(this)\r\n                    .on('dragleave', function (e) {\r\n                        $(this).removeClass(\"mw-dropzone--drag-over\");\r\n                    })\r\n                    .on('dragover', function (e) {\r\n                        $(this).addClass(\"mw-dropzone--drag-over\");\r\n                        e.preventDefault();\r\n                    }).on('drop', function (e) {\r\n                        $(this).removeClass(\"mw-dropzone--drag-over\");\r\n                        var dt = e.dataTransfer || e.originalEvent.dataTransfer;\r\n                        e.preventDefault();\r\n                        if (dt && dt.items) {\r\n                            var files = [];\r\n                            for (var i = 0; i < dt.items.length; i++) {\r\n                                if (dt.items[i].kind === 'file') {\r\n                                    var file = dt.items[i].getAsFile();\r\n                                    files.push(file);\r\n                                }\r\n                            }\r\n                            scope.addFiles(files);\r\n                        } else  if (dt && dt.files)  {\r\n                            scope.addFiles(dt.files);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        };\r\n\r\n\r\n        this.init = function() {\r\n            this.create();\r\n            this.build();\r\n            this.initDropZone();\r\n        };\r\n\r\n        this.init();\r\n\r\n        this.removeFile = function (file) {\r\n            var i = this.files.indexOf(file);\r\n            if (i > -1) {\r\n                this.files.splice(i, 1);\r\n            }\r\n        };\r\n\r\n        var beforeFileUpload = function () {\r\n            if(scope.settings.on.beforeFileUpload) {\r\n                return scope.settings.on.beforeFileUpload(this);\r\n            } else {\r\n                return new Promise(function (resolve){\r\n                    resolve();\r\n                });\r\n            }\r\n        };\r\n\r\n        this.uploadFile = function (file, done, chunks, _all, _i) {\r\n            return new Promise(function (resolve, reject) {\r\n                beforeFileUpload().then(function (){\r\n                        chunks = chunks || scope.sliceFile(file);\r\n                        _all = _all || chunks.length;\r\n                        _i = _i || 0;\r\n                        var chunk = chunks.shift();\r\n                        var data = {\r\n                            name: file.name,\r\n                            chunk: _i,\r\n                            chunks: _all,\r\n                            file: chunk,\r\n                        };\r\n                        _i++;\r\n                        $(scope).trigger('uploadStart', [data]);\r\n\r\n                        scope.upload(data, function (res) {\r\n                            var dataProgress;\r\n                            if(chunks.length) {\r\n                                scope.uploadFile(file, done, chunks, _all, _i).then(function (){\r\n                                    if (done) {\r\n                                        done.call(file, res);\r\n                                    }\r\n                                    resolve(file);\r\n                                }, function (xhr){\r\n                                    if(scope.settings.on.fileUploadError) {\r\n                                        scope.settings.on.fileUploadError(xhr);\r\n                                    }\r\n                                });\r\n                                dataProgress = {\r\n                                    percent: ((100 * _i) / _all).toFixed()\r\n                                };\r\n                                $(scope).trigger('progress', [dataProgress, res]);\r\n                                if(scope.settings.on.progress) {\r\n                                    scope.settings.on.progress(dataProgress, res);\r\n                                }\r\n\r\n                            } else {\r\n                                dataProgress = {\r\n                                    percent: '100'\r\n                                };\r\n                                $(scope).trigger('progress', [dataProgress, res]);\r\n                                if(scope.settings.on.progress) {\r\n                                    scope.settings.on.progress(dataProgress, res);\r\n                                }\r\n                                $(scope).trigger('FileUploaded', [res]);\r\n                                scope.dispatch('fileUploaded', res);\r\n\r\n                                if(scope.settings.on.fileUploaded) {\r\n                                    scope.settings.on.fileUploaded(res);\r\n                                }\r\n                                if (done) {\r\n                                    done.call(file, res);\r\n                                }\r\n                                resolve(file);\r\n                            }\r\n                        }, function (req) {\r\n\r\n                            if(req && req.status === 400){\r\n                                if(typeof mw.cookie !== 'undefined'){\r\n                                    mw.cookie.delete('XSRF-TOKEN');\r\n                                }\r\n                            }\r\n\r\n                            var msg = false;\r\n\r\n                            if (req.responseJSON && req.responseJSON.error && req.responseJSON.error.message) {\r\n                                msg = req.responseJSON.error.message;\r\n                            } else if (req.responseJSON && req.responseJSON.error && req.responseJSON.message) {\r\n                                msg = req.responseJSON.message;\r\n                            }\r\n\r\n                            if (msg) {\r\n                                mw.notification.warning(msg, 10000);\r\n                            }\r\n                            scope.removeFile(file);\r\n                            reject(req);\r\n                        });\r\n                    });\r\n                });\r\n        };\r\n\r\n        this.sliceFile = function(file) {\r\n            var byteIndex = 0;\r\n            var chunks = [];\r\n            var chunksAmount = file.size <= this.settings.chunkSize ? 1 : ((file.size / this.settings.chunkSize) >> 0) + 1;\r\n\r\n            for (var i = 0; i < chunksAmount; i ++) {\r\n                var byteEnd = Math.ceil((file.size / chunksAmount) * (i + 1));\r\n                chunks.push(file.slice(byteIndex, byteEnd));\r\n                byteIndex += (byteEnd - byteIndex);\r\n            }\r\n\r\n            return chunks;\r\n        };\r\n\r\n        this.uploadFiles = function () {\r\n            if (this.settings.async) {\r\n                 if (this.files.length) {\r\n                    this.uploading(true);\r\n                    var file = this.files[0]\r\n                    scope.uploadFile(file)\r\n                        .then(function (){\r\n                        scope.files.shift();\r\n                        scope.uploadFiles();\r\n                    }, function (xhr){\r\n                            scope.removeFile(file);\r\n                            if(scope.settings.on.fileUploadError) {\r\n                                scope.settings.on.fileUploadError(xhr)\r\n                            }\r\n                        });\r\n\r\n                } else {\r\n                    this.uploading(false);\r\n                    scope.input.value = '';\r\n                    if(scope.settings.on.filesUploaded) {\r\n                        scope.settings.on.filesUploaded();\r\n                    }\r\n                    this.dispatch('filesUploaded')\r\n                    $(scope).trigger('FilesUploaded');\r\n\r\n                }\r\n            } else {\r\n                var count = 0;\r\n                var all = this.files.length;\r\n                this.uploading(true);\r\n                this.files.forEach(function (file) {\r\n                    scope.uploadFile(file)\r\n                        .then(function (file){\r\n                            count++;\r\n                            scope.uploading(false);\r\n                            if(all === count) {\r\n                                scope.input.value = '';\r\n                                if(scope.settings.on.filesUploaded) {\r\n                                    scope.settings.on.filesUploaded();\r\n                                }\r\n                                $(scope).trigger('FilesUploaded');\r\n                            }\r\n                        }, function (xhr){\r\n                            if(scope.settings.on.fileUploadError) {\r\n                                scope.settings.on.fileUploadError(xhr)\r\n                            }\r\n                        });\r\n                });\r\n            }\r\n        };\r\n\r\n\r\n        this.upload = function (data, done, onFail) {\r\n            if (!this.settings.url) {\r\n                return;\r\n            }\r\n            var pdata = new FormData();\r\n            $.each(data, function (key, val) {\r\n                pdata.append(key, val);\r\n            });\r\n            if(scope.settings.on.uploadStart) {\r\n                if (scope.settings.on.uploadStart(pdata) === false) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n\r\n            var xhrOptions = {\r\n                url: this.getUrl(),\r\n                type: 'post',\r\n                processData: false,\r\n                contentType: false,\r\n                data: pdata,\r\n                success: function (data, statusText, xhrReq) {\r\n\r\n                    if(xhrReq.status === 200) {\r\n                        if (data && (data.form_data_required || data.form_data_module)) {\r\n                            mw.extradataForm(xhrOptions, data, jQuery.ajax);\r\n                        }\r\n                        else {\r\n                            scope.removeFile(data.file);\r\n                            if(done) {\r\n                                done.call(data, data);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                },\r\n                error:  function(  xhrReq, edata, statusText ) {\r\n                    scope.removeFile(data.file);\r\n                    if (onFail) {\r\n                        onFail.call(xhrReq, xhrReq);\r\n                    }\r\n                },\r\n                dataType: 'json',\r\n                xhr: function () {\r\n                    var xhr = new XMLHttpRequest();\r\n\r\n                    xhr.upload.addEventListener('progress', function (event) {\r\n                        if (event.lengthComputable) {\r\n                            var percent = (event.loaded / event.total) * 100;\r\n                            if(scope.settings.on.progressNative) {\r\n                                scope.settings.on.progressNative(percent, event);\r\n                            }\r\n                            $(scope).trigger('progressNative', [percent, event]);\r\n                        }\r\n                    });\r\n\r\n                    return xhr;\r\n                }\r\n            };\r\n\r\n            // var tokenFromCookie = mw.cookie.get(\"XSRF-TOKEN\");\r\n            // if (typeof tokenFromCookie !== 'undefined') {\r\n            //     $.ajaxSetup({\r\n            //         headers: {\r\n            //             'X-XSRF-TOKEN': tokenFromCookie\r\n            //         }\r\n            //     });\r\n            // }\r\n            //\r\n\r\n\r\n\r\n            return jQuery.ajax(xhrOptions);\r\n        };\r\n    };\r\n\r\n    if(!mw.uploadGlobalSettings) {\r\n        mw.uploadGlobalSettings = {};\r\n    }\r\n\r\n    mw.upload = function (options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n\r\n        return new Uploader($.extend(true, {}, mw.uploadGlobalSettings, options));\r\n    };\r\n\r\n    mw.dropZone = (target, options = {}) => {\r\n        if (target.dropZone) {\r\n            options = target;\r\n            target = target.dropZone;\r\n        }\r\n        options.dropZone = target\r\n        jQuery(target).each((i, node) => node.classList.add('mw-dropzone'));\r\n        const up = mw.upload(options);\r\n        up.on('filesAdded', function (e) {\r\n            mw.spinner({element: target, decorate: true}).show()\r\n        });\r\n        up.on('filesUploaded', function (e) {\r\n            mw.spinner({element: target}).remove()\r\n        });\r\n        return up;\r\n    }\r\n\r\n\r\n\r\n})();\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/components/uploader.js?");

/***/ }),

/***/ "./resources/assets/containers/base-class.js":
/*!***************************************************!*\
  !*** ./resources/assets/containers/base-class.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass MicroweberBaseClass {\r\n    #events = {};\r\n    on(e, f) {\r\n        this.#events[e] ? this.#events[e].push(f) : (this.#events[e] = [f]);\r\n        return this;\r\n    };\r\n    off(e, f) {\r\n        if(!this.#events[e]) {\r\n            return this;\r\n        }\r\n        if(typeof f === 'function') {\r\n            const index = this.#events[e].indexOf(f);\r\n            if(index === -1) {\r\n                return this;\r\n            }\r\n            this.#events[e].splice(index, 1);\r\n        } else {\r\n            this.#events[e] = [];\r\n        }\r\n        return this;\r\n    };\r\n\r\n    dispatch (e, f, f2) {\r\n        this.#events[e] ? this.#events[e].forEach(function (c) {\r\n            c.call(this, f);\r\n        }) : '';\r\n        return this;\r\n    };\r\n\r\n    emit (e, f) {\r\n        return this.dispatch(e, f)\r\n    };\r\n\r\n    #styles = {};\r\n\r\n    css(id, styles, forced) {\r\n        if(!this.#styles[id] || forced) {\r\n            this.#styles[id] = true;\r\n            const style = document.createElement('style');\r\n            style.appendChild(document.createTextNode(styles));\r\n            document.head.appendChild(style);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MicroweberBaseClass);\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/containers/base-class.js?");

/***/ }),

/***/ "./resources/assets/core/@core.js":
/*!****************************************!*\
  !*** ./resources/assets/core/@core.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _options_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./options.js */ \"./resources/assets/core/options.js\");\n\n\nmw.pauseSave = false;\n\nmw.askusertostay = false;\n\nif (window.top === window){\n    window.onbeforeunload = function() {\n        if (mw.askusertostay) {\n            mw.notification.warning(mw.lang('You have unsaved changes'));\n            return mw.lang('You have unsaved changes');\n        }\n    };\n}\n\n\nwindow.mwd = document;\nwindow.mww  = window;\n\n\n\nmw.doc = document;\nmw.win = window;\n\n\nmw.loaded = false;\n\nmw._random = new Date().getTime();\n\nmw.random = function() {\n    return mw._random++;\n};\n\nmw.id = function(prefix) {\n    prefix = prefix || 'mw-';\n    return prefix + mw.random();\n};\n\nmw.onLive = function(callback) {\n    if (typeof mw.settings.liveEdit === 'boolean' && mw.settings.liveEdit) {\n        callback.call(this)\n    }\n};\nmw.onAdmin = function(callback) {\n    if ( window['mwAdmin'] ) {\n        callback.call(this);\n    }\n};\n\n\nmw.target = {};\n\nmw.log = function() {\n    if (mw.settings.debug) {\n        top.console.log(...arguments);\n    }\n};\n\n\nmw.$ = function(selector, context) {\n    if(typeof selector === 'object' || (typeof selector === 'string' && selector.indexOf('<') !== -1)){ return jQuery(selector); }\n    context = context || document;\n    if (typeof document.querySelector !== 'undefined') {\n        if (typeof selector === 'string') {\n            try {\n                return jQuery(context.querySelectorAll(selector));\n            } catch (e) {\n                return jQuery(selector, context);\n            }\n        } else {\n            return jQuery(selector, context);\n        }\n    } else {\n        return jQuery(selector, context);\n    }\n};\n\n\nmw.parent = function(){\n    if(window === top){\n        return window.mw;\n    }\n    if(mw.tools.canAccessWindow(parent) && parent.mw){\n        return parent.mw;\n    }\n    return window.mw;\n};\n\nmw.top = function() {\n    if(!!mw.__top){\n        return mw.__top;\n    }\n    var getLastParent = function() {\n        var result = window;\n        var curr = window;\n        while (curr && mw.tools.canAccessWindow(curr) && (curr.mw || curr.parent.mw)){\n            result = curr;\n            curr = curr.parent;\n        }\n        mw.__top = curr.mw;\n        return result.mw;\n    };\n    if(window === top){\n        mw.__top = window.mw;\n        return window.mw;\n    } else {\n        if(mw.tools.canAccessWindow(top) && top.mw){\n            mw.__top = top.mw;\n            return top.mw;\n        } else{\n            if(window.top !== window.parent){\n                return getLastParent();\n            }\n            else{\n                mw.__top = window.mw;\n                return window.mw;\n            }\n        }\n    }\n};\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/@core.js?");

/***/ }),

/***/ "./resources/assets/core/_.js":
/*!************************************!*\
  !*** ./resources/assets/core/_.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nmw.temp_reload_module_queue_holder = [];\n\n\n\n\nmw[\"_\"] = function(obj, sendSpecific, DONOTREPLACE) {\n    if(mw.on){\n        mw.on.DOMChangePause = true;\n    }\n    var url = typeof obj.url !== 'undefined' ? obj.url : mw.settings.site_url+'module/';\n    var selector = typeof obj.selector !== 'undefined' ? obj.selector : '';\n    var params =  typeof obj.params !== 'undefined' ? obj.params : {};\n    var to_send = params;\n    if(typeof $(obj.selector)[0] === 'undefined') {\n        mw.pauseSave = false;\n        mw.on.DOMChangePause = false;\n        return false;\n    }\n    if(mw.session){\n        mw.session.checkPause = true;\n    }\n    var $node = $(obj.selector);\n    var node = $node[0];\n    var attrs = node.attributes;\n\n\n\n    // wait between many reloads\n    if (node.id) {\n        if ( mw.temp_reload_module_queue_holder.indexOf(node.id) === -1){\n            mw.temp_reload_module_queue_holder.push(node.id);\n            setTimeout(function() {\n                var reload_index = mw.temp_reload_module_queue_holder.indexOf(node.id);\n                delete mw.temp_reload_module_queue_holder[reload_index];\n            }, 300);\n        } else {\n            return;\n        }\n    }\n\n    if (sendSpecific) {\n        attrs[\"class\"] !== undefined ? to_send[\"class\"] = attrs[\"class\"].nodeValue : \"\";\n        attrs[\"data-module-name\"] !== undefined ? to_send[\"data-module-name\"] = attrs[\"data-module-name\"].nodeValue : \"\";\n        attrs[\"data-type\"] !== undefined ? to_send[\"data-type\"] = attrs[\"data-type\"].nodeValue : \"\";\n        attrs[\"type\"] !== undefined ? to_send[\"type\"] = attrs[\"type\"].nodeValue : \"\";\n        attrs[\"template\"] !== undefined ? to_send[\"template\"] = attrs[\"template\"].nodeValue : \"\";\n        attrs[\"ondrop\"] !== undefined ? to_send[\"ondrop\"] = attrs[\"ondrop\"].nodeValue : \"\";\n    }\n    else {\n        for (var i in attrs) {\n            if(attrs[i] !== undefined){\n                var name = attrs[i].name;\n                var val = attrs[i].nodeValue;\n                if(typeof to_send[name] === 'undefined'){\n                    to_send[name]  = val;\n                }\n            }\n        }\n    }\n    var b = true;\n    for (var a in to_send) {\n        if(to_send.hasOwnProperty(a)) { b = false; }\n    }\n    if(b){\n        mw.tools.removeClass(document.body, 'loading');\n        mw.pauseSave = false;\n        mw.on.DOMChangePause = false;\n        return false;\n    }\n\n    var storedValues = $node.get(0).dataset['storeValues'] === 'true' ? {} : false;\n    if(storedValues) {\n        $node.find('[name]').each(function () {\n            storedValues[this.name] = $(this).val();\n        })\n    }\n\n    var xhr = $.post(url, to_send, function(data) {\n\n        if(!!mw.session){\n            mw.session.checkPause = false;\n        }\n        if(DONOTREPLACE){\n\n            mw.tools.removeClass(document.body, 'loading');\n            mw.pauseSave = false;\n            mw.on.DOMChangePause = false;\n            return false;\n        }\n\n        var docdata = mw.tools.parseHtml(data);\n\n        if(storedValues) {\n            mw.$('[name]', docdata).each(function(){\n                var el = $(this);\n                if(!el.val()) {\n                    el.val(storedValues[this.name] || undefined);\n                    this.setAttribute(\"value\", storedValues[this.name] || '');\n                }\n            })\n        }\n\n        var hasDone = typeof obj.done === 'function';\n        var id;\n        if (typeof to_send.id  !== 'undefined') {\n            id = to_send.id;\n        } else{\n            id = docdata.body.querySelector(['id']);\n        }\n        mw.$(selector).replaceWith($(docdata.body).html());\n        var count = 0;\n        if(hasDone){\n            setTimeout(function(){\n                count++;\n                obj.done.call($(selector)[0], data);\n                mw.trigger('moduleLoaded');\n            }, 33);\n        }\n\n        if(!id){\n            mw.pauseSave = false;\n            mw.on.DOMChangePause = false;\n            return false;\n        }\n\n\n        typeof mw.drag !== 'undefined' ? mw.drag.fix_placeholders(true) : '';\n        var m = document.getElementById(id);\n        // typeof obj.done === 'function' ? obj.done.call(selector, m) : '';\n\n        if(mw.wysiwyg){\n            $(m).hasClass(\"module\") ? mw.wysiwyg.init_editables(m) : '' ;\n        }\n\n\n        if(mw.on && !hasDone){\n            mw.on.moduleReload(id, \"\", true);\n            mw.trigger('moduleLoaded');\n        }\n        if($.fn.selectpicker) {\n            $('.selectpicker').selectpicker();\n        }\n        if (mw.on) {\n            mw.on.DOMChangePause = false;\n        }\n        mw.tools.removeClass(document.body, 'loading');\n\n\n    })\n        .fail(function(){\n            mw.pauseSave = false;\n            typeof obj.fail === 'function' ? obj.fail.call(selector) : '';\n        })\n        .always(function(){\n            mw.pauseSave = false;\n        });\n    return xhr;\n};\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/_.js?");

/***/ }),

/***/ "./resources/assets/core/ajax.js":
/*!***************************************!*\
  !*** ./resources/assets/core/ajax.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nvar _jqxhr = jQuery.ajax;\nmw.jqxhr = _jqxhr;\n\n\n\n\njQuery.ajax = function(url, options){\n    options = options || {};\n    var settings = {};\n    if(typeof url === 'object'){\n        $.extend(settings, url);\n    }\n    else{\n        settings.url = url;\n    }\n    if(typeof settings.success === 'function'){\n        settings._success = settings.success;\n        delete settings.success;\n        settings.success = function (data, status, xhr) {\n            if(xhr.status === 200) {\n                if (data && (data.form_data_required || data.form_data_module)) {\n                    mw.extradataForm(settings, data);\n                }\n                else {\n                    if (typeof this._success === 'function') {\n                        var scope = this;\n                        scope._success.call(scope, data, status, xhr);\n\n                    }\n                }\n            }\n        };\n    }\n    settings = $.extend({}, settings, options);\n    return _jqxhr(settings);\n};\n\n$.ajaxSetup({\n    cache: false,\n    error: function (xhr, e) {\n        if(xhr.status === 422){\n            mw.errorsHandle(xhr.responseJSON)\n        } else if(xhr.status !== 200 && xhr.status !== 0){\n            mw.notification.error('Error ' + xhr.status + ' - ' + xhr.statusText + ' - \\r\\n' + xhr.responseText );\n            setTimeout(function(){\n                mw.tools.loading(false);\n            }, 333);\n        }\n    }\n});\n\n\njQuery.cachedScript = function( url, options ) {\n    options = $.extend( options || {}, {\n        dataType: \"script\",\n        cache: true,\n        url: url\n    });\n    return jQuery.ajax( options );\n};\n\n\nmw.getScripts = function (array, callback) {\n    if(typeof array === 'string'){\n        array = array.split(',')\n    }\n    array = array.filter(function (item) {\n        return !!item.trim();\n    });\n    var all = array.length, ready = 0;\n    $.each(array, function(){\n        var scr = $('<script>');\n        $(scr).on('load', function(){\n            ready++;\n            if(all === ready) {\n                callback.call()\n            }\n        });\n        scr[0].src = this.indexOf('//') !== -1 ? this : mw.settings.includes_url + 'api/' + this;\n        document.body.appendChild(scr[0]);\n    });\n};\n\nmw.moduleCSS = mw.module_css = function(url){\n    if (!~mw.required.indexOf(url)) {\n        mw.required.push(url);\n        var el = document.createElement('link');\n        el.rel='stylesheet';\n        el.type='text/css';\n        el.href = url;\n        document.head.insertBefore(el, document.head.firstChild);\n    }\n};\nmw.moduleJS = mw.module_js = function(url){\n    mw.require(url, true);\n};\n\n\n// Modules\n\nmw.load_module = function(name, selector, callback, attributes) {\n    attributes = attributes || {};\n    attributes.module = name;\n    return mw._({\n        selector: selector,\n        params: attributes,\n        done: function() {\n            mw.settings.sortables_created = false;\n            if (typeof callback === 'function') {\n\n                callback.call(this);\n            }\n        }\n    });\n}\n\nmw.loadModuleData = function(name, update_element, callback, attributes){\n\n\n    attributes = attributes || {};\n\n    if(typeof update_element == 'function'){\n        callback = update_element;\n    }\n    update_element = document.createElement('div');\n    attributes.module = name;\n    mw._({\n        selector: update_element,\n        params: attributes\n    }, false, true)\n        .done(function(data){\n\n            setTimeout(function(){\n                callback.call(this, data);\n                $(document).off('focusin.modal');\n            }, 50)\n\n        });\n}\nmw.getModule = function(name, params, callback){\n    if( typeof params == 'function'){\n        callback = params;\n    }\n    params = params || {};\n    var update_element = document.createElement('div');\n    for(var x in params){\n        update_element.setAttribute(x, params[x]);\n    }\n    mw.loadModuleData(name, update_element, function(a){\n        callback.call(a);\n    });\n}\n\nmw.reload_module_intervals = {};\nmw.reload_module_interval = function(module_name, interval) {\n    interval =  interval || 1000;\n    var obj = {pause:false};\n    if(!!mw.reload_module_intervals[module_name]){\n        clearInterval(mw.reload_module_intervals[module_name]);\n    }\n    mw.reload_module_intervals[module_name] = setInterval(function(){\n        if(!obj.pause){\n            obj.pause = true;\n            mw.reload_module(module_name, function(){\n                obj.pause = false;\n            });\n        }\n    }, interval);\n    return mw.reload_module_intervals['module_name'];\n}\n\nmw.reload_module_parent = function(module, callback) {\n    if(self !== parent && !!parent.mw){\n\n        parent.mw.reload_module(module, callback)\n        if(typeof(top.mweditor) != 'undefined'  && typeof(top.mweditor) == 'object'   && typeof(top.mweditor.contentWindow) != 'undefined'){\n            top.mweditor.contentWindow.mw.reload_module(module, callback)\n        } else if(typeof(mw.top().win.iframe_editor_window) != 'undefined'  && typeof(mw.top().win.iframe_editor_window) == 'object'   && typeof(mw.top().win.iframe_editor_window.mw) != 'undefined'){\n\n            mw.top().win.iframe_editor_window.mw.reload_module(module, callback)\n        }\n\n        if(typeof(parent.mw_preview_frame_object) != 'undefined'  && typeof(parent.mw_preview_frame_object) == 'object'   && typeof(parent.mw_preview_frame_object.contentWindow) != 'undefined'){\n            if(parent.mw_preview_frame_object.contentWindow != null && typeof(parent.mw_preview_frame_object.contentWindow.mw) != 'undefined'){\n                parent.mw_preview_frame_object.contentWindow.mw.reload_module(module, callback)\n            }\n        }\n    } else {\n        if(typeof(mweditor) != 'undefined'  && typeof(mweditor) == 'object'   && typeof(mweditor.contentWindow) != 'undefined' && typeof(mweditor.contentWindow.mw) != 'undefined'){\n            mweditor.contentWindow.mw.reload_module(module, callback)\n        }\n\n    }\n}\nmw.reload_modules = function(array, callback, simultaneously) {\n\n\n\n\n\n\n\n\n\n\n\n    if(array.array && !array.slice){\n        callback = array.callback || array.done || array.ready;\n        simultaneously = array.simultaneously;\n        array = array.array;\n    }\n    simultaneously = simultaneously || false;\n    if(simultaneously){\n        var l = array.length, ready = 0, i = 0;\n        for( ; i<l; i++){\n            mw.reload_module(array[i], function(){\n                ready++;\n                if(ready === l && callback){\n                    callback.call();\n                }\n            });\n        }\n    }\n    else{\n        if(array.length === 0){\n            if(callback){\n                callback.call()\n            }\n        }\n        else{\n            var m = array[0];\n            array.shift();\n            mw.reload_module(m, function(){\n                mw.reload_modules(array, callback, false);\n            });\n        }\n    }\n};\nmw.reload_module_everywhere = function(module, eachCallback) {\n\n    mw.tools.eachWindow(function () {\n        if(this.mw && this.mw.reload_module){\n            this.mw.reload_module(module, function(){\n                if(typeof eachCallback === 'function'){\n                    eachCallback.call(this);\n                }\n            })\n        }\n    })\n};\n\nmw.reload_module = async function(module, callback) {\n\n    if(module.constructor === [].constructor){\n        var l = module.length, i=0, w = 1;\n        for( ; i<l; i++){\n            mw.reload_module(module[i], function(){\n                w++;\n                if(w === l && typeof callback === 'function'){\n                    callback.call();\n                }\n                $( this ).trigger('ModuleReload')\n            });\n        }\n        return false;\n    }\n    var done = callback || function(){};\n\n    const refreshLiveWireModule = async module => {\n        const component = Livewire.find(module.getAttribute('wire:id'));\n        await component.$refresh();\n    }\n\n\n    if (typeof module !== 'undefined') {\n        if (typeof module === 'object') {\n\n            if(module.getAttribute('wire:id')) {\n                await refreshLiveWireModule(module);\n                done.call();\n            } else{\n                mw._({\n                    selector: module,\n                    done: done\n                });\n            }\n\n\n        } else {\n            var module_name = module.toString();\n            var refresh_modules_explode = module_name.split(\",\");\n            for (var i = 0; i < refresh_modules_explode.length; i++) {\n                var module = refresh_modules_explode[i];\n\n                if (typeof module != 'undefined') {\n                    module = module.replace(/##/g, '#');\n                    var m = mw.$(\".module[data-type='\" + module + \"']\");\n                    if (m.length === 0) {\n                        try {   m = $(module); }  catch(e) {};\n                    }\n\n                    (function(callback){\n                        var count = 0;\n                        for (var i=0;i<m.length;i++){\n                            mw.reload_module(m[i], function(){\n                                count++;\n                                if(count === m.length && typeof callback === 'function'){\n                                    callback.call();\n                                }\n                                $( document ).trigger('ModuleReload')\n                            })\n                        }\n                    })(callback)\n\n\n\n                }\n            }\n        }\n    }\n}\n\nmw.clear_cache = function() {\n    $.ajax({\n        url: mw.settings.site_url+'api/clearcache',\n        type: \"POST\",\n        success: function(data){\n            if(mw.notification != undefined){\n                mw.notification.msg(data);\n\n            }\n        }\n    });\n}\n\n\n\nmw.get = function(action, params, callback){\n    var obj;\n    var url = mw.settings.api_url + action;\n    var type = typeof params;\n    if(type === 'string'){\n        obj = mw.serializeFields(params);\n    }\n    else if(type.constructor === {}.constructor ){\n        obj = params;\n    }\n    else{\n        obj = {};\n    }\n    $.post(url, obj)\n        .success(function(data) { return typeof callback === 'function' ? callback.call(data) : data;   })\n        .error(function(data) { return typeof callback === 'function' ? callback.call(data) : data;  });\n}\n\n\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/ajax.js?");

/***/ }),

/***/ "./resources/assets/core/base-class.js":
/*!*********************************************!*\
  !*** ./resources/assets/core/base-class.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass MicroweberBaseClass {\r\n    #events = {};\r\n    on(e, f) {\r\n        this.#events[e] ? this.#events[e].push(f) : (this.#events[e] = [f]);\r\n        return this;\r\n    };\r\n    off(e, f) {\r\n        if(!this.#events[e]) {\r\n            return this;\r\n        }\r\n        if(typeof f === 'function') {\r\n            const index = this.#events[e].indexOf(f);\r\n            if(index === -1) {\r\n                return this;\r\n            }\r\n            this.#events[e].splice(index, 1);\r\n        } else {\r\n            this.#events[e] = [];\r\n        }\r\n        return this;\r\n    };\r\n\r\n    dispatch (e, f, f2) {\r\n        this.#events[e] ? this.#events[e].forEach(function (c) {\r\n            c.call(this, f);\r\n        }) : '';\r\n        return this;\r\n    };\r\n\r\n    emit (e, f) {\r\n        return this.dispatch(e, f)\r\n    };\r\n\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MicroweberBaseClass);\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/base-class.js?");

/***/ }),

/***/ "./resources/assets/core/container.js":
/*!********************************************!*\
  !*** ./resources/assets/core/container.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MWUniversalContainer: () => (/* binding */ MWUniversalContainer)\n/* harmony export */ });\n/* harmony import */ var _base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-class.js */ \"./resources/assets/core/base-class.js\");\n\r\n\r\nclass MWUniversalContainer extends _base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    #modules = {};\r\n\r\n\r\n    #run(method, instance, data) {\r\n        if(!method || !instance || !instance[method])  {\r\n            return;\r\n        }\r\n        method = instance[method];\r\n     //   method(data);\r\n        method.call(instance,data);\r\n    }\r\n\r\n    call(method, data){\r\n        for(let i in this.#modules) {\r\n            if (this.#modules[i][method]) {\r\n                this.#run(method, this.#modules[i], data);\r\n            }\r\n        }\r\n    }\r\n    get(name){\r\n        return this.#modules[name];\r\n    }\r\n\r\n    getModules() {\r\n        return this.#modules;\r\n    }\r\n\r\n    register(name, classRef) {\r\n        let instance;\r\n        if(typeof classRef === 'function') {\r\n            instance = new classRef();\r\n        } else {\r\n            instance = classRef;\r\n        }\r\n\r\n        this.#modules[name] = instance;\r\n        this[name] = instance;\r\n        this.#run('onRegister', instance);\r\n        this.dispatch('register');\r\n    }\r\n\r\n    remove(instance) {\r\n        let name;\r\n        if(typeof instance === 'string') {\r\n            name = instance\r\n            instance = this.get(instance);\r\n        }\r\n\r\n        if(!name) {\r\n            for(let i in this.#modules) {\r\n                if (this.#modules[i] === instance) {\r\n                    name = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        delete this.#modules[name];\r\n        delete this[name];\r\n        this.#run('onDestroy', instance);\r\n        this.dispatch('remove');\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/container.js?");

/***/ }),

/***/ "./resources/assets/core/events.js":
/*!*****************************************!*\
  !*** ./resources/assets/core/events.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\nmw.on = function(eventName, callback){\r\n    eventName = eventName.trim();\r\n    $.each(eventName.split(' '), function(){\r\n        mw.$(mw._on._eventsRegister).on(this.toString(), callback);\r\n    });\r\n};\r\nmw.trigger = function(eventName, paramsArray){\r\n    return mw.$([window, mw._on._eventsRegister]).trigger(eventName, paramsArray);\r\n};\r\n\r\nmw._on = {\r\n  _eventsRegister:{},\r\n  mouseDownAndUp:function(el, callback){\r\n    var $el = mw.$(el);\r\n    el = $el[0];\r\n    $el.on('mousedown touchstart', function(){\r\n      this.__downTime = new Date().getTime();\r\n      (function(el){\r\n        setTimeout(function(){\r\n          el.__downTime = -1;\r\n        }, 777);\r\n      })(this);\r\n    });\r\n    $el.on('mouseup touchend', function(e){\r\n      if(!!callback){\r\n        callback.call(this, new Date().getTime()-this.__downTime, e)\r\n      }\r\n    });\r\n  },\r\n  onmodules : {},\r\n  moduleReload : function(id, c, trigger){\r\n      var exists;\r\n     if(trigger){\r\n          exists = typeof mw.on.onmodules[id] !== 'undefined';\r\n          if(exists){\r\n            var i = 0, l = mw.on.onmodules[id].length;\r\n            for( ; i < l; i++){\r\n               mw.on.onmodules[id][i].call(document.getElementById(id));\r\n            }\r\n          }\r\n        return false;\r\n     }\r\n     if(typeof c === 'function'){\r\n       exists = typeof mw.on.onmodules[id] !== 'undefined';\r\n       if(exists){\r\n          mw.on.onmodules[id].push(c);\r\n       }\r\n       else{\r\n         mw.on.onmodules[id] = [c];\r\n       }\r\n     }\r\n     else if(c==='off'){\r\n        exists = typeof mw.on.onmodules[id] !== 'undefined';\r\n        if(exists){\r\n          mw.on.onmodules[id] = [];\r\n        }\r\n     }\r\n  },\r\n  _hashrec : {},\r\n  _hashparams :  [],\r\n  _hashparam_funcs : [],\r\n  hashParam : function(param, callback, trigger, isManual){\r\n    var index;\r\n    if(isManual){\r\n        index = mw.on._hashparams.indexOf(param);\r\n        if (mw.on._hashparam_funcs[index] !== undefined){\r\n          mw.on._hashparam_funcs[index].call(false, false);\r\n        }\r\n        return false;\r\n    }\r\n    if(trigger === true){\r\n        index = mw.on._hashparams.indexOf(param);\r\n\r\n        if(index !== -1){\r\n          var hash = location.hash;\r\n          var params = mw.url.getHashParams(hash);\r\n\r\n          if (typeof params[param] === 'string' && mw.on._hashparam_funcs[index] !== undefined) {\r\n              var pval = decodeURIComponent(params[param]);\r\n              mw.on._hashparam_funcs[index].call(pval, pval);\r\n\r\n          }\r\n        }\r\n    }\r\n    else{\r\n        mw.on._hashparams.push(param);\r\n        mw.on._hashparam_funcs.push(callback);\r\n    }\r\n},\r\nhashParamEventInit:function(){\r\n  var hash = location.hash;\r\n  var params = mw.url.getHashParams(hash);\r\n\r\n  if(hash==='' || hash==='#' || hash ==='#?'){\r\n    var len = mw.on._hashparams.length, i=0;\r\n    for( ; i < len; i++){\r\n        mw.on.hashParam(mw.on._hashparams[i], \"\", true);\r\n    }\r\n  }\r\n  else{\r\n    for(var x in params){\r\n        if(params[x] !== mw.on._hashrec[x] || typeof mw.on._hashrec[x] === 'undefined'){\r\n            mw.on.hashParam(x, \"\", true);\r\n        }\r\n    }\r\n  }\r\n\r\n  mw.on._hashrec = params;\r\n},\r\nDOMChangePause:false,\r\nDOMChangeTime:1500,\r\nDOMChange:function(element, callback, attr, a){\r\n    attr = attr || false;\r\n    a = a || false;\r\n\r\n    element.addEventListener(\"input\", function(e){\r\n        if( !mw.on.DOMChangePause ) {\r\n            if(!a){\r\n                callback.call(this);\r\n            }\r\n            else{\r\n                clearTimeout(element._int);\r\n                element._int = setTimeout(function(){\r\n                    callback.call(element);\r\n                }, mw.on.DOMChangeTime);\r\n            }\r\n\r\n        }\r\n    }, false);\r\n\r\n    var MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\r\n\r\n    if(typeof MutationObserver === 'function'){\r\n        var observer = new MutationObserver(function(mutations) {\r\n          mutations.forEach(function(mutation){\r\n            if( !mw.on.DOMChangePause ) {\r\n                callback.call(mutation.target);\r\n            }\r\n          });\r\n        });\r\n        var config = { attributes: attr, childList: true, characterData: true };\r\n        observer.observe(element, config);\r\n    } else {\r\n        element.addEventListener(\"DOMCharacterDataModified\", function(e){\r\n            if( !mw.on.DOMChangePause ) {\r\n                if(!a){\r\n                    callback.call(this);\r\n                }\r\n                else{\r\n                    clearTimeout(element._int);\r\n                    element._int = setTimeout(function(){\r\n                        callback.call(element);\r\n                    }, mw.on.DOMChangeTime);\r\n                }\r\n\r\n            }\r\n        }, false);\r\n        element.addEventListener(\"DOMNodeInserted\", function(e){\r\n\r\n            if(/*mw.tools.hasClass(e.target, 'element') || */mw.tools.hasClass(e.target, 'module') || mw.tools.hasParentsWithClass(e.target, 'module')){\r\n                return false;\r\n            }\r\n            if( !mw.on.DOMChangePause ) {\r\n                if(!a){\r\n                    callback.call(this);\r\n                }\r\n                else{\r\n                    clearTimeout(element._int);\r\n                    element._int = setTimeout(function(){\r\n                        callback.call(element);\r\n                    }, mw.on.DOMChangeTime);\r\n                }\r\n            }\r\n        }, false);\r\n\r\n        if(attr){\r\n            element.addEventListener(\"DOMAttrModified\", function(e){\r\n\r\n                var attr = e.attrName;\r\n                if(attr !== \"contenteditable\"){\r\n                    if( !mw.on.DOMChangePause ) {\r\n                        if(!a){\r\n                            callback.call(this);\r\n                        }\r\n                        else{\r\n                            clearTimeout(element._int);\r\n                            element._int = setTimeout(function(){\r\n                                callback.call(element);\r\n                            }, mw.on.DOMChangeTime);\r\n                        }\r\n                    }\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n\r\n },\r\n stopWriting:function(el, c){\r\n    if(el === null || typeof el === 'undefined'){ return false; }\r\n    if(!el.onstopWriting){\r\n      el.onstopWriting = null;\r\n    }\r\n    clearTimeout(el.onstopWriting);\r\n    el.onstopWriting = setTimeout(function(){\r\n        c.call(el);\r\n    }, 400);\r\n },\r\n scrollBarOnBottom : function(obj, distance, callback){\r\n    if(typeof obj === 'function'){\r\n       callback = obj;\r\n       obj =  window;\r\n       distance = 0;\r\n    }\r\n    if(typeof distance === 'function'){\r\n      callback = distance;\r\n      distance = 0;\r\n    }\r\n    obj._pauseCallback = false;\r\n    obj.pauseScrollCallback = function(){ obj._pauseCallback = true;}\r\n    obj.continueScrollCallback = function(){ obj._pauseCallback = false;}\r\n    mw.$(obj).scroll(function(e){\r\n      var h = obj === window ? document.body.scrollHeight : obj.scrollHeight;\r\n      var calc = h - mw.$(obj).scrollTop() - mw.$(obj).height();\r\n      if(calc <= distance && !obj._pauseCallback){\r\n        callback.call(obj);\r\n      }\r\n    });\r\n  },\r\n  tripleClick : function(el, callback){\r\n      var t, timeout = 199;\r\n      el = el || window;\r\n      el.addEventListener(\"dblclick\", function () {\r\n          t = setTimeout(function () {\r\n              t = null;\r\n          }, timeout);\r\n      });\r\n      el.addEventListener(\"click\", function (e) {\r\n          if (t) {\r\n              clearTimeout(t);\r\n              t = null;\r\n              callback.call(el, e.target);\r\n          }\r\n      });\r\n  },\r\n  transitionEnd:function(el,callback){\r\n    mw.$(el).bind('webkitTransitionEnd transitionend msTransitionEnd oTransitionEnd otransitionend', function(){\r\n        callback.call(el);\r\n    });\r\n  },\r\n  ones:{ },\r\n  one:function(name, c, trigger, isDone){\r\n    if(trigger !== true){\r\n      if(mw.on.ones[name] === undefined){\r\n         mw.on.ones[name] = [c]\r\n      }\r\n      else{\r\n         mw.on.ones[name].push(c);\r\n      }\r\n    }\r\n    else{\r\n       if(mw.on.ones[name] !== undefined){\r\n          var i=0, l = mw.on.ones[name].length;\r\n          for( ; i<l; i++){\r\n              if(isDone === true){\r\n                mw.on.ones[name][i].call('ready', 'ready');\r\n              }\r\n              else{\r\n                mw.on.ones[name][i].call('start', 'start');\r\n              }\r\n          }\r\n       }\r\n    }\r\n  },\r\n  userIteractionInitRegister: new Date().getTime(),\r\n  userIteractionInit: function(){\r\n      var max = 378;\r\n      mw.$(document).on('mousemove touchstart click keydown resize ajaxStop', function(){\r\n          var time = new Date().getTime();\r\n          if((time - mw._on.userIteractionInitRegister) > max){\r\n              mw._on.userIteractionInitRegister = time;\r\n              mw.trigger('UserInteraction');\r\n          }\r\n      });\r\n  }\r\n};\r\n\r\nfor(var x in mw._on) mw.on[x] = mw._on[x];\r\n\r\n\r\n\r\nmw.hashHistory = [window.location.hash]\r\n\r\nmw.prevHash = function(){\r\n  var prev = mw.hashHistory[mw.hashHistory.length - 2];\r\n  return prev !== undefined ? prev : '';\r\n};\r\n\r\n\r\n\r\n$(window).on(\"hashchange load\", function(event){\r\n    if(event.type === 'load'){\r\n        mw._on.userIteractionInit();\r\n    }\r\n\r\n    mw.on.hashParamEventInit();\r\n\r\n   var hash =  location.hash;\r\n\r\n   var isMWHash = hash.replace(/\\#/g, '').indexOf('mw@') === 0;\r\n   if (isMWHash) {\r\n       var MWHash = hash.replace(/\\#/g, '').replace('mw@', '');\r\n       var el = document.getElementById(MWHash);\r\n       if(el) {\r\n           mw.tools.scrollTo(el);\r\n       }\r\n   }\r\n   if(hash.includes(\"showpostscat\")){\r\n      mw.$(\"html\").addClass(\"showpostscat\");\r\n   }\r\n   else{\r\n      mw.$(\"html\").removeClass(\"showpostscat\");\r\n   }\r\n\r\n\r\n   if (event.type === 'hashchange') {\r\n     mw.hashHistory.push(location.hash);\r\n     var size = mw.hashHistory.length;\r\n     var changes = mw.url.whichHashParamsHasBeenRemoved(mw.hashHistory[size-1], mw.hashHistory[size-2]), l=changes.length, i=0;\r\n     if (l>0) {\r\n       for( ; i < l; i++ ){\r\n          mw.on.hashParam(changes[i], \"\", true, true);\r\n       }\r\n     }\r\n   }\r\n});\r\n\r\n\r\nmw.event = {\r\n    windowLeave: function(c) {\r\n      document.documentElement.addEventListener('mouseout', function(e) {\r\n          if (!e.relatedTarget && !e.toElement && c) {\r\n              c.call(document.body, e);\r\n          }\r\n      });\r\n    },\r\n    cancel:function(e, prevent){\r\n    prevent === true ? e.preventDefault() : '';\r\n    e.cancelBubble = true;\r\n    if (e.stopPropagation) e.stopPropagation();\r\n    },\r\n    key:function(e,key){\r\n        return (e.keyCode === parseFloat(key));\r\n    },\r\n    page: function (e) {\r\n      e = e.originalEvent || e;\r\n      if (e.type.indexOf('touch') !== 0) {\r\n        return {\r\n            x: e.pageX,\r\n            y: e.pageY\r\n        };\r\n      } else {\r\n          return {\r\n              x: e.changedTouches[0].pageX,\r\n              y: e.changedTouches[0].pageY\r\n          };\r\n      }\r\n    },\r\n    targetIsField: function(e) {\r\n        e = e.originalEvent || e;\r\n        var t = e.target;\r\n        return t.nodeName === 'INPUT' ||\r\n            t.nodeName === 'textarea' ||\r\n            t.nodeName === 'select';\r\n    },\r\n    get: function(e) {\r\n        return e.originalEvent || e;\r\n    },\r\n    keyCode: function(e) {\r\n        e = mw.event.get(e);\r\n        return e.keyCode || e.which;\r\n    },\r\n    isKeyCode: function(e, code){\r\n        return this.keyCode(e) === code;\r\n    },\r\n    is: {\r\n      comma: function (e) {\r\n          e = mw.event.get(e);\r\n          return e.keyCode === 188;\r\n              },\r\n      enter: function (e) {\r\n        e = mw.event.get(e);\r\n        return e.key === \"Enter\" || mw.event.isKeyCode(e, 13);\r\n      },\r\n      escape: function (e) {\r\n          e = mw.event.get(e);\r\n          return e.key === \"Escape\" || mw.event.isKeyCode(e, 27);\r\n      },\r\n      backSpace : function (e) {\r\n        e = mw.event.get(e);\r\n        return e.key === \"Backspace\" || mw.event.isKeyCode(e, 8);\r\n      },\r\n      delete: function (e) {\r\n          e = mw.event.get(e);\r\n          return e.key === \"Delete\" || mw.event.isKeyCode(e, 46);\r\n      }\r\n    }\r\n};\r\n\r\n\r\n\r\nmw.on('ComponentsLaunch', function () {\r\n    mw.components._init();\r\n});\r\n\r\nmw.on('mwDialogShow', function () {\r\n    setTimeout(function () {\r\n        mw.components._init();\r\n    }, 110);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/events.js?");

/***/ }),

/***/ "./resources/assets/core/helpers.js":
/*!******************************************!*\
  !*** ./resources/assets/core/helpers.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Helpers: () => (/* binding */ Helpers)\n/* harmony export */ });\n\r\n    const Helpers = {\r\n        fragment: function(){\r\n            if(!this._fragment){\r\n                this._fragment = document.createElement('div');\r\n                this._fragment.style.visibility = 'hidden';\r\n                this._fragment.style.position = 'absolute';\r\n                this._fragment.style.width = '1px';\r\n                this._fragment.style.height = '1px';\r\n                document.body.appendChild(this._fragment);\r\n            }\r\n            return this._fragment;\r\n        },\r\n        _isBlockCache:{},\r\n        isBlockLevel:function(node){\r\n            if(!node || node.nodeType === 3){\r\n                return false;\r\n            }\r\n            const blockLike = ['flex', 'block', 'grid', 'table', 'list-item', 'table-row', 'table-cell', 'table-row-group', 'table-header-group', 'table-footer-group', 'table-column-group', 'table-column', 'table-caption', 'table-cell', 'table-row', 'inline-block', 'inline-table', 'inline-flex', 'inline-grid', 'flow-root', 'grid', 'grid-item', 'grid-line', 'grid-row', 'grid-column', 'grid-area', 'grid-auto-rows', 'grid-auto-columns', 'grid-template-rows', 'grid-template-columns', 'grid-template-areas', 'grid-template', 'grid-auto-flow', 'grid-row-gap', 'grid-column-gap', 'grid-gap', 'grid-row-start', 'grid-row-end', 'grid-column-start', 'grid-column-end', 'grid-area'];\r\n            return blockLike.indexOf(getComputedStyle(node).display)  !== -1;\r\n        },\r\n        _isInlineCache:{},\r\n        isInlineLevel:function(node){\r\n            if(node.nodeType === 3){\r\n                return false;\r\n            }\r\n            var name = node.nodeName;\r\n            if(typeof this._isInlineCache[name] !== 'undefined'){\r\n                return this._isInlineCache[name];\r\n            }\r\n            var test = document.createElement(name);\r\n            this.fragment().appendChild(test);\r\n            this._isInlineCache[name] = getComputedStyle(test).display === 'inline' && node.nodeName !== 'BR';\r\n            this.fragment().removeChild(test);\r\n            return this._isInlineCache[name];\r\n        },\r\n        elementOptions: function(el) {\r\n            var opt = ( el.dataset.options || '').trim().split(','), final = {};\r\n            if(!opt[0]) return final;\r\n            $.each(opt, function(){\r\n                var arr = this.split(':');\r\n                var val = arr[1].trim();\r\n                if(!val){\r\n\r\n                }\r\n                else if(val === 'true' || val === 'false'){\r\n                    val = val === 'true';\r\n                }\r\n                else if(!/\\D/.test(val)){\r\n                    val = parseInt(val, 10);\r\n                }\r\n                final[arr[0].trim()] = val;\r\n            });\r\n            return final;\r\n        },\r\n        createAutoHeight: function() {\r\n            if(window.thismodal && thismodal.iframe) {\r\n                mw.tools.iframeAutoHeight(thismodal.iframe, 'now');\r\n            }\r\n            else if(mw.top().win.frameElement && mw.top().win.frameElement.contentWindow === window) {\r\n                mw.tools.iframeAutoHeight(mw.top().win.frameElement, 'now');\r\n            } else if(window.top !== window) {\r\n                mw.top().$('iframe').each(function(){\r\n                    try{\r\n                        if(this.contentWindow === window) {\r\n                            mw.tools.iframeAutoHeight(this, 'now');\r\n                        }\r\n                    } catch(e){}\r\n                })\r\n            }\r\n        },\r\n        collision: function(el1, el2){\r\n            if(!el1 || !el2) return;\r\n            el1 = mw.$(el1);\r\n            el2 = mw.$(el2);\r\n            var o1 = el1.offset();\r\n            var o2 = el2.offset();\r\n            o1.width = el1.width();\r\n            o1.height = el1.height();\r\n            o2.width = el2.width();\r\n            o2.height = el2.height();\r\n            return (o1.left < o2.left + o2.width  && o1.left + o1.width  > o2.left &&  o1.top < o2.top + o2.height && o1.top + o1.height > o2.top);\r\n        },\r\n        distance: function (x1, y1, x2, y2) {\r\n            var a = x1 - x2;\r\n            var b = y1 - y2;\r\n            return Math.floor(Math.sqrt(a * a + b * b));\r\n        },\r\n        copy: function (value) {\r\n            var tempInput = document.createElement(\"textarea\");\r\n            tempInput.style = \"position: absolute; left: -1000px; top: -1000px\";\r\n            tempInput.value = value;\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(tempInput);\r\n            mw.notification.success(mw.lang('Copied') + ': \"' + value + '\"');\r\n        },\r\n        cloneObject: function (object) {\r\n            return jQuery.extend(true, {}, object);\r\n        },\r\n        constructions: function () {\r\n            mw.$(\".mw-image-holder\").each(function () {\r\n                var img = this.querySelector('img');\r\n                if (img && img.src) {\r\n                    mw.$(this).css('backgroundImage', 'url(' + img.src + ')');\r\n                }\r\n            });\r\n        },\r\n        isRtl: function (el) {\r\n            //todo\r\n            el = el || document.documentElement;\r\n            return document.documentElement.dir === 'rtl';\r\n        },\r\n        isEditable: function (item) {\r\n            var el = item;\r\n            if (!!item.type && !!item.target) {\r\n                el = item.target;\r\n            }\r\n\r\n            return mw.tools.parentsOrCurrentOrderMatchOrOnlyFirst(el, ['edit', 'module'])\r\n                && mw.tools.parentsOrCurrentOrderMatchOrOnlyFirst(el, ['edit', 'noedit']);\r\n        },\r\n        eachIframe: function (callback, root, ignore) {\r\n            root = root || document;\r\n            var scope = this;\r\n            ignore = ignore || [];\r\n            var all = root.querySelectorAll('iframe'), i = 0;\r\n            for (; i < all.length; i++) {\r\n                if (mw.tools.canAccessIFrame(all[i]) && ignore.indexOf(all[i]) === -1) {\r\n                    callback.call(all[i].contentWindow, all[i].contentWindow);\r\n                    scope.eachIframe(callback, all[i].contentWindow.document);\r\n                }\r\n            }\r\n        },\r\n        eachWindow: function (callback, options) {\r\n            options = options || {};\r\n            var curr = window;\r\n            callback.call(curr, curr);\r\n            while (curr !== top) {\r\n                if(curr.parent && curr.parent.document) {\r\n                    this.eachIframe(function (iframeWindow) {\r\n                        callback.call(iframeWindow, iframeWindow);\r\n                    }, curr.parent.document, [curr]);\r\n                    curr = curr.parent;\r\n                    callback.call(curr, curr);\r\n                }\r\n            }\r\n            this.eachIframe(function (iframeWindow) {\r\n                callback.call(iframeWindow, iframeWindow);\r\n            });\r\n            if (window.opener !== null && mw.tools.canAccessWindow(opener)) {\r\n                callback.call(window.opener, window.opener);\r\n                this.eachIframe(function (iframeWindow) {\r\n                    callback.call(iframeWindow, iframeWindow);\r\n                }, window.opener.document);\r\n            }\r\n        },\r\n        canAccessWindow: function (winObject) {\r\n            var can = false;\r\n            try {\r\n                var doc = winObject.document;\r\n                can = !!doc.body;\r\n            } catch (err) {\r\n            }\r\n            return can;\r\n        },\r\n        canAccessIFrame: function (iframe) {\r\n            var can = false;\r\n            try {\r\n                var doc = iframe.contentDocument || iframe.contentWindow.document;\r\n                can = !!doc.body && !!doc.documentElement;\r\n            } catch (err) {\r\n            }\r\n            return can;\r\n        },\r\n         createStyle: function (c, css, ins) {\r\n            ins = ins || document.getElementsByTagName('head')[0];\r\n            var style = mw.$(c)[0];\r\n            if (!style) {\r\n                style = document.createElement('style');\r\n                ins.appendChild(style);\r\n            }\r\n            style.innerHTML = css;\r\n            return style;\r\n        },\r\n        cssNumber: function (val) {\r\n            var units = [\"px\", \"%\", \"in\", \"cm\", \"mm\", \"em\", \"ex\", \"pt\", \"pc\"];\r\n            if (typeof val === 'number') {\r\n                return val + 'px';\r\n            }\r\n            else if (typeof val === 'string' && parseFloat(val).toString() === val) {\r\n                return val + 'px';\r\n            }\r\n            else {\r\n                if (isNaN(parseFloat(val))) {\r\n                    return '0px';\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            }\r\n\r\n        },\r\n        isField: function (target) {\r\n            var t = target.nodeName.toLowerCase();\r\n            var fields = /^(input|textarea|select)$/i;\r\n            return fields.test(t);\r\n        },\r\n\r\n        toggleCheckbox: function (node) {\r\n            if (node === null || node === undefined) return false;\r\n            node.checked = !node.checked;\r\n            return node.checked;\r\n        },\r\n        jQueryFields: function (root) {\r\n            if (typeof root === 'string') {\r\n                root = document.querySelector(root);\r\n            }\r\n            if (typeof root === 'undefined' || root === null) return false;\r\n            var allFields = \"textarea, select, input[type='checkbox']:checked, input[type='color'], input[type='date'], input[type='datetime'], input[type='datetime-local'], input[type='email'], input[type='file'], input[type='hidden'], input[type='month'], input[type='number'], input[type='password'], input[type='radio']:checked, input[type='range'], input[type='search'], input[type='tel'], input[type='text'], input[type='time'], input[type='url'], input[type='week']\";\r\n            return mw.$(allFields, fields).not(':disabled');\r\n        },\r\n        toggle: function (who, toggler, callback) {\r\n            who = mw.$(who);\r\n            who.toggle();\r\n            who.toggleClass('toggle-active');\r\n            mw.$(toggler).toggleClass('toggler-active');\r\n            mw.is.func(callback) ? callback.call(who) : '';\r\n        },\r\n        _confirm: function (question, callback) {\r\n            var conf = confirm(question);\r\n            if (conf && typeof callback === 'function') {\r\n                callback.call(window);\r\n            }\r\n            return conf;\r\n        },\r\n        el_switch: function (arr, type) {\r\n            if (type === 'semi') {\r\n                mw.$(arr).each(function () {\r\n                    var el = mw.$(this);\r\n                    if (el.hasClass(\"semi_hidden\")) {\r\n                        el.removeClass(\"semi_hidden\");\r\n                    }\r\n                    else {\r\n                        el.addClass(\"semi_hidden\");\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                mw.$(arr).each(function () {\r\n                    var el = mw.$(this);\r\n                    if (el.css('display') === 'none') {\r\n                        el.show();\r\n                    }\r\n                    else {\r\n                        el.hide();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        focus_on: function (el) {\r\n            if (!$(el).hasClass('mw-focus')) {\r\n                mw.$(\".mw-focus\").each(function () {\r\n                    this !== el ? mw.$(this).removeClass('mw-focus') : '';\r\n                });\r\n                mw.$(el).addClass('mw-focus');\r\n            }\r\n        },\r\n        scrollTo: function (el, callback, minus) {\r\n\r\n            minus = minus || 0;\r\n            if ($(el).length === 0) {\r\n                return false;\r\n            }\r\n            if (typeof callback === 'number') {\r\n                minus = callback;\r\n            }\r\n            mw.$('html,body').stop().animate({scrollTop: mw.$(el).offset().top - minus}, function () {\r\n                typeof callback === 'function' ? callback.call(el) : '';\r\n            });\r\n        },\r\n        accordion: function (el, callback) {\r\n            var speed = 200;\r\n            var container = el.querySelector('.mw-accordion-content');\r\n            if (container === null) return false;\r\n            var is_hidden = getComputedStyle(container).display === 'none';\r\n            if (!$(container).is(\":animated\")) {\r\n                if (is_hidden) {\r\n                    mw.$(container).slideDown(speed, function () {\r\n                        mw.$(el).addClass('active');\r\n                        typeof callback === 'function' ? callback.call(el, 'visible') : '';\r\n                    });\r\n                }\r\n                else {\r\n                    mw.$(container).slideUp(speed, function () {\r\n                        mw.$(el).removeClass('active');\r\n                        typeof callback === 'function' ? callback.call(el, 'hidden') : '';\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        index: function (el, parent, selector) {\r\n            el = mw.$(el)[0];\r\n            selector = selector || el.tagName.toLowerCase();\r\n            parent = parent || el.parentNode;\r\n            var all;\r\n            if (parent.constructor === [].constructor) {\r\n                all = parent;\r\n            }\r\n            else {\r\n                all = mw.$(selector, parent)\r\n            }\r\n            var i = 0, l = all.length;\r\n            for (; i < l; i++) {\r\n                if (el === all[i]) return i;\r\n            }\r\n        },\r\n\r\n        highlight: function (el, color, speed1, speed2) {\r\n            if (!el) return false;\r\n            mw.$(el).stop();\r\n            color = color || '#48AD79';\r\n            speed1 = speed1 || 777;\r\n            speed2 = speed2 || 777;\r\n            var curr = window.getComputedStyle(el, null).backgroundColor;\r\n            if (curr === 'transparent') {\r\n                curr = '#ffffff';\r\n            }\r\n            mw.$(el).animate({backgroundColor: color}, speed1, function () {\r\n                mw.$(el).animate({backgroundColor: curr}, speed2, function () {\r\n                    mw.$(el).css('backgroundColor', '');\r\n                });\r\n            });\r\n        },\r\n        highlightStop: function (el) {\r\n            mw.$(el).stop();\r\n            mw.$(el).css('backgroundColor', '');\r\n        },\r\n        toCamelCase: function (str) {\r\n            return str.replace(/(\\-[a-z])/g, function (a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n        multihover: function () {\r\n            var l = arguments.length, i = 1;\r\n            var type = arguments[0].type;\r\n            var check = ( type === 'mouseover' || type === 'mouseenter');\r\n            for ( ; i < l; i++ ) {\r\n                check ? mw.$(arguments[i]).addClass('hovered') : mw.$(arguments[i]).removeClass('hovered');\r\n            }\r\n        },\r\n        listSearch: function (val, list) {\r\n            val = val.trim().toLowerCase();\r\n            if(!val) {\r\n                $('li', list).show();\r\n                return;\r\n            }\r\n            this.search(val, 'li', function (found) {\r\n                if(found) {\r\n                    $(this).show();\r\n                } else {\r\n                    $(this).hide();\r\n                }\r\n\r\n            }, list);\r\n        },\r\n        search: function (string, selector, callback, root) {\r\n            root = !!root ? $(root)[0] : mwd;\r\n            if (!root) {\r\n                return;\r\n            }\r\n            string = string.toLowerCase();\r\n            var items;\r\n            if (typeof selector === 'object') {\r\n                items = selector;\r\n            }\r\n            else if (typeof selector === 'string') {\r\n                items = root.querySelectorAll(selector);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n            var i = 0, l = items.length;\r\n            for (; i < l; i++) {\r\n                items[i].textContent.toLowerCase().contains(string) ? callback.call(items[i], true) : callback.call(items[i], false);\r\n            }\r\n        },\r\n        ajaxIsSearching: false,\r\n        ajaxSearcSetting: {\r\n            limit: 10,\r\n            keyword: '',\r\n            order_by: 'updated_at desc',\r\n            search_in_fields: 'title'\r\n        },\r\n        ajaxSearch: function (o, callback) {\r\n            if (!mw.tools.ajaxIsSearching) {\r\n                var obj = $.extend({}, mw.tools.ajaxSearcSetting, o);\r\n                mw.tools.ajaxIsSearching = $.post(mw.settings.site_url + \"api/get_content_admin\", obj, function (data) {\r\n                    if (typeof callback === 'function') {\r\n                        callback.call(data, data);\r\n                    }\r\n                }).always(function () {\r\n                    mw.tools.ajaxIsSearching = false\r\n                });\r\n            }\r\n            return mw.tools.ajaxIsSearching;\r\n        },\r\n        getPostById: function (id, callback) {\r\n            var config = {\r\n                limit: 10,\r\n                keyword: '',\r\n                order_by: 'updated_at desc',\r\n                search_in_fields: 'id',\r\n                id: id\r\n            };\r\n            return this.ajaxSearch(config, callback);\r\n        },\r\n        iframeLinksToParent: function (iframe) {\r\n            mw.$(iframe).contents().find('a').each(function () {\r\n                var href = this.href;\r\n                if (href.contains(mw.settings.site_url)) {\r\n                    this.target = '_parent';\r\n                }\r\n            });\r\n        },\r\n        get_filename: function (s) {\r\n            if (s.contains('.')) {\r\n                var d = s.lastIndexOf('.');\r\n                return s.substring(s.lastIndexOf('/') + 1, d < 0 ? s.length : d);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        },\r\n        is_field: function (obj) {\r\n            if (obj === null || typeof obj === 'undefined' || obj.nodeType === 3) {\r\n                return false;\r\n            }\r\n            if (!obj.nodeName) {\r\n                return false;\r\n            }\r\n            var t = obj.nodeName.toLowerCase();\r\n            if (t === 'input' || t === 'textarea' || t === 'select') {\r\n                return true\r\n            }\r\n            return false;\r\n        },\r\n        getAttrs: function (el) {\r\n            var attrs = el.attributes;\r\n            var obj = {};\r\n            for (var x in attrs) {\r\n                if (attrs[x].nodeName) {\r\n                    obj[attrs[x].nodeName] = attrs[x].nodeValue;\r\n                }\r\n            }\r\n            return obj;\r\n        },\r\n        copyAttributes: function (from, to, except) {\r\n            except = except || [];\r\n            var attrs = mw.tools.getAttrs(from);\r\n            if (mw.tools.is_field(from) && mw.tools.is_field(to)) to.value = from.value;\r\n            for (var x in attrs) {\r\n                ( $.inArray(x, except) == -1 && x != 'undefined') ? to.setAttribute(x, attrs[x]) : '';\r\n            }\r\n        },\r\n        isEmptyObject: function (obj) {\r\n            for (var a in obj) {\r\n                if (obj.hasOwnProperty(a)) return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n\r\n        getFirstEqualFromTwoArrays: function (a, b) {\r\n            var ia = 0, ib = 0, la = a.length, lb = b.length;\r\n            loop:\r\n                for (; ia < la; ia++) {\r\n                    var curr = a[ia];\r\n                    for (; ib < lb; ib++) {\r\n                        if (b[ib] == curr) {\r\n                            return curr;\r\n                        }\r\n                    }\r\n                }\r\n        },\r\n        has: function (el, what) {\r\n            return el.querySelector(what) !== null;\r\n        },\r\n        html_info: function (html) {\r\n            if (typeof mw._html_info === 'undefined') {\r\n                mw._html_info = document.createElement('div');\r\n                mw._html_info.id = 'mw-html-info';\r\n                document.body.appendChild(mw._html_info);\r\n            }\r\n            mw.$(mw._html_info).html(html);\r\n            return mw._html_info;\r\n        },\r\n        image_info: function (a, callback) {\r\n            var img = document.createElement('img');\r\n            img.className = 'semi_hidden';\r\n            img.src = a.src;\r\n            document.body.appendChild(img);\r\n            img.onload = function () {\r\n                callback.call({width: mw.$(img).width(), height: mw.$(img).height()});\r\n                mw.$(img).remove();\r\n            };\r\n        },\r\n        refresh_image: function (node) {\r\n            node.src = mw.url.set_param('refresh_image', mw.random(), node.src);\r\n            return node;\r\n        },\r\n        refresh: function (a, onSuccess) {\r\n            if (a === null || typeof a === 'undefined') {\r\n                return false;\r\n            }\r\n            if (a.src) {\r\n                a.src = mw.url.set_param('mwrefresh', mw.random(), a.src);\r\n                if(onSuccess) {\r\n                    jQuery.get(a.getAttribute('src'), function(e){\r\n                        onSuccess.call(a, e)\r\n                    })\r\n                }\r\n\r\n            }\r\n            else if (a.href) {\r\n                a.href = mw.url.set_param('mwrefresh', mw.random(), a.href);\r\n                if(onSuccess) {\r\n                    jQuery.get(a.getAttribute('href'), function(e){\r\n                        onSuccess.call(a, e)\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        getDiff: function (_new, _old) {\r\n            var diff = {}, x, y;\r\n            for (x in _new) {\r\n                if (!x in _old || _old[x] != _new[x]) {\r\n                    diff[x] = _new[x];\r\n                }\r\n            }\r\n            for (y in _old) {\r\n                if (typeof _new[y] === 'undefined') {\r\n                    diff[y] = \"\";\r\n                }\r\n            }\r\n            return diff;\r\n        },\r\n        parseHtml: function (html) {\r\n            var doc = document.implementation.createHTMLDocument(\"\");\r\n            doc.body.innerHTML = html;\r\n            return doc;\r\n        },\r\n        isEmpty: function (node) {\r\n            return ( node.innerHTML.trim() ).length === 0;\r\n        },\r\n        isJSON: function (a) {\r\n            if (typeof a === 'object') {\r\n                if (a.constructor === {}.constructor) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (typeof a === 'string') {\r\n                try {\r\n                    JSON.parse(a);\r\n                }\r\n                catch (e) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        },\r\n        toJSON: function (w) {\r\n            if (typeof w === 'object' && mw.tools.isJSON(w)) {\r\n                return w;\r\n            }\r\n            if (typeof w === 'string') {\r\n                try {\r\n                    var r = JSON.parse(w);\r\n                }\r\n                catch (e) {\r\n                    var r = {\"0\": w};\r\n                }\r\n                return r;\r\n            }\r\n            if (typeof w === 'object' && w.constructor === [].constructor) {\r\n                var obj = {}, i = 0, l = w.length;\r\n                for (; i < l; i++) {\r\n                    obj[i] = w[i];\r\n                }\r\n                return obj;\r\n            }\r\n        },\r\n        mwattr: function (el, a, b) {\r\n            if (!b && !!el) {\r\n                var data = mw.$(el).dataset(a);\r\n                if (!!$(el)[0].attributes) {\r\n                    var attr = mw.$(el)[0].attributes[a];\r\n                }\r\n\r\n                if (data !== '') {\r\n                    return data;\r\n                }\r\n                if (!!attr) {\r\n                    return attr.value;\r\n                }\r\n                return false;\r\n            }\r\n            else {\r\n                mw.$(el).dataset(a, b);\r\n            }\r\n        },\r\n        disable: function (el, text, global) {\r\n            text = text || mw.msg.loading + '...';\r\n            global = global || false;\r\n            var _el = mw.$(el);\r\n            if (!_el.length) {\r\n                return false;\r\n            }\r\n            if (!_el.hasClass(\"disabled\")) {\r\n                _el.addClass('disabled');\r\n                if (_el[0].tagName !== 'INPUT') {\r\n                    _el.dataset(\"text\", _el.html());\r\n                    _el.html(text);\r\n                }\r\n                else {\r\n                    _el.dataset(\"text\", _el.val());\r\n                    _el.val(text);\r\n                }\r\n                if (global) mw.$(document.body).addClass(\"loading\");\r\n            }\r\n            return el;\r\n        },\r\n        enable: function (el) {\r\n            var _el = mw.$(el);\r\n            if (!_el.length) {\r\n                return false;\r\n            }\r\n            var text = _el.dataset(\"text\");\r\n            _el.removeClass(\"disabled\");\r\n            if (_el[0].tagName !== 'INPUT') {\r\n                _el.html(text);\r\n            }\r\n            else {\r\n                _el.val(text);\r\n            }\r\n            mw.$(document.body).removeClass(\"loading\");\r\n            return el;\r\n        },\r\n        prependClass: function (el, cls) {\r\n            el.className = (cls + ' ' + el.className).trim()\r\n        },\r\n        inview: function (el) {\r\n            var $el = mw.$(el);\r\n            if ($el.length === 0) {\r\n                return false;\r\n            }\r\n            var dt = mw.$(window).scrollTop(),\r\n                db = dt + mw.$(window).height(),\r\n                et = $el.offset().top;\r\n            return (et <= db) && !(dt > ($el.height() + et));\r\n        },\r\n        wholeinview: function (el) {\r\n            var $el = mw.$(el),\r\n                dt = mw.$(window).scrollTop(),\r\n                db = dt + mw.$(window).height(),\r\n                et = $el.offset().top,\r\n                eb = et + mw.$(el).height();\r\n            return ((eb <= db) && (et >= dt));\r\n        },\r\n        preload: function (u, c) {\r\n            var im = new Image();\r\n            if (typeof c === 'function') {\r\n                im.onload = function () {\r\n                    c.call(u, im);\r\n                }\r\n            }\r\n            im.src = u;\r\n        },\r\n        mapNodeValues: function (n1, n2) {\r\n            if (!n1 || !n2) return false;\r\n            var setValue1 = ((!!n1.type && n1.nodeName !== 'BUTTON') || n1.nodeName === 'TEXTAREA') ? 'value' : 'textContent';\r\n            var setValue2 = ((!!n2.type && n2.nodeName !== 'BUTTON') || n2.nodeName === 'TEXTAREA') ? 'value' : 'textContent';\r\n            var events = 'keyup paste';\r\n            mw.$(n1).bind(events, function () {\r\n                n2[setValue2] = n1[setValue1];\r\n                mw.$(n2).trigger('change');\r\n            });\r\n            mw.$(n2).bind(events, function () {\r\n                n1[setValue1] = n2[setValue2];\r\n                mw.$(n1).trigger('change');\r\n            });\r\n        },\r\n        copyEvents: function (from, to) {\r\n            if (typeof $._data(from, 'events') === 'undefined') {\r\n                return false;\r\n            }\r\n            $.each($._data(from, 'events'), function () {\r\n                $.each(this, function () {\r\n                    mw.$(to).bind(this.type, this.handler);\r\n                });\r\n            });\r\n        },\r\n        setTag: function (node, tag) {\r\n            var el = document.createElement(tag);\r\n            mw.tools.copyAttributes(node, el);\r\n            while (node.firstChild) {\r\n                el.appendChild(node.firstChild);\r\n            }\r\n            mw.tools.copyEvents(node, el);\r\n            mw.$(node).replaceWith(el);\r\n            return el;\r\n        },\r\n\r\n        module_settings: function (a, view, liveedit) {\r\n            var opts = {};\r\n            if (typeof liveedit === 'undefined') {\r\n                opts.liveedit = true;\r\n            }\r\n            if (!!view) {\r\n                opts.view = view;\r\n            }\r\n            else {\r\n                opts.view = 'admin';\r\n            }\r\n            return mw.live_edit.showSettings(a, opts);\r\n        },\r\n        fav: function (a) {\r\n            var canvas = document.createElement(\"canvas\");\r\n            canvas.width = 16;\r\n            canvas.height = 16;\r\n            var context = canvas.getContext(\"2d\");\r\n            context.fillStyle = \"#EF3D25\";\r\n            context.fillRect(0, 0, 16, 16);\r\n            context.font = \"normal 10px Arial\";\r\n            context.textAlign = 'center';\r\n            context.textBaseline = 'middle';\r\n            context.fillStyle = \"white\";\r\n            context.fillText(a, 8, 8);\r\n            var im = canvas.toDataURL();\r\n            var l = document.createElement('link');\r\n            l.className = 'mwfav';\r\n            l.setAttribute('rel', 'icon');\r\n            l.setAttribute('type', 'image/png');\r\n            l.href = im;\r\n            mw.$(\".mwfav\").remove();\r\n            document.getElementsByTagName('head')[0].appendChild(l);\r\n        },\r\n        px2pt: function (px) {\r\n            var n = parseInt(px, 10);\r\n            if (isNaN(n)) {\r\n                return false;\r\n            }\r\n            return Math.round(((3 / 4) * n));\r\n        },\r\n        matches: function (node, what) {\r\n            if (node === 'init') {\r\n                if (!!document.documentElement.matches) mw.tools.matchesMethod = 'matches';\r\n                else if (!!document.documentElement.matchesSelector) mw.tools.matchesMethod = 'matchesSelector';\r\n                else if (!!document.documentElement.mozMatchesSelector) mw.tools.matchesMethod = 'mozMatchesSelector';\r\n                else if (!!document.documentElement.webkitMatchesSelector) mw.tools.matchesMethod = 'webkitMatchesSelector';\r\n                else if (!!document.documentElement.msMatchesSelector) mw.tools.matchesMethod = 'msMatchesSelector';\r\n                else if (!!document.documentElement.oMatchesSelector) mw.tools.matchesMethod = 'oMatchesSelector';\r\n                else mw.tools.matchesMethod = undefined;\r\n            }\r\n            else {\r\n                if (node === null) {\r\n                    return false;\r\n                }\r\n                if (typeof node === 'undefined') {\r\n                    return false;\r\n                }\r\n                if (node.nodeType !== 1) {\r\n                    return false;\r\n                }\r\n                if (!!mw.tools.matchesMethod) {\r\n                    return node[mw.tools.matchesMethod](what)\r\n                }\r\n                else {\r\n                    var doc = document.implementation.createHTMLDocument(\"\");\r\n                    node = node.cloneNode(true);\r\n                    doc.body.appendChild(node);\r\n                    var all = doc.body.querySelectorAll(what),\r\n                        l = all.length,\r\n                        i = 0;\r\n                    for (; i < l; i++) {\r\n                        if (all[i] === node) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/helpers.js?");

/***/ }),

/***/ "./resources/assets/core/i18n.js":
/*!***************************************!*\
  !*** ./resources/assets/core/i18n.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nmw.lang = function (key) {\r\n    var camel = key.trim().replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\r\n        return index == 0 ? letter.toLowerCase() : letter.toUpperCase();\r\n    }).replace(/\\s+/g, '');\r\n    if (mw._lang[camel]) {\r\n        return mw._lang[camel];\r\n    }\r\n    else {\r\n        // console.warn('\"' + key + '\" is not present.');\r\n        return key;\r\n    }\r\n};\r\nmw.msg = mw._lang = {\r\n    uniqueVisitors: 'Unique visitors',\r\n    allViews: 'All views',\r\n    date: 'Date',\r\n    weekDays: {\r\n        regular: [\r\n            'Sunday',\r\n            'Monday',\r\n            'Tuesday',\r\n            'Wednesday',\r\n            'Thursday',\r\n            'Friday',\r\n            'Saturday'\r\n        ],\r\n        short: [\r\n            'Sun',\r\n            'Mon',\r\n            'Tue',\r\n            'Wed',\r\n            'Thu',\r\n            'Fri',\r\n            'Sat'\r\n        ]\r\n    },\r\n    months: {\r\n        regular: [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December'\r\n        ],\r\n        short: [\r\n            'Jan',\r\n            'Feb',\r\n            'Mar',\r\n            'Apr',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'Aug',\r\n            'Sept',\r\n            'Oct',\r\n            'Nov',\r\n            'Dec'\r\n        ]\r\n    },\r\n    ok: \"OK\",\r\n    category: \"Category\",\r\n    published: \"Published\",\r\n    unpublished: \"Unpublished\",\r\n    contentunpublished: \"Content is unpublished\",\r\n    contentpublished: \"Content is published\",\r\n    save: \"Save\",\r\n    saving: \"Saving\",\r\n    saved: \"Saved\",\r\n    settings: \"Settings\",\r\n    cancel: \"Cancel\",\r\n    remove: \"Remove\",\r\n    close: \"Close\",\r\n    to_delete_comment: \"Are you sure you want to delete this comment\",\r\n    del: \"Are you sure you want to delete this?\",\r\n    save_and_continue: \"Save &amp; Continue\",\r\n    before_leave: \"Leave without saving\",\r\n    session_expired: \"Your session has expired\",\r\n    login_to_continue: \"Please login to continue\",\r\n    more: \"More\",\r\n    templateSettingsHidden: \"Template settings\",\r\n    less: \"Less\",\r\n    product_added: \"Your product is added to cart\",\r\n    no_results_for: \"No results for\",\r\n    switch_to_modules: 'Switch to Modules',\r\n    switch_to_layouts: 'Switch to Layouts',\r\n    loading: 'Loading',\r\n    edit: 'Edit',\r\n    change: 'Change',\r\n    submit: 'Submit',\r\n    settingsSaved: 'Settings are saved',\r\n    addImage: 'Add new image'\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/i18n.js?");

/***/ }),

/***/ "./resources/assets/core/icon-resolver.js":
/*!************************************************!*\
  !*** ./resources/assets/core/icon-resolver.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\nmw.iconResolver = icon => {\r\n    if(icon === undefined) return ''\r\n\r\n    const icons = {\r\n        home: \"<svg xmlns='http://www.w3.org/2000/svg'  fill='currentColor' height='24' viewBox='0 96 960 960' width='24'><path d='M240 856h120V616h240v240h120V496L480 316 240 496v360Zm-80 80V456l320-240 320 240v480H520V696h-80v240H160Zm320-350Z'/></svg>\",\r\n        shop: \"<svg fill='currentColor' xmlns='http://www.w3.org/2000/svg' height='24' viewBox='0 96 960 960' width='24'><path d='M240 976q-33 0-56.5-23.5T160 896V416q0-33 23.5-56.5T240 336h80q0-66 47-113t113-47q66 0 113 47t47 113h80q33 0 56.5 23.5T800 416v480q0 33-23.5 56.5T720 976H240Zm0-80h480V416h-80v80q0 17-11.5 28.5T600 536q-17 0-28.5-11.5T560 496v-80H400v80q0 17-11.5 28.5T360 536q-17 0-28.5-11.5T320 496v-80h-80v480Zm160-560h160q0-33-23.5-56.5T480 256q-33 0-56.5 23.5T400 336ZM240 896V416v480Z'></path></svg>\",\r\n        page: \"<svg xmlns='http://www.w3.org/2000/svg'  fill='currentColor' height='24' viewBox='0 96 960 960' width='24'><path d='M240 976q-33 0-56.5-23.5T160 896V256q0-33 23.5-56.5T240 176h320l240 240v480q0 33-23.5 56.5T720 976H240Zm280-520V256H240v640h480V456H520ZM240 256v200-200 640-640Z'/></svg>\",\r\n        category: \"<svg xmlns='http://www.w3.org/2000/svg'  fill='currentColor' height='24' viewBox='0 96 960 960' width='24'><path d='M160 896q-33 0-56.5-23.5T80 816V336q0-33 23.5-56.5T160 256h240l80 80h320q33 0 56.5 23.5T880 416v400q0 33-23.5 56.5T800 896H160Zm0-560v480h640V416H447l-80-80H160Zm0 0v480-480Z'/></svg>\",\r\n        dynamic: \"<svg xmlns='http://www.w3.org/2000/svg'   fill='currentColor' height='24' viewBox='0 96 960 960' width='24'><path d='M200 936q-33 0-56.5-23.5T120 856V296q0-33 23.5-56.5T200 216h440l200 200v440q0 33-23.5 56.5T760 936H200Zm0-80h560V456H600V296H200v560Zm80-80h400v-80H280v80Zm0-320h200v-80H280v80Zm0 160h400v-80H280v80Zm-80-320v160-160 560-560Z'/></svg>\",\r\n        trash: \"<svg xmlns='http://www.w3.org/2000/svg' fill='currentColor' height='24' viewBox='0 96 960 960' width='24'><path d='M280 936q-33 0-56.5-23.5T200 856V336h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680 936H280Zm400-600H280v520h400V336ZM360 776h80V416h-80v360Zm160 0h80V416h-80v360ZM280 336v520-520Z'/></svg>\",\r\n        'add-subpage-icon-tree': \"<svg xmlns='http://www.w3.org/2000/svg'  fill='currentColor' height='24' viewBox='0 96 960 960' width='24'><path d='M440 816h80V696h120v-80H520V496h-80v120H320v80h120v120ZM240 976q-33 0-56.5-23.5T160 896V256q0-33 23.5-56.5T240 176h320l240 240v480q0 33-23.5 56.5T720 976H240Zm280-520V256H240v640h480V456H520ZM240 256v200-200 640-640Z'/></svg>\",\r\n        'edit-category-icon-tree': \"<svg xmlns='http://www.w3.org/2000/svg' fill='currentColor'  height='24' viewBox='0 96 960 960' width='24'><path d='M200 856h56l345-345-56-56-345 345v56Zm572-403L602 285l56-56q23-23 56.5-23t56.5 23l56 56q23 23 24 55.5T829 396l-57 57Zm-58 59L290 936H120V766l424-424 170 170Zm-141-29-28-28 56 56-28-28Z'/></svg>\",\r\n        'delete-category-icon-tree': \"<svg xmlns='http://www.w3.org/2000/svg'  fill='currentColor' height='24' viewBox='0 96 960 960' width='24'><path d='M280 936q-33 0-56.5-23.5T200 856V336h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680 936H280Zm400-600H280v520h400V336ZM360 776h80V416h-80v360Zm160 0h80V416h-80v360ZM280 336v520-520Z'/></svg>\",\r\n        'add-subcategory-icon-tree': \"<svg xmlns='http://www.w3.org/2000/svg'  fill='currentColor' height='24' viewBox='0 96 960 960' width='24'><path d='M560 736h80v-80h80v-80h-80v-80h-80v80h-80v80h80v80ZM160 896q-33 0-56.5-23.5T80 816V336q0-33 23.5-56.5T160 256h240l80 80h320q33 0 56.5 23.5T880 416v400q0 33-23.5 56.5T800 896H160Zm0-560v480h640V416H447l-80-80H160Zm0 0v480-480Z'/></svg>\",\r\n\r\n        'add-post-icon-tree': \"<svg xmlns='http://www.w3.org/2000/svg' height='24'  fill='currentColor' viewBox='0 96 960 960' width='24'><path d='M200 936q-33 0-56.5-23.5T120 856V296q0-33 23.5-56.5T200 216h360v80H200v560h560V496h80v360q0 33-23.5 56.5T760 936H200Zm120-160v-80h320v80H320Zm0-120v-80h320v80H320Zm0-120v-80h320v80H320Zm360-80v-80h-80v-80h80v-80h80v80h80v80h-80v80h-80Z'/></svg>\",\r\n        noop: \"\",\r\n        settings: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" /></svg>',\r\n\r\n    }\r\n\r\n    icons['setting'] = icons.settings;\r\n    icons['add-product-icon-tree'] = icons.shop;\r\n\r\n    return icons[icon] || '';\r\n}\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/icon-resolver.js?");

/***/ }),

/***/ "./resources/assets/core/objects.js":
/*!******************************************!*\
  !*** ./resources/assets/core/objects.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nmw.object = {\r\n    extend: function () {\r\n        var extended = {};\r\n        var deep = false;\r\n        var i = 0;\r\n        var l = arguments.length;\r\n\r\n        if ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\r\n            deep = arguments[0];\r\n            i++;\r\n        }\r\n        var merge = function (obj) {\r\n            for ( var prop in obj ) {\r\n                if ( Object.prototype.hasOwnProperty.call( obj, prop ) ) {\r\n                    if ( deep && Object.prototype.toString.call(obj[prop]) === '[object Object]' ) {\r\n                        extended[prop] = mw.object.extend( true, extended[prop], obj[prop] );\r\n                    } else {\r\n                        extended[prop] = obj[prop];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        for ( ; i < l; i++ ) {\r\n            var obj = arguments[i];\r\n            merge(obj);\r\n        }\r\n        return extended;\r\n\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/objects.js?");

/***/ }),

/***/ "./resources/assets/core/options.js":
/*!******************************************!*\
  !*** ./resources/assets/core/options.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// JavaScript Document\n\n/**\n *\n * Options API\n *\n * @package        js\n * @subpackage        options\n * @since        Version 0.567\n */\n\n// ------------------------------------------------------------------------\n\n/**\n * mw.options\n *\n *  mw.options object\n *\n * @package        js\n * @subpackage    options\n * @category    options internal api\n * @version 1.0\n */\n\nmw.options = {\n    saveOption: function (o, c, err) {\n        if (typeof o !== 'object') {\n            return false;\n        }\n        var group = o.group || o.option_group,\n            key = o.key || o.option_key,\n            value = typeof o.value !== 'undefined' ? o.value : o.option_value;\n\n        if (!group || !key || (typeof value === 'undefined')) {\n            return false;\n        }\n        var lang = false;\n        if (typeof(o.lang) !== 'undefined') {\n            lang = o.lang;\n        }\n\n        var module = false;\n        if (typeof(o.module) !== 'undefined') {\n            module = o.module;\n        }\n\n        var data = {\n            option_group: group,\n            option_key: key,\n            option_value: value,\n\n        };\n\n        if(lang){\n            // for multilanguage module\n            data.lang=lang;\n        }\n        if(module){\n            // for module param\n            data.module=module;\n        }\n\n\n\n        return $.ajax({\n            type: \"POST\",\n            url: mw.settings.site_url + \"api/save_option\",\n            data: data,\n            success: function (a) {\n                if (typeof c === 'function') {\n                    c.call(a);\n                }\n            },\n            error: function (a) {\n                if (typeof err === 'function') {\n                    err.call(a);\n                }\n            }\n        });\n    },\n    save: function (el, callback) {\n\n\n        el = mw.$(el);\n        var og, og1, refresh_modules11;\n        if (!el) {\n            return;\n        }\n\n\n        var opt_id = el.attr('data-id');\n\n        og1 = og = el.attr('option-group') || el.attr('option_group') || el.attr('data-option-group');\n\n\n        if (og1 == null || (typeof(og1) === 'undefined') || og1 == '') {\n\n        }\n        var og_parent = null\n        var og_test = mw.tools.firstParentWithClass(el[0], 'module');\n        if (og_test) {\n            og_parent = og_test.id;\n\n            og_parent = mw.$(og_test).attr('for-module-id') || og_test.id;\n\n\n        }\n        // refresh_modules11 = og1 = og = og_test.id;\n\n\n        var refresh_modules12 = el.attr('data-reload') || el.attr('data-refresh');\n\n        var also_reload = el.attr('data-reload') || el.attr('data-also-reload');\n\n        var modal = mw.$(mw.dialog.get(el).container);\n\n        if (refresh_modules11 == undefined && modal !== undefined) {\n\n            var for_m_id = modal.attr('data-settings-for-module');\n\n        }\n        if (refresh_modules11 == undefined) {\n            var refresh_modules11 = el.attr('data-refresh');\n\n        }\n\n        var a = ['data-module-id', 'data-settings-for-module', 'option-group', 'data-option-group', 'data-refresh'],\n            i = 0, l = a.length;\n\n\n        var mname = modal !== undefined ? modal.attr('data-type') : undefined;\n\n        // if (typeof(refresh_modules11) == 'undefined') {\n        //     for (; i < l; i++) {\n        //         var og = og === undefined ? el.attr(a[i]) : og;\n        //     }\n        // } else {\n        //     var og = refresh_modules11;\n        // }\n        //\n        // if (og1 != undefined) {\n        //     var og = og1;\n        //     if (refresh_modules11 == undefined) {\n        //         if (refresh_modules12 == undefined) {\n        //             refresh_modules11 = og1;\n        //         } else {\n        //             refresh_modules11 = refresh_modules12;\n        //         }\n        //     }\n        // }\n\n\n        var val;\n        var dvu;\n        var dvc;\n\n        if (el[0].type === 'checkbox') {\n            val = '',\n                dvu = el.attr('data-value-unchecked'),\n                dvc = el.attr('data-value-checked');\n            if (!!dvu && !!dvc) {\n                val = el[0].checked ? dvc : dvu;\n            }\n            else {\n\n                var items = document.getElementsByName(el[0].name), i = 0, len = items.length;\n                for (; i < len; i++) {\n                    var _val = items[i].value;\n                    val = items[i].checked == true ? (val === '' ? _val : val + \",\" + _val) : val;\n                }\n            }\n\n        }\n        else {\n            val = el.val();\n        }\n        if (typeof(og) == 'undefined' && typeof(og) == 'undefined' && og_parent) {\n            og = og_parent;\n        }\n\n\n\n\n        var o_data = {\n            option_key: el.attr('name'),\n            option_group: og,\n            option_value: val\n        }\n\n\n        if (mname === undefined) {\n\n\n       if (mname === undefined && og_test !== undefined && og_test &&  $(og_test).attr('data-type')) {\n            var mname_from_type = $(og_test).attr('data-type');\n            mname = (mname_from_type.replace('/admin', ''));\n            o_data.module = mname;\n        } else if (og_test !== undefined && og_test && $(og_test).attr('parent-module')) {\n              o_data.module = $(og_test).attr('parent-module');\n             }\n        }\n\n\n        if (mname !== undefined) {\n            o_data.module = mname;\n        }\n\n\n        if (for_m_id !== undefined) {\n            o_data.for_module_id = for_m_id;\n        }\n        if (og != undefined) {\n            o_data.id = have_id;\n        }\n\n\n\n\n        var have_id = el.attr('data-custom-field-id');\n\n        if (have_id != undefined) {\n            o_data.id = have_id;\n        }\n\n        var have_option_type = el.attr('data-option-type');\n\n        if (have_option_type != undefined) {\n            o_data.option_type = have_option_type;\n        } else {\n            var have_option_type = el.attr('option-type');\n\n            if (have_option_type != undefined) {\n                o_data.option_type = have_option_type;\n            }\n        }\n        var reaload_in_parent = el.attr('parent-reload');\n\n        if (opt_id !== undefined) {\n            o_data.id = opt_id;\n        }\n\n        var attrLang = el.attr('lang');\n        if (typeof(attrLang) !== 'undefined') {\n            o_data.lang = attrLang;\n        }\n\n        var attrModule = el.attr('module');\n        if (typeof(attrModule) !== 'undefined') {\n            o_data.module = attrModule;\n        }\n\n        $.ajax({\n            type: \"POST\",\n            url: mw.settings.site_url + \"api/save_option\",\n            data: o_data,\n            success: function (data) {\n\n                var which_module_to_reload = null;\n\n\n                if (typeof(refresh_modules11) == 'undefined') {\n                    which_module_to_reload = og1;\n                } else if (refresh_modules12) {\n                    which_module_to_reload = refresh_modules12;\n                }\n\n                if ((typeof(liveEditSettings) != 'undefined' && liveEditSettings) || mw.top().win.liveEditSettings) {\n                    if (!og1 && og_parent) {\n                        which_module_to_reload = og_parent;\n                    }\n                }\n\n                var reload_in_parent_trieggered = false;\n\n                if (mw.admin) {\n                    if (mw.top().win.mweditor && mw.top().win.mweditor.contentWindow) {\n                        setTimeout(function () {\n                            mw.top().win.mweditor.contentWindow.mw.reload_module(\"#\" + which_module_to_reload);\n\n                        }, 777);\n                    }\n                }\n                if (window.parent.mw) {\n\n                    if (self !== top) {\n\n                        setTimeout(function () {\n\n\n\n                            var mod_element = window.parent.document.getElementById(which_module_to_reload);\n                            if (mod_element) {\n                                // var module_parent_edit_field = window.mw.parent().tools.firstParentWithClass(mod_element, 'edit')\n                               // var module_parent_edit_field = window.mw.parent().tools.firstMatchesOnNodeOrParent(mod_element, ['.edit[rel=inherit]'])\n                                var module_parent_edit_field = window.mw.parent().tools.firstMatchesOnNodeOrParent(mod_element, ['.edit:not([itemprop=dateModified])']);\n                                if (!module_parent_edit_field) {\n                                   module_parent_edit_field = window.mw.parent().tools.firstMatchesOnNodeOrParent(mod_element, ['.edit[rel=inherit]']);\n                                }\n\n                                if (module_parent_edit_field) {\n                                   // window.mw.parent().tools.addClass(module_parent_edit_field, 'changed');\n                                    window.mw.parent().wysiwyg.change(module_parent_edit_field);\n                                    window.mw.parent().askusertostay = true;\n\n\n                                }\n                            }\n\n                            mw.reload_module_parent(\"#\" + which_module_to_reload);\n                            if (which_module_to_reload != og1) {\n                                mw.reload_module_parent(\"#\" + og1);\n                            }\n\n                            if (typeof mw !== 'undefined' && mw.top().app && mw.top().app.editor) {\n                                mw.top().app.editor.dispatch('onModuleSettingsChanged', ({'moduleId': which_module_to_reload} || {}));\n                            }\n\n\n                            reload_in_parent_trieggered = 1;\n\n\n                        }, 777);\n                    }\n\n                    if (window.mw.parent().reload_module != undefined) {\n\n                        if (!!mw.admin) {\n                            setTimeout(function () {\n                                window.mw.parent().reload_module(\"#\" + which_module_to_reload);\n                                mw.options.___rebindAllFormsAfterReload();\n                            }, 777);\n                        }\n                        else {\n                            if (window.parent.mweditor != undefined) {\n                                window.parent.mweditor.contentWindow.mw.reload_module(\"#\" + which_module_to_reload, function () {\n                                    setTimeout(function () {\n                                        window.mw.parent().exec(\"mw.admin.editor.set\", window.parent.mweditor);\n                                        mw.options.___rebindAllFormsAfterReload();\n                                    }, 777);\n                                });\n                            }\n                            if (window.parent.mw != undefined) {\n                                window.mw.parent().reload_module(\"#\" + which_module_to_reload, function () {\n                                    setTimeout(function () {\n                                        window.mw.parent().exec(\"mw.admin.editor.set\", window.parent.mweditor);\n                                        mw.options.___rebindAllFormsAfterReload();\n                                    }, 777);\n                                });\n                            }\n                        }\n                        reload_in_parent_trieggered = 1;\n\n                    }\n                }\n\n\n                // if (reaload_in_parent != undefined && reaload_in_parent !== null) {\n                //     //     window.mw.parent().reload_module(\"#\"+refresh_modules11);\n                //\n                //     return false;\n                // }\n\n\n                if (also_reload != undefined) {\n\n\n                    if (window.mw != undefined && reaload_in_parent !== true) {\n                        if (window.mw.reload_module !== undefined) {\n\n                            window.mw.reload_module(also_reload, function (reloaded_el) {\n\n                                //  mw.options.form(reloaded_el, callback);\n                                mw.options.___rebindAllFormsAfterReload();\n                            });\n                            window.mw.reload_module('#' + also_reload, function (reloaded_el) {\n\n                                //mw.options.form(reloaded_el, callback);\n                                mw.options.___rebindAllFormsAfterReload();\n                            });\n                        }\n                    }\n\n                }\n\n                /*           if (reaload_in_parent !== true && for_m_id != undefined && for_m_id != '') {\n                               for_m_id = for_m_id.toString()\n                               if (window.mw != undefined) {\n\n\n\n\n                                   // if (window.mw.reload_module !== undefined) {\n                                   //\n                                   // \t\t\twindow.mw.reload_module('#'+for_m_id, function(reloaded_el){\n                                   //\n                                   // \t\t\t\tmw.options.form(reloaded_el, callback);\n                                   // \t\t\t});\n                                   //        }\n                               }\n                           } else*/\n\n\n                if (reload_in_parent_trieggered == false && reaload_in_parent !== true && which_module_to_reload != undefined && which_module_to_reload != '') {\n                    which_module_to_reload = which_module_to_reload.toString()\n\n\n                    if (window.mw.reload_module !== undefined) {\n                        mw.reload_module_parent(which_module_to_reload, function() {\n                            mw.reload_module_parent(\"#\" + which_module_to_reload, function(){\n                                mw.top().app.dispatch('moduleReloaded');\n                            });\n                        });\n\n                    }\n\n\n                }\n\n\n                typeof callback === 'function' ? callback.call(data) : '';\n                setTimeout(function () {\n                    mw.options.___rebindAllFormsAfterReload();\n\n                    if(mw.top && mw.top().app) {\n                        setTimeout(function () {\n                        mw.top().app.dispatch('moduleReloaded');\n                    }, 300);\n\n                    }\n                }, 300);\n                //\n                //\n                //d(refresh_modules11);\n                //d(mw.options._bindedRootFormsRegistry);\n            }\n        })\n    },\n\n\n    tempOption: function (element, option) {\n        var existingOption = [];\n        var jsonAttr = element.getAttribute('data-mw-temp-option-save');\n\n        if (jsonAttr) {\n            existingOption = JSON.parse(jsonAttr);\n        }\n        // find by group  and key\n        // Specify the group and key to search for\n        var searchGroup = option.group;\n        var searchKey = option.key;\n\n        // Find the index of the matching object\n        var index = existingOption.findIndex(item => item.group === searchGroup && item.key === searchKey);\n\n        if (index !== -1) {\n            // Merge the option into the existing object\n            existingOption[index] = { ...existingOption[index], ...option };\n        } else if (Array.isArray(existingOption)) {\n            existingOption.push(option);\n        } else {\n            existingOption = [option];\n        }\n\n        element.setAttribute('data-mw-temp-option-save', JSON.stringify(existingOption));\n    },\n\n\n\n    publishTempOptions: function (doc) {\n        var optionElements = doc.querySelectorAll('[data-mw-temp-option-save]');\n        var optionsToSave  = [];\n        if(optionElements){\n            for (var i = 0; i < optionElements.length; i++) {\n                var optionElement = optionElements[i];\n                var jsonAttr = optionElement.getAttribute('data-mw-temp-option-save');\n                var optionsAll = JSON.parse(jsonAttr);\n\n                if(optionsAll.length >0){\n                    for (var j = 0; j < optionsAll.length; j++) {\n                        var option = optionsAll[j];\n                        optionsToSave.push(option);\n                    }\n                }\n\n\n                optionElement.removeAttribute('data-mw-temp-option-save');\n            }\n        }\n        if(optionsToSave){\n            for (var i = 0; i < optionsToSave.length; i++) {\n                var option = optionsToSave[i];\n                this.saveOption(option);\n            }\n        }\n    }\n};\n\nmw.options._optionSaved = null;\n\nmw.options._bindedRootFormsRegistry = [];\n\nmw.options.remove_bindings = function ($selector) {\n\n    var $root = mw.$($selector);\n    var root = $root[0];\n    if (!root) return;\n\n    if (root._optionsEvents) {\n        delete(root._optionsEvents);\n        root._optionsEventsClearBidings = true;\n    }\n    root.addClass('mw-options-form-force-rebind');\n\n\n    mw.$(\"input, select, textarea\", root)\n        .not('.mw-options-form-binded-custom')\n        .each(function () {\n            var item = mw.$(this);\n\n\n            if (item && item[0] && item[0]._optionsEventsBinded) {\n                delete(item[0]._optionsEventsBinded);\n\n            }\n        });\n\n};\nmw.options.form = function ($selector, callback, beforepost) {\n\n\n\n    //setTimeout(function () {\n\n\n    var numOfbindigs = 0;\n //   var force_rebind = true;\n    var force_rebind = false;\n\n    var $root = mw.$($selector);\n    var root = $root[0];\n    if (!root) return;\n\n    //\n    if (root && $root.hasClass('mw-options-form-force-rebind')) {\n        force_rebind = true;\n\n    }\n\n    if (!root._optionsEvents) {\n\n        mw.$(\"input, select, textarea\", root)\n            .not('.mw-options-form-binded-custom')\n            .each(function () {\n                //this._optionSaved = true;\n\n                var item = mw.$(this);\n                if (force_rebind) {\n                    item[0]._optionsEventsBinded = null;\n                }\n\n\n                if (item && item[0] && !item[0]._optionsEventsBinded) {\n\n                    if (item.hasClass('mw_option_field')) {\n                        numOfbindigs++;\n\n\n                        item[0]._optionsEventsBinded = true;\n\n\n                        if (root._optionsEventsClearBidings) {\n                            item.off('change input paste');\n                        }\n\n                        item.addClass('mw-options-form-binded');\n                        item.on('change input paste', function (e) {\n\n                            var isCheckLike = true;\n                            var token = isCheckLike ? this.name : this.name + mw.$(this).val();\n                            mw.options.___slowDownEvent(token, this, function () {\n                                if (typeof root._optionsEvents.beforepost === 'function') {\n                                    root._optionsEvents.beforepost.call(this);\n                                }\n                                if (top !== self && window.mw.parent().drag && window.mw.parent().drag.save) {\n                                    window.mw.parent().drag.save();\n                                }\n                                mw.options.save(this, root._optionsEvents.callback);\n                            });\n                            //}\n                        });\n                    }\n                }\n            });\n    }\n\n\n\n\n    // REBIND\n    if (numOfbindigs > 0) {\n        root._optionsEvents = root._optionsEvents || {};\n        root._optionsEvents = $.extend({}, root._optionsEvents, {callback: callback, beforepost: beforepost});\n\n\n        var rebind = {};\n        if (typeof root._optionsEvents.beforepost === 'function') {\n            rebind.beforepost = root._optionsEvents.beforepost;\n        }\n        rebind.callback = root._optionsEvents.callback;\n        rebind.binded_selector = $selector;\n        var rebindtemp = mw.tools.cloneObject(rebind);\n        //fix here chek if in array\n\n\n        var is_in = mw.options._bindedRootFormsRegistry.filter(function (a) {\n            return a.binded_selector === $selector;\n        })\n\n        if (!is_in.length) {\n            mw.options._bindedRootFormsRegistry.push(rebindtemp);\n        }\n    }\n    // END OF REBIND\n\n\n    //}, 10,$selector, callback, beforepost);\n\n\n};\n\n\nmw.options.___slowDownEvents = {};\nmw.options.___slowDownEvent = function (token, el, call) {\n    if (typeof mw.options.___slowDownEvents[token] === 'undefined') {\n        mw.options.___slowDownEvents[token] = null;\n    }\n    clearTimeout(mw.options.___slowDownEvents[token]);\n    mw.options.___slowDownEvents[token] = setTimeout(function () {\n        call.call(el);\n    }, 700);\n};\n\nmw.options.___rebindAllFormsAfterReload = function () {\n\n    var token = '___rebindAllFormsAfterReload';\n\n\n    mw.options.___slowDownEvent(token, this, function () {\n\n\n        for (var i = 0, l = mw.options._bindedRootFormsRegistry.length; i < l; i++) {\n            var binded_root = mw.options._bindedRootFormsRegistry[i];\n            if (binded_root.binded_selector) {\n\n                var $root = mw.$(binded_root.binded_selector);\n                var root = $root[0];\n                if (root) {\n\n                    var rebind_beforepost = null;\n                    var rebind_callback = null;\n                    if (typeof binded_root.beforepost === 'function') {\n                        var rebind_beforepost = binded_root.beforepost;\n                    }\n\n                    if (typeof binded_root.callback === 'function') {\n                        var rebind_callback = binded_root.callback;\n                    }\n                    var has_non_binded = false;\n                    mw.$(\"input, select, textarea\", root)\n                        .not('.mw-options-form-binded-custom')\n                        .not('.mw-options-form-binded')\n                        .each(function () {\n                            var item = mw.$(this);\n                            if (item.hasClass('mw_option_field')) {\n                                if (!item[0]._optionsEventsBinded) {\n                                    has_non_binded = true;\n                                    item.attr('autocomplete', 'off');\n                                }\n                            }\n                        });\n\n                    if (root._optionsEvents && has_non_binded && rebind_callback) {\n                        root._optionsEvents = null;\n                        root._optionsEventsClearBidings = true;\n                        mw.options.form(binded_root.binded_selector, rebind_callback, rebind_beforepost);\n\n                        // mw.options._bindedRootFormsRegistry =  mw.options._bindedRootFormsRegistry.filter(function (a) {\n                        //     return a.binded_selector != binded_root.binded_selector\n                        // })\n\n                    }\n                }\n\n\n            }\n        }\n    });\n}\n//\n// mw.options.___locateModuleNodesToBeRealoaded = function (selectror,window_scope) {\n//\n//    var module = module.replace(/##/g, '#');\n//    var m = mw.$(\".module[data-type='\" + module + \"']\");\n//    if (m.length === 0) {\n//        try { var m = mw.$(module); }  catch(e) {};\n//    }\n//\n//}\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/options.js?");

/***/ }),

/***/ "./resources/assets/core/url.js":
/*!**************************************!*\
  !*** ./resources/assets/core/url.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// URL Strings - Manipulations\r\n\r\nwindow.json2url = function(obj){ var t=[];for(var x in obj)t.push(x+\"=\"+encodeURIComponent(obj[x]));return t.join(\"&\").replace(/undefined/g, 'false') };\r\n\r\n\r\nmw.url = {\r\n    hashStart: '',\r\n    getDomain:function(url){\r\n      return url.match(/:\\/\\/(www\\.)?(.[^/:]+)/)[2];\r\n    },\r\n    removeHash:function(url){\r\n        return url.replace( /#.*/, \"\");\r\n    },\r\n    getHash:function(url){\r\n      return url.indexOf('#')!=-1 ? url.substring(url.indexOf('#'), url.length) : \"\";\r\n    },\r\n    strip:function(url){\r\n      return url.replace(/#[^#]*$/, \"\").replace(/\\?[^\\?]*$/, \"\")\r\n    },\r\n    getUrlParams:function(url){\r\n        url = mw.url.removeHash(url);\r\n        if(url.includes('?')){\r\n          var arr = url.slice(url.indexOf('?') + 1).split('&');\r\n          var obj = {}, i=0, len = arr.length;\r\n          for( ; i<len; i++){\r\n            var p_arr = arr[i].split('=');\r\n            obj[p_arr[0]] = p_arr[1];\r\n          }\r\n          return obj;\r\n        }\r\n        else{return {} }\r\n    },\r\n    set_param:function(param, value, url){\r\n        url = url || window.location.href;\r\n        var hash = mw.url.getHash(url);\r\n        var params = mw.url.getUrlParams(url);\r\n        params[param] = value;\r\n        var params_string = json2url(params);\r\n        var url = mw.url.strip(url);\r\n        return decodeURIComponent (url + \"?\" + params_string + hash);\r\n    },\r\n    remove_param:function(url, param){\r\n        var hash = mw.url.getHash(url);\r\n        var params = mw.url.getUrlParams(url);\r\n        delete params[param];\r\n        var params_string = json2url(params);\r\n        url = mw.url.strip(url);\r\n        return decodeURIComponent (url + \"?\" + params_string + hash);\r\n    },\r\n    getHashParams:function(hash){\r\n        var r = new RegExp(mw.url.hashStart, \"g\");\r\n        var hash = hash.replace(r, \"\");\r\n        var hash = hash.replace(/\\?/g, \"\");\r\n        if(hash=='' || hash=='#'){\r\n          return {}\r\n        }\r\n        else{\r\n          var hash = hash.replace(/#/g, \"\");\r\n          var arr = hash.split('&');\r\n          var obj = {}, i=0, len = arr.length;\r\n          for( ; i<len; i++){\r\n            var p_arr = arr[i].split('=');\r\n            obj[p_arr[0]] = p_arr[1];\r\n          }\r\n          return obj;\r\n        }\r\n    },\r\n    setHashParam:function(param, value, hash){\r\n\r\n      var hash = hash || mw.hash();\r\n      var obj = mw.url.getHashParams(hash);\r\n      obj[param] = value;\r\n      return mw.url.hashStart + decodeURIComponent(json2url(obj));\r\n    },\r\n    windowHashParam:function(a,b){\r\n      if(b !== undefined){\r\n        mw.hash(mw.url.setHashParam(a,b));\r\n      }\r\n      else{\r\n        return mw.url.getHashParams(mw.hash())[a];\r\n      }\r\n    },\r\n    deleteHashParam:function(hash, param){\r\n        var params = mw.url.getHashParams(hash);\r\n        delete params[param];\r\n        var params_string = decodeURIComponent(mw.url.hashStart+json2url(params));\r\n        return params_string;\r\n    },\r\n    windowDeleteHashParam:function(param){\r\n       mw.hash(mw.url.deleteHashParam(window.location.hash, param));\r\n    },\r\n    whichHashParamsHasBeenRemoved:function(currHash, prevHash){\r\n        var curr = mw.url.getHashParams(currHash);\r\n        var prev = mw.url.getHashParams(prevHash);\r\n        var hashes = [];\r\n        for(var x in prev){\r\n            curr[x] === undefined ? hashes.push(x) : '';\r\n        }\r\n        return hashes;\r\n    },\r\n    hashParamToActiveNode:function(param, classNamespace, context){\r\n        var context = context || document.body;\r\n        var val =  mw.url.windowHashParam(param);\r\n        mw.$('.'+classNamespace, context).removeClass('active');\r\n        var active = mw.$('.'+classNamespace + '-' + val, context);\r\n        if(active.length > 0){\r\n           active.addClass('active');\r\n        }\r\n        else{\r\n           mw.$('.'+classNamespace + '-none', context).addClass('active');\r\n        }\r\n    },\r\n    mwParams:function(url){\r\n        url = url || window.location.pathname;\r\n        url = mw.url.removeHash(url);\r\n        var arr = url.split('/');\r\n        var obj = {};\r\n        var i=0,l=arr.length;\r\n        for( ; i<l; i++){\r\n            if(arr[i].indexOf(':') !== -1 && arr[i].indexOf('http') === -1){\r\n                var p = arr[i].split(':');\r\n                obj[p[0]] = p[1];\r\n            }\r\n        }\r\n        return obj;\r\n    },\r\n    type:function(url){\r\n        if(!url) return;\r\n      url = url.toString();\r\n      if( url ===  'false' ){\r\n          return false;\r\n      }\r\n      if(url.indexOf('/images.unsplash.com/') !== -1){\r\n          return 'image';\r\n      }\r\n      var extension = url.split('.').pop();\r\n      var images = 'jpg,png,gif,jpeg,bmp,webp';\r\n      if(images.includes(extension)){\r\n        return 'image';\r\n      }\r\n\r\n      else if(extension=='pdf'){return 'pdf'}\r\n      else if(url.includes('youtube.com') || url.includes('youtu.be')){return 'youtube'}\r\n      else if(url.includes('vimeo.com')){return 'vimeo'}\r\n\r\n      else{ return 'link'; }\r\n    }\r\n};\r\n\r\nmw.slug = {\r\n  max: 2048,\r\n  normalize:function(string){\r\n      if(!string) return '';\r\n      string = string.substring(0, mw.slug.max);\r\n      return string.replace(/[`\\/~!@#$%^&№€§*()\\=?'\"<>\\{\\}\\[\\]\\\\]/g, '');\r\n  },\r\n  removeSpecials:function(string){\r\n    string = mw.slug.normalize(string);\r\n    if(!string) return string;\r\n    var special = 'àáäãâèéëêìíïîòóöôõùúüûñç·=,:;',\r\n        normal =  'aaaaaeeeeiiiiooooouuuunc------',\r\n        len = special.length,\r\n        i = 0;\r\n    for ( ; i<len; i++) {\r\n       var bad = special[i];\r\n       var good = normal[i];\r\n       string = string.replace(new RegExp(bad, 'g'), good);\r\n    }\r\n    return string;\r\n  },\r\n  create:function(string){\r\n    string = string || '';\r\n    string = mw.slug.removeSpecials(string);\r\n    return string.trim().toLowerCase().replace(/[-\\s]+/g, '-');\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/core/url.js?");

/***/ }),

/***/ "./resources/assets/js/admin-filament-app.globals.js":
/*!***********************************************************!*\
  !*** ./resources/assets/js/admin-filament-app.globals.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_container_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/container.js */ \"./resources/assets/core/container.js\");\n\r\n\r\n\r\n\r\nif(!mw.app) {\r\n    mw.admin = new _core_container_js__WEBPACK_IMPORTED_MODULE_0__.MWUniversalContainer();\r\n    mw.app = mw.admin;\r\n}\r\n\r\n\r\nmw.widget = {};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/admin-filament-app.globals.js?");

/***/ }),

/***/ "./resources/assets/js/admin-filament-helpers.js":
/*!*******************************************************!*\
  !*** ./resources/assets/js/admin-filament-helpers.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminFilamentHelpers: () => (/* binding */ AdminFilamentHelpers),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/base-class.js */ \"./resources/assets/core/base-class.js\");\n\r\n\r\nconst css = ``;\r\n\r\nclass AdminFilamentHelpers extends _core_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(options = {}) {\r\n        super();\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AdminFilamentHelpers);\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/admin-filament-helpers.js?");

/***/ }),

/***/ "./resources/assets/js/admin-filament.js":
/*!***********************************************!*\
  !*** ./resources/assets/js/admin-filament.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminFilament: () => (/* binding */ AdminFilament)\n/* harmony export */ });\n/* harmony import */ var _core_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/base-class.js */ \"./resources/assets/core/base-class.js\");\n/* harmony import */ var _admin_filament_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./admin-filament-helpers.js */ \"./resources/assets/js/admin-filament-helpers.js\");\n\r\n\r\n\r\nclass AdminFilament extends _core_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    helpers = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.helpers = new _admin_filament_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n\r\n        document.addEventListener('livewire:init', () => {\r\n            this.init();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        this.hookOptionSaved();\r\n        this.hookLivewireLoadingState();\r\n\r\n\r\n    }\r\n\r\n    hookLivewireLoadingState() {\r\n        // add .mw-livewire-loading class to body when live wire is loading\r\n\r\n        Livewire.hook('commit.prepare', ({component, commit}) => {\r\n            this.addLoadingClassToBody();\r\n        })\r\n\r\n\r\n        // Livewire.hook('request', ({ uri, options, payload, respond, succeed, fail }) => {\r\n        //     // Runs after commit payloads are compiled, but before a network request is sent...\r\n        //\r\n        //     respond(({ status, response }) => {\r\n        //       //  this.removeLoadingClassToBody();\r\n        //     })\r\n        //\r\n        //     succeed(({ status, json }) => {\r\n        //         this.removeLoadingClassToBody();\r\n        //     })\r\n        //\r\n        //     fail(({ status, content, preventDefault }) => {\r\n        //         this.removeLoadingClassToBody();\r\n        //     })\r\n        // })\r\n\r\n\r\n\r\n        // Livewire.hook('commit', ({component, commit, respond, succeed, fail}) => {\r\n        //\r\n        //     respond(() => {\r\n        //      //   this.removeLoadingClassToBody();\r\n        //     })\r\n        //\r\n        //     succeed(({snapshot, effect}) => {\r\n        //         this.removeLoadingClassToBody();\r\n        //     })\r\n        //\r\n        //     fail(() => {\r\n        //         this.removeLoadingClassToBody();\r\n        //     })\r\n        // })\r\n        //\r\n\r\n        Livewire.hook('message.sent', (message, component) => {\r\n            this.addLoadingClassToBody();\r\n        })\r\n\r\n        Livewire.hook('message.processed', (message, component) => {\r\n            this.removeLoadingClassToBody();\r\n        })\r\n\r\n        //\r\n        // Livewire.hook('morph.added', ({el, component}) => {\r\n        //    // this.removeLoadingClassToBody();\r\n        // })\r\n        // Livewire.hook('morph.adding', () => {\r\n        //   //  this.addLoadingClassToBody();\r\n        // })\r\n        //\r\n        // Livewire.hook('morph.updated', ({el, component}) => {\r\n        //  //   this.removeLoadingClassToBody();\r\n        // })\r\n        // Livewire.hook('morph.updating', () => {\r\n        //     this.addLoadingClassToBody();\r\n        // })\r\n        // Livewire.hook('morph.removed', ({el, component}) => {\r\n        //   //  this.removeLoadingClassToBody();\r\n        // })\r\n        // Livewire.hook('morph.removing', () => {\r\n        //  //   this.addLoadingClassToBody();\r\n        // })\r\n    }\r\n\r\n    addLoadingClassToBody() {\r\n\r\n        document.body.classList.add('mw-livewire-loading');\r\n    }\r\n    timeout = null;\r\n    removeLoadingClassToBody() {\r\n\r\n        clearTimeout(this.timeout);\r\n        this.timeout = setTimeout(function () {\r\n            document.body.classList.remove('mw-livewire-loading');\r\n        }, 500);\r\n\r\n    }\r\n\r\n    hookOptionSaved() {\r\n\r\n        Livewire.on('mw-option-saved', function ($event) {\r\n            if ($event.optionGroup !== undefined) {\r\n\r\n                    if (typeof top.mw !== 'undefined'\r\n                        && typeof top.mw.top !== 'undefined'\r\n                        && typeof top.mw.top().app !== 'undefined'\r\n                        && typeof top.mw.top().app.liveEdit !== 'undefined'\r\n                    ) {\r\n                        var canvasDocument = mw.top().app.canvas.getDocument();\r\n                        var canvasWindow = mw.top().app.canvas.getWindow();\r\n\r\n\r\n\r\n\r\n\r\n                        var reloadedWithLiveweire = false;\r\n                        if(canvasWindow.Livewire){\r\n                            //check if is liveweire module and reload it\r\n                            var moduleWireId = canvasDocument.querySelector('#' + $event.optionGroup+ '> [wire\\\\:id]');\r\n                            if(moduleWireId){\r\n                                moduleWireId = moduleWireId.getAttribute('wire:id');\r\n                                var component = canvasWindow.Livewire.find(moduleWireId);\r\n                                component.$refresh();\r\n                                reloadedWithLiveweire = true;\r\n                            }\r\n                        }\r\n                        if(!reloadedWithLiveweire){\r\n                            top.mw.top().reload_module_everywhere('#' + $event.optionGroup);\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/admin-filament.js?");

/***/ }),

/***/ "./resources/assets/js/admin-modules.js":
/*!**********************************************!*\
  !*** ./resources/assets/js/admin-modules.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminModules: () => (/* binding */ AdminModules)\n/* harmony export */ });\n/* harmony import */ var _core_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/base-class.js */ \"./resources/assets/core/base-class.js\");\n\r\n\r\nclass AdminModules extends _core_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    getModuleSettingsUrl(moduleType,options = {}) {\r\n\r\n        var srcBase = route('live_edit.module_settings');\r\n\r\n        if (typeof mw !== 'undefined' && typeof mw.settings !== 'undefined' && typeof mw.settings.liveEditModuleSettingsUrls === 'object' && mw.settings.liveEditModuleSettingsUrls[moduleType]) {\r\n            if (typeof mw.settings.liveEditModuleSettingsUrls === 'object' && mw.settings.liveEditModuleSettingsUrls[moduleType]) {\r\n                srcBase = mw.settings.liveEditModuleSettingsUrls[moduleType];\r\n            }\r\n        }\r\n        var src = srcBase;\r\n        var attrsForSettings = {};\r\n        if(options && typeof options === 'object' && Object.keys(options).length > 0) {\r\n            src = srcBase + \"?\" + json2url(options);\r\n        }\r\n\r\n        return src;\r\n\r\n\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/admin-modules.js?");

/***/ }),

/***/ "./resources/assets/js/admin-package-manager.js":
/*!******************************************************!*\
  !*** ./resources/assets/js/admin-package-manager.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminPackageManager: () => (/* binding */ AdminPackageManager)\n/* harmony export */ });\nclass AdminPackageManager {\r\n    constructor() {\r\n\r\n    }\r\n\r\n\r\n    set_loading(is_loading) {\r\n\r\n        mw.tools.loading(document.querySelector('.js-install-package-loading-container-confirm'), is_loading, 'slow');\r\n        mw.tools.loading(document.querySelector('#mw-packages-browser-nav-tabs-nav'), is_loading, 'slow');\r\n        mw.tools.loading(document.querySelector('.admin-toolbar'), is_loading, 'slow');\r\n        mw.tools.loading(document.querySelector('#update_queue_set_modal'), is_loading, 'slow');\r\n\r\n    }\r\n\r\n    reload_packages_list () {\r\n        this.set_loading(true)\r\n        mw.notification.success('Reloading packages', 15000);\r\n        mw.clear_cache();\r\n        window.location.reload();\r\n    }\r\n\r\n    show_licenses_modal () {\r\n\r\n        var data = {}\r\n        licensesModal = mw.tools.open_module_modal('settings/group/licenses', data, {\r\n              overlay: true,\r\n            //  iframe: true,\r\n            height: 'auto',\r\n            width: 960,\r\n            title: 'Licenses',\r\n            skin: 'simple'\r\n        });\r\n    }\r\n\r\n    install_composer_package_by_package_name ($key, $version, $callback) {\r\n\r\n        mw.notification.success('Loading...', 25000);\r\n        //mw.load_module('updates/worker', '#mw-updates-queue');\r\n\r\n        var update_queue_set_modal = mw.dialog({\r\n            content: '<div   id=\"update_queue_process_alert\"></div>',\r\n            overlay: false,\r\n            height:'300px',\r\n            id: 'update_queue_set_modal',\r\n            title: 'Preparing'\r\n        });\r\n\r\n       // mw.reload_module('#update_queue_process_alert');\r\n\r\n        this.set_loading(50)\r\n\r\n        var values = {require_name: $key, require_version: $version};\r\n\r\n        this.install_composer_package_by_package_name_do_ajax(values, $callback);\r\n\r\n    }\r\n\r\n    #last_step_vals = null;\r\n\r\n\r\n    install_composer_package_by_package_name_do_ajax (values, callback) {\r\n        $.ajax({\r\n            url: mw.settings.api_url + \"mw_composer_install_package_by_name\",\r\n            type: \"post\",\r\n            data: values,\r\n            success: msg => {\r\n                this.set_loading(true);\r\n\r\n                if (typeof msg == 'object' && msg.try_again  && msg.unzip_cache_key) {\r\n                    if (msg.try_again) {\r\n                        values.try_again_step = true;\r\n                        values.unzip_cache_key =  msg.unzip_cache_key;\r\n                        this.#last_step_vals = values;\r\n                        setTimeout( () => {\r\n                            this.install_composer_package_by_package_name_do_ajax(values, callback);\r\n\r\n                        }, 500);\r\n\r\n\r\n\r\n                        return;\r\n                    }\r\n                } else {\r\n\r\n                    if (typeof callback === 'function') {\r\n                        return callback(msg);\r\n                    }\r\n\r\n                    mw.notification.msg(msg);\r\n                    this.set_loading(false);\r\n\r\n                    this.reload_packages_list();\r\n                    this.set_loading(false);\r\n\r\n                    mw.$('#update_queue_set_modal').remove();\r\n\r\n                }\r\n\r\n\r\n\r\n            },\r\n\r\n            error:   (jqXHR, textStatus, errorThrown) => {\r\n\r\n\r\n                this.set_loading(false);\r\n\r\n                setTimeout( () => {\r\n                    this.install_composer_package_by_package_name_do_ajax(this.#last_step_vals);\r\n                }, 500);\r\n            }\r\n\r\n        }).always(  (jqXHR, textStatus) => {\r\n\r\n            if (typeof callback === 'function') {\r\n                return callback(jqXHR);\r\n            }\r\n\r\n\r\n\r\n            mw.$('#update_queue_set_modal').remove();\r\n\r\n            this.set_loading(false);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n}\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/admin-package-manager.js?");

/***/ }),

/***/ "./resources/assets/js/admin-tools.service.js":
/*!****************************************************!*\
  !*** ./resources/assets/js/admin-tools.service.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminTools: () => (/* binding */ AdminTools)\n/* harmony export */ });\n/* harmony import */ var _tools_domhelpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tools/domhelpers.js */ \"./resources/assets/tools/domhelpers.js\");\n/* harmony import */ var _tools_iframe_auto_height_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tools/iframe-auto-height.js */ \"./resources/assets/tools/iframe-auto-height.js\");\n\r\n\r\n\r\nclass AdminTools {\r\n    constructor(app) {\r\n        this._app = app;\r\n        this.init();\r\n    }\r\n\r\n    #ready = false;\r\n\r\n    init() {\r\n        if(this.#ready) {\r\n            return;\r\n        }\r\n        this.#ready = true;\r\n        this.extend(_tools_domhelpers_js__WEBPACK_IMPORTED_MODULE_0__.DomHelpers)\r\n        this.iframeAutoHeight = _tools_iframe_auto_height_js__WEBPACK_IMPORTED_MODULE_1__.iframeAutoHeight;\r\n    }\r\n\r\n    index(el, parent, selector) {\r\n        el = mw.$(el)[0];\r\n        selector = selector || el.tagName.toLowerCase();\r\n        parent = parent || el.parentNode;\r\n        var all;\r\n        if (parent.constructor === [].constructor) {\r\n            all = parent;\r\n        }\r\n        else {\r\n            all = mw.$(selector, parent)\r\n        }\r\n        var i = 0, l = all.length;\r\n        for (; i < l; i++) {\r\n            if (el === all[i]) return i;\r\n        }\r\n    }\r\n\r\n    extend(methods = {}) {\r\n        for (let i in methods) {\r\n            this[i] = methods[i];\r\n        }\r\n    }\r\n\r\n}\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/admin-tools.service.js?");

/***/ }),

/***/ "./resources/assets/js/admin.js":
/*!**************************************!*\
  !*** ./resources/assets/js/admin.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./resources/assets/js/core.js\");\n/* harmony import */ var _core_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/@core.js */ \"./resources/assets/core/@core.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/_.js */ \"./resources/assets/core/_.js\");\n/* harmony import */ var _core_ajax_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/ajax.js */ \"./resources/assets/core/ajax.js\");\n/* harmony import */ var _admin_filament_app_globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./admin-filament-app.globals.js */ \"./resources/assets/js/admin-filament-app.globals.js\");\n/* harmony import */ var _core_url_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/url.js */ \"./resources/assets/core/url.js\");\n/* harmony import */ var _core_events_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/events.js */ \"./resources/assets/core/events.js\");\n/* harmony import */ var _live_edit_live_edit_image_dialog_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../live-edit/live-edit-image-dialog.js */ \"./resources/assets/live-edit/live-edit-image-dialog.js\");\n/* harmony import */ var _admin_tools_service_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./admin-tools.service.js */ \"./resources/assets/js/admin-tools.service.js\");\n/* harmony import */ var _admin_filament_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./admin-filament.js */ \"./resources/assets/js/admin-filament.js\");\n/* harmony import */ var _admin_modules_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./admin-modules.js */ \"./resources/assets/js/admin-modules.js\");\n/* harmony import */ var _api_core_services_services_single_file_picker_component_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../api-core/services/services/single-file-picker-component.js */ \"./resources/assets/api-core/services/services/single-file-picker-component.js\");\n/* harmony import */ var _core_i18n_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../core/i18n.js */ \"./resources/assets/core/i18n.js\");\n/* harmony import */ var _core_objects_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/objects.js */ \"./resources/assets/core/objects.js\");\n/* harmony import */ var _core_icon_resolver_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../core/icon-resolver.js */ \"./resources/assets/core/icon-resolver.js\");\n/* harmony import */ var _tools_base64_images_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../tools/base64-images.js */ \"./resources/assets/tools/base64-images.js\");\n/* harmony import */ var _tools_loading_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../tools/loading.js */ \"./resources/assets/tools/loading.js\");\n/* harmony import */ var _core_helpers_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../core/helpers.js */ \"./resources/assets/core/helpers.js\");\n/* harmony import */ var _tools_storage_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../tools/storage.js */ \"./resources/assets/tools/storage.js\");\n/* harmony import */ var _tools_element_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../tools/element.js */ \"./resources/assets/tools/element.js\");\n/* harmony import */ var _tools_cookie_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../tools/cookie.js */ \"./resources/assets/tools/cookie.js\");\n/* harmony import */ var _tools_common_extend_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../tools/common-extend.js */ \"./resources/assets/tools/common-extend.js\");\n/* harmony import */ var _tools_tabs_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../tools/tabs.js */ \"./resources/assets/tools/tabs.js\");\n/* harmony import */ var _tools_spinner_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../tools/spinner.js */ \"./resources/assets/tools/spinner.js\");\n/* harmony import */ var _components_icon_selector_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../components/icon_selector.js */ \"./resources/assets/components/icon_selector.js\");\n/* harmony import */ var _components_tree_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../components/tree.js */ \"./resources/assets/components/tree.js\");\n/* harmony import */ var _components_tags_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../components/tags.js */ \"./resources/assets/components/tags.js\");\n/* harmony import */ var _components_uiaccordion_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../components/uiaccordion.js */ \"./resources/assets/components/uiaccordion.js\");\n/* harmony import */ var _components_dialog_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../components/dialog.js */ \"./resources/assets/components/dialog.js\");\n/* harmony import */ var _components_system_dialogs_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../components/system-dialogs.js */ \"./resources/assets/components/system-dialogs.js\");\n/* harmony import */ var _components_schema_form_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../components/schema-form.js */ \"./resources/assets/components/schema-form.js\");\n/* harmony import */ var _components_control_box_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../components/control_box.js */ \"./resources/assets/components/control_box.js\");\n/* harmony import */ var _components_modules_dialogs_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../components/modules-dialogs.js */ \"./resources/assets/components/modules-dialogs.js\");\n/* harmony import */ var _js_template_preview_service_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../js/template-preview.service.js */ \"./resources/assets/js/template-preview.service.js\");\n/* harmony import */ var _components_autocomplete_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../components/autocomplete.js */ \"./resources/assets/components/autocomplete.js\");\n/* harmony import */ var _components_select_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../components/select.js */ \"./resources/assets/components/select.js\");\n/* harmony import */ var _components_form_controls_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../components/form-controls.js */ \"./resources/assets/components/form-controls.js\");\n/* harmony import */ var _components_uploader_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../components/uploader.js */ \"./resources/assets/components/uploader.js\");\n/* harmony import */ var _components_filemanager_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../components/filemanager.js */ \"./resources/assets/components/filemanager.js\");\n/* harmony import */ var _components_filepicker_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../components/filepicker.js */ \"./resources/assets/components/filepicker.js\");\n/* harmony import */ var _components_link_editor_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../components/link-editor.js */ \"./resources/assets/components/link-editor.js\");\n/* harmony import */ var _components_color_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../components/color.js */ \"./resources/assets/components/color.js\");\n/* harmony import */ var _components_colorpicker_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../components/colorpicker.js */ \"./resources/assets/components/colorpicker.js\");\n/* harmony import */ var _components_components_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../components/components.js */ \"./resources/assets/components/components.js\");\n/* harmony import */ var _components_notification_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../components/notification.js */ \"./resources/assets/components/notification.js\");\n/* harmony import */ var _widgets_tree_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../widgets/tree.js */ \"./resources/assets/widgets/tree.js\");\n/* harmony import */ var _categories_admin_list_component_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./categories-admin-list.component.js */ \"./resources/assets/js/categories-admin-list.component.js\");\n/* harmony import */ var _widgets_icon_picker_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../widgets/icon-picker.js */ \"./resources/assets/widgets/icon-picker.js\");\n/* harmony import */ var _admin_package_manager_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./admin-package-manager.js */ \"./resources/assets/js/admin-package-manager.js\");\n/* harmony import */ var _api_core_services_services_color_picker_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../api-core/services/services/color-picker.js */ \"./resources/assets/api-core/services/services/color-picker.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmw.tools = new _admin_tools_service_js__WEBPACK_IMPORTED_MODULE_8__.AdminTools(mw.app);\n\n\n\n\nmw.pause = time => new Promise(resolve => setTimeout(resolve, time || 0));\n\n\n\n\nmw.app.singleFilePickerComponent = options => {\n    return new _api_core_services_services_single_file_picker_component_js__WEBPACK_IMPORTED_MODULE_11__.SingleFilePickerComponent(options)\n};\n\n\n\n\n//core\n\n\n\n\n\n\n\n\n\n\n\n\nmw.tools.progress = _tools_loading_js__WEBPACK_IMPORTED_MODULE_16__.Progress;\nmw.progress = _tools_loading_js__WEBPACK_IMPORTED_MODULE_16__.Progress;\nmw.tools.loading = _tools_loading_js__WEBPACK_IMPORTED_MODULE_16__.Loading;\n\nfor ( let i in _core_helpers_js__WEBPACK_IMPORTED_MODULE_17__.Helpers ) {\n    mw.tools[i] = _core_helpers_js__WEBPACK_IMPORTED_MODULE_17__.Helpers[i];\n}\n\n\n\n\n\n\n\n\n\n\n\n\n//components\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmw.app.editImageDialog =  new _live_edit_live_edit_image_dialog_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\nmw.app.adminModules =  new _admin_modules_js__WEBPACK_IMPORTED_MODULE_10__.AdminModules();\n\nmw.alert = _components_system_dialogs_js__WEBPACK_IMPORTED_MODULE_29__.Alert;\nmw.controlBox = _components_control_box_js__WEBPACK_IMPORTED_MODULE_31__.ControlBox;\nmw.confirm = _components_system_dialogs_js__WEBPACK_IMPORTED_MODULE_29__.Confirm;\nmw.prompt = _components_system_dialogs_js__WEBPACK_IMPORTED_MODULE_29__.Prompt;\n\nmw.app.normalizeBase64Image = _tools_base64_images_js__WEBPACK_IMPORTED_MODULE_15__.normalizeBase64Image;\nmw.app.normalizeBase64Images = _tools_base64_images_js__WEBPACK_IMPORTED_MODULE_15__.normalizeBase64Images;\n\nmw.app.register('colorPicker', _api_core_services_services_color_picker_js__WEBPACK_IMPORTED_MODULE_34__.ColorPicker);\n\nmw.schemaForm = options => new _components_schema_form_js__WEBPACK_IMPORTED_MODULE_30__.SchemaForm(options);\n\nmw.templatePreview = _js_template_preview_service_js__WEBPACK_IMPORTED_MODULE_33__.TemplatePreview;\n\nfor (let i in _components_modules_dialogs_js__WEBPACK_IMPORTED_MODULE_32__.SystemDialogsService) {\n    mw.tools[i] = _components_modules_dialogs_js__WEBPACK_IMPORTED_MODULE_32__.SystemDialogsService[i];\n}\nmw.systemDialogsService = _components_modules_dialogs_js__WEBPACK_IMPORTED_MODULE_32__.SystemDialogsService;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//widgets\n\n\n\n\n\n\n\n\n\n\nmw.app.register('iconPicker', _widgets_icon_picker_js__WEBPACK_IMPORTED_MODULE_48__.IconPicker);\nif(!mw.admin) {\n    mw.admin = mw.app\n}\n\n\n\n\nmw.admin.admin_package_manager = new _admin_package_manager_js__WEBPACK_IMPORTED_MODULE_49__.AdminPackageManager();\n\nmw.admin.filament = new _admin_filament_js__WEBPACK_IMPORTED_MODULE_9__.AdminFilament();\nmw.admin.categoriesTree = (target, opt) => new _categories_admin_list_component_js__WEBPACK_IMPORTED_MODULE_47__.CategoriesAdminListComponent(target, opt);\n\n\n\n\n\n\nmw.admin.dispatch('init');\nmw.admin.dispatch('ready');\n\n\n\n\n\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/admin.js?");

/***/ }),

/***/ "./resources/assets/js/categories-admin-list.bulk.service.js":
/*!*******************************************************************!*\
  !*** ./resources/assets/js/categories-admin-list.bulk.service.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CategoriesAdminListBulkService: () => (/* binding */ CategoriesAdminListBulkService)\n/* harmony export */ });\n\r\n\r\n\r\nclass CategoriesAdminListBulkService {\r\n    constructor(instance) {\r\n\r\n        this.instance = instance;\r\n        this.tree = this.instance.tree;\r\n        this.selectedPages = [];\r\n        this.selectedCategories = [];\r\n        this.syncSelected();\r\n        this.tree.on('selectionChange', () => this.syncSelected());\r\n\r\n    }\r\n\r\n    syncSelected() {\r\n        const pages = [];\r\n        const categories = [];\r\n        const selected = this.tree.getSelected();\r\n\r\n        for (let i = 0; i < selected.length; i++) {\r\n            const item = selected[i];\r\n            if (item.type === 'category') {\r\n                categories.push(item.id);\r\n            } else if (item.type === 'page') {\r\n                pages.push(item.id);\r\n            }\r\n        }\r\n\r\n        this.selectedPages = pages;\r\n        this.selectedCategories = categories;\r\n\r\n    }\r\n\r\n    dropdown(target, options = {}) {\r\n\r\n        const defaults = {\r\n            data: [\r\n                {id: 'moveToCategory', title: mw.lang('Move To Category')},\r\n                {id: 'hide', title: mw.lang('Make Hidden'), },\r\n                {id: 'show', title: mw.lang('Make Visible')},\r\n                {id: 'delete', title: mw.lang('Delete')},\r\n            ]\r\n        };\r\n        const dropdown =  mw.select({element: target, ...Object.assign({}, defaults, options)});\r\n\r\n        dropdown.on(\"change\", val => {\r\n            const action = val[0] && val[0].id;\r\n            if(action && this[action]) {\r\n                this[action]()\r\n            }\r\n        })\r\n\r\n\r\n        return dropdown;\r\n    }\r\n\r\n    categoryBulkMoveExec() {\r\n        mw.confirm(mw.lang(\"Are you sure you want to move the selected data\"), function () {\r\n            var dialog = mw.dialog.get('#pick-categories');\r\n            var tree = mw.tree.get('#pick-categories');\r\n            var selected = tree.getSelected();\r\n            var data = {\r\n                categories: []\r\n            };\r\n            selected.forEach(function (item) {\r\n                if (item.type === 'category') {\r\n                    data.categories.push(item.id);\r\n                } else if (item.type === 'page') {\r\n                    data.rel_id = item.id;\r\n                }\r\n            });\r\n\r\n            mw.spinner({\r\n                element: dialog.dialogContainer\r\n            })\r\n\r\n            $.ajax({\r\n                url: route('api.category.move-bulk'),\r\n                type: 'POST',\r\n                data: {\r\n                    ids: this.selectedCategories,\r\n                    moveToParentIds: data.categories,\r\n                    moveToRelId: data.rel_id\r\n                },\r\n                success: function (data) {\r\n                    mw.reload_module('categories/manage');\r\n                    mw.notification.success(mw.lang('Categories are moved'));\r\n                    mw.top().trigger('pagesTreeRefresh');\r\n\r\n                    dialog.remove();\r\n                }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n\r\n    async moveToCategory() {\r\n\r\n\r\n\r\n\r\n        const treeParams = {}\r\n\r\n\r\n        if(this.instance.settings.params && this.instance.settings.params.is_shop) {\r\n            treeParams.is_shop = 1;\r\n        } else {\r\n            treeParams.is_blog = 1;\r\n        }\r\n\r\n\r\n\r\n\r\n          var btn = document.createElement('button');\r\n          btn.disabled = true;\r\n          btn.className = 'mw-ui-btn';\r\n          btn.innerHTML = mw.lang('Move categories');\r\n          btn.addEventListener(\"click\", e => this.categoryBulkMoveExec());\r\n\r\n          var dialog = mw.dialog({\r\n              height: 'auto',\r\n              autoHeight: true,\r\n              id: 'pick-categories',\r\n              footer: btn,\r\n              title: mw.lang('Move to selected category')\r\n          });\r\n          var treeSettings = {\r\n\r\n              element: dialog.dialogContainer,\r\n              sortable: false,\r\n              selectable: true,\r\n              singleSelect: true,\r\n              searchInput: true,\r\n          }\r\n          var inst = await mw.widget.tree(dialog.dialogContainer, {options: treeSettings, params: treeParams});\r\n          const tree = inst.tree;\r\n          tree.on(\"selectionChange\", function () {\r\n\r\n              btn.disabled = tree.getSelected().length === 0;\r\n\r\n              var selected = tree.getSelected();\r\n              if(tree.options.singleSelect === false && treeSettings.selected.length){\r\n                  var hasPage = selected.find(function (item){\r\n                      return item.type === 'page';\r\n                  });\r\n\r\n                  if(typeof hasPage === 'undefined'){\r\n                      var category = selected[0];\r\n                       tree.select(category.parent_id, 'page', true);\r\n                  }\r\n              }\r\n          });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    delete() {\r\n        mw.confirm(mw.lang('Are you sure you want to delete the selected categories'), function() {\r\n            $.ajax({\r\n                url: route('api.category.delete-bulk'),\r\n                type: 'DELETE',\r\n                data: {ids: this.selectedCategories},\r\n                success: function (data) {\r\n                    mw.reload_module('categories/manage');\r\n                    mw.notification.success(mw.lang('Categories are deleted'));\r\n                    mw.top().trigger('pagesTreeRefresh');\r\n                }\r\n            });\r\n        });\r\n    }\r\n    makeHidden() {\r\n        mw.confirm(mw.lang('Are you sure you want to make hidden the selected categories?'), function() {\r\n            $.ajax({\r\n                url: route('api.category.hidden-bulk'),\r\n                type: 'POST',\r\n                data: {ids: this.selectedCategories},\r\n                success: function (data) {\r\n                    mw.reload_module('categories/manage');\r\n                    mw.notification.success(mw.lang('Categories are hidden'));\r\n                    mw.top().trigger('pagesTreeRefresh');\r\n                }\r\n            });\r\n        });\r\n    }\r\n    makeVisible() {\r\n        mw.confirm(mw.lang('Are you sure you want to make visible the selected categories'),  () => {\r\n            $.ajax({\r\n                url: route('api.category.visible-bulk'),\r\n                type: 'POST',\r\n                data: {ids: this.selectedCategories},\r\n                success: function (data) {\r\n                    mw.reload_module('categories/manage');\r\n                    mw.notification.success(mw.lang('Categories are visible'));\r\n                    mw.top().trigger('pagesTreeRefresh');\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/categories-admin-list.bulk.service.js?");

/***/ }),

/***/ "./resources/assets/js/categories-admin-list.component.js":
/*!****************************************************************!*\
  !*** ./resources/assets/js/categories-admin-list.component.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CategoriesAdminListComponent: () => (/* binding */ CategoriesAdminListComponent)\n/* harmony export */ });\n/* harmony import */ var _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../containers/base-class.js */ \"./resources/assets/containers/base-class.js\");\n/* harmony import */ var _categories_admin_list_bulk_service_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./categories-admin-list.bulk.service.js */ \"./resources/assets/js/categories-admin-list.bulk.service.js\");\n\r\n\r\n\r\n\r\nclass CategoriesAdminListService {\r\n\r\n}\r\n\r\n\r\n\r\nclass CategoriesAdminListComponent extends _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    constructor(target, opt, mode = 'tree') {\r\n        super();\r\n        if(typeof target === \"string\") {\r\n            target = document.querySelector(target);\r\n        }\r\n        if(!target) {\r\n            return;\r\n        }\r\n\r\n        this.target = target;\r\n        this.settings = this.config(opt);\r\n\r\n        return this.init();\r\n    }\r\n\r\n    #deepExtend (destination, source) {\r\n        return mw.object.extend(true, {}, destination, source);\r\n    };\r\n\r\n    config(conf) {\r\n        const defaults = {\r\n            params: {\r\n                show_hidden: true,\r\n                no_limit: true,\r\n                is_shop: 0,\r\n                is_blog: 0,\r\n            },\r\n            options: {\r\n                sortable: true,\r\n                selectable: true,\r\n                rowSelect : false,\r\n                singleSelect: false,\r\n                multiPageSelect: false,\r\n                disableSelectTypes: ['page'],\r\n                saveState: false,\r\n                searchInput: document.getElementById('category-tree-search'),\r\n                skin: 'category-manager',\r\n\r\n\r\n                contextMenu: [\r\n                    {\r\n                        title: 'Add category',\r\n\r\n                        icon: 'add-subcategory-icon-tree',\r\n                        action: function (element, data, menuitem) {\r\n                            var loc = mw.settings.adminUrl  + 'category/create?parent_page_id=' + data.id;\r\n                            if (data.type === 'page') {\r\n                                if(data.is_shop === 1){\r\n                                    loc = mw.settings.adminUrl  +  'shop/category/create?parent_page_id=' + data.id;\r\n                                }\r\n                            }\r\n\r\n                            window.location.href = loc;\r\n\r\n                        },\r\n                        filter: function (obj, node) {\r\n                            return obj.type === 'page';\r\n                        },\r\n                        className: ''\r\n                    },\r\n                    {\r\n                        title: 'View',\r\n\r\n                        icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z\"/></svg>',\r\n                        action: function (element, data, menuitem) {\r\n                            top.location.href = data.url;\r\n                        },\r\n                        filter: function (obj, node) {\r\n                            return obj.type === 'category';\r\n                        },\r\n                        className: ''\r\n                    },\r\n                    {\r\n                        title: 'Edit',\r\n\r\n                        icon: '<svg class=\"tblr-body-color\" fill=\"currentColor\" data-bs-toggle=\"tooltip\" aria-label=\"Edit\" data-bs-original-title=\"Edit\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"18px\" viewBox=\"0 0 24 24\" width=\"18px\"><g><rect fill=\"none\" height=\"24\" width=\"24\"></rect></g><g><g><g><path d=\"M3,21l3.75,0L17.81,9.94l-3.75-3.75L3,17.25L3,21z M5,18.08l9.06-9.06l0.92,0.92L5.92,19L5,19L5,18.08z\"></path></g><g><path d=\"M18.37,3.29c-0.39-0.39-1.02-0.39-1.41,0l-1.83,1.83l3.75,3.75l1.83-1.83c0.39-0.39,0.39-1.02,0-1.41L18.37,3.29z\"></path></g></g></g></svg>',\r\n                        action: function (element, data, menuitem) {\r\n                            self.location.href = data.admin_edit_url;\r\n                        },\r\n                        filter: function (obj, node) {\r\n                            return obj.type === 'category';\r\n                        },\r\n                        className: ''\r\n                    },\r\n                    {\r\n                        title: 'Delete',\r\n                        icon: '<svg class=\"  text-danger\" fill=\"currentColor\" data-bs-toggle=\"tooltip\" aria-label=\"Delete\" data-bs-original-title=\"Delete\" xmlns=\"http://www.w3.org/2000/svg\" height=\"18px\" viewBox=\"0 0 24 24\" width=\"18px\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\"></path></svg>',\r\n                        action: function (element, data, menuitem) {\r\n                            if (data.type === 'category') {\r\n                                mw.content.deleteCategory(data.id, function () {\r\n                                    $(element).fadeOut(function () {\r\n                                        $(element).remove()\r\n                                    })\r\n                                }, false);\r\n                            }\r\n                        },\r\n                        filter: function (obj, node) {\r\n                            return obj.type === 'category';\r\n                        },\r\n                        className: ''\r\n                    }\r\n\r\n\r\n                ]\r\n\r\n            }\r\n        };\r\n\r\n        const settings = this.#deepExtend({...defaults}, conf);\r\n        return settings;\r\n    }\r\n\r\n    init() {\r\n        return new Promise(resolve => {\r\n            mw.widget.tree(this.target, this.settings, 'tree').then((instance) => {\r\n                this.instance = instance;\r\n                this.tree = this.instance.tree;\r\n                this.tags = this.instance.tags;\r\n                this.treeTags = this.instance.treeTags;\r\n\r\n\r\n                this.bulkService = new _categories_admin_list_bulk_service_js__WEBPACK_IMPORTED_MODULE_1__.CategoriesAdminListBulkService(this);\r\n\r\n                const dropdown = document.createElement(\"div\");\r\n\r\n\r\n                this.dropdown = this.bulkService.dropdown(dropdown, this.settings.dropdown);\r\n\r\n                this.dropdown.disabled(this.bulkService.selectedCategories.length === 0)\r\n                this.tree.on('selectionChange', _ => this.dropdown.disabled(this.bulkService.selectedCategories.length === 0));\r\n\r\n\r\n\r\n\r\n\r\n                this.tree.list.parentNode.insertBefore(dropdown, this.tree.list);\r\n\r\n\r\n                resolve(this.instance);\r\n                this.dispatch('ready', this.instance);\r\n            });\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/categories-admin-list.component.js?");

/***/ }),

/***/ "./resources/assets/js/core.js":
/*!*************************************!*\
  !*** ./resources/assets/js/core.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n\n\n//import {MWUniversalContainer} from '../../../input/front-end/js/containers/container.js';\n// input/front-endjs/containers/container.js\n\nif(!window.mw ) {\n    window.mw  = {};\n}\n\n\n// window.mw.container = new MWUniversalContainer();\n\n\nmw.required = [] ;\nmw.require = function(url, inHead, key, defered) {\n    if(!url) return;\n    var defer;\n    if(defered) {\n        defer = ' defer ';\n    } else {\n        defer = '   '\n    }\n    if(typeof inHead === 'boolean' || typeof inHead === 'undefined'){\n        inHead = inHead || false;\n    }\n    var keyString;\n    if(typeof inHead === 'string'){\n        keyString = ''+inHead;\n        inHead = key || false;\n    }\n    if(typeof key === 'string'){\n        keyString = key;\n    }\n    var toPush = url, urlModified = false;\n    if (!!keyString) {\n        toPush = keyString;\n        urlModified = true\n    }\n    var t = url.split('.').pop();\n    url = url.includes('//') ? url : (t !== \"css\" ? mw.settings.includes_url + \"api/\" + url  :  mw.settings.includes_url + \"css/\" + url);\n    if(!urlModified) toPush = url;\n    if (!~mw.required.indexOf(toPush)) {\n\n      mw.required.push(toPush);\n      url = url.includes(\"?\") ?  url + '&mwv=' + mw.version : url + \"?mwv=\" + mw.version;\n      if(document.querySelector('link[href=\"'+url+'\"],script[src=\"'+url+'\"]') !== null){\n          return\n      }\n\n      var cssRel = \" rel='stylesheet' \";\n\n      if(defered){\n        cssRel = \" rel='preload' as='style' onload='this.onload=null;this.rel=\\'stylesheet\\'' \";\n      }\n\n\n      var string = t !== \"css\" ? \"<script \"+defer+\"  src='\" + url + \"'></script>\" : \"<link \"+cssRel+\" href='\" + url + \"' />\";\n\n          if(typeof $.fn === 'object'){\n              $(document.head).append(string);\n          }\n          else{\n              var el;\n              if( t !== \"css\")  {\n                  el = document.createElement('script');\n                  el.src = url;\n                  el.defer = !!defer;\n                  el.setAttribute('type', 'text/javascript');\n                  document.head.appendChild(el);\n              }\n              else{\n\n                 el = document.createElement('link');\n                 if(defered) {\n                    el.as='style';\n                    el.rel='preload';\n                    el.addEventListener('load', e => el.rel='stylesheet');\n                 } else {\n                    el.rel='stylesheet';\n                 }\n\n\n                 el.href = url;\n                 document.head.appendChild(el);\n              }\n          }\n\n    }\n  };\n\n\n\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/core.js?");

/***/ }),

/***/ "./resources/assets/js/template-preview.service.js":
/*!*********************************************************!*\
  !*** ./resources/assets/js/template-preview.service.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TemplatePreview: () => (/* binding */ TemplatePreview)\n/* harmony export */ });\n/* harmony import */ var _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../containers/base-class.js */ \"./resources/assets/containers/base-class.js\");\n\r\n\r\nconst css = `\r\n\r\n\r\n    .mw-preview-iframe {\r\n        width: 200%;\r\n        transform: scale(.5);\r\n        top: 0;\r\n        position: absolute;\r\n        left: 0;\r\n        transform-origin: 0 0;\r\n        border: 1px solid silver;\r\n        transition: .3s;\r\n    }\r\n    .mw-template-preview-container{\r\n        width: 100%;\r\n        position: relative;\r\n    }\r\n    .mw-template-preview-container.preview-in-self {\r\n        height: calc(80vh - 80px);\r\n    }\r\n    .mw-template-preview-container.preview-in-self .mw-preview-iframe{\r\n        height: calc(160vh - 160px) !important;\r\n    }\r\n\r\n    .mw-template-preview-container.preview-in-iframe {\r\n        height: 800px;\r\n    }\r\n    .mw-template-preview-container.preview-in-iframe iframe {\r\n        height: 1600px !important;\r\n    }\r\n\r\n    .mw-template-preview-container.has-mw-spinner iframe{\r\n        opacity: 0;\r\n    }\r\n\r\n\r\n`;\r\n\r\nclass TemplatePreview extends _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(options = {}) {\r\n        super();\r\n        const defaults = {\r\n            element: null,\r\n            document: document,\r\n            id: mw.id(),\r\n            className: 'mw-preview-iframe'\r\n        }\r\n        this.settings = Object.assign({}, defaults, options);\r\n        if(typeof this.settings.element === \"string\") {\r\n            this.element = document.querySelector(this.settings.element);\r\n        } else {\r\n            this.element = this.settings.element;\r\n        }\r\n        this.css('TemplatePreview', css)\r\n\r\n    }\r\n\r\n    createFrame() {\r\n        var frame = document.createElement('iframe');\r\n        this.frame = frame;\r\n        frame.src = this.url;\r\n        frame.className =  this.settings.className;\r\n        frame.id = this.settings.id;\r\n        frame.tabIndex = -1;\r\n        frame.frameborder = 0;\r\n        frame.addEventListener('load', () => {\r\n            this.afterLoad();\r\n            this.frame.contentWindow.document.documentElement.className = 'mw-template-document-preview';\r\n        })\r\n        return frame\r\n    }\r\n\r\n    set () {\r\n        var framewindow = this.frame.contentWindow;\r\n        framewindow.scrollTo(0, 0);\r\n    }\r\n    afterLoad () {\r\n        this.set();\r\n        mw.spinner({element: this.element}).remove();\r\n        this.dispatch('iframeLoaded', {url: this.url});\r\n    }\r\n    rend (url) {\r\n        this.url = url;\r\n        const curr = this.element.querySelector('iframe');\r\n        if (curr) {\r\n            curr.remove();\r\n        }\r\n        if (self !== top) {\r\n            this.element.classList.add('preview-in-iframe');\r\n        } else {\r\n            this.element.classList.add('preview-in-self');\r\n        }\r\n        mw.spinner({element: this.element, size: 32}).show();\r\n        const frame = this.createFrame(this.url);\r\n        this.element.classList.add('mw-template-preview-container');\r\n        this.element.append(frame);\r\n        return frame;\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/js/template-preview.service.js?");

/***/ }),

/***/ "./resources/assets/live-edit/live-edit-image-dialog.js":
/*!**************************************************************!*\
  !*** ./resources/assets/live-edit/live-edit-image-dialog.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LiveEditImageDialog: () => (/* binding */ LiveEditImageDialog),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../containers/base-class.js */ \"./resources/assets/containers/base-class.js\");\n\r\n//import FilerobotImageEditor from \"../../../../frontend-assets-libs/resources/dist/filerobot-image-editor/index.js\";\r\n\r\n\r\n\r\nconst { TABS, TOOLS } = FilerobotImageEditor;\r\n\r\nconst editImage = (url, target, dialog) => {\r\n    const config = {\r\n        source: url,\r\n\r\n        showCanvasOnly: false,\r\n\r\n        annotationsCommon: {\r\n            fill: '#ff0000',\r\n        },\r\n        Text: { text: 'Double click to edit text' },\r\n        Rotate: { angle: 90, componentType: 'slider' },\r\n        translations: {\r\n            profile: 'Profile',\r\n            coverPhoto: 'Cover photo',\r\n            facebook: 'Facebook',\r\n            socialMedia: 'Social Media',\r\n            fbProfileSize: '180x180px',\r\n            fbCoverPhotoSize: '820x312px',\r\n        },\r\n        Crop: {\r\n            presetsItems: [\r\n                {\r\n                    titleKey: 'classicTv',\r\n                    descriptionKey: '4:3',\r\n                    ratio: 4 / 3,\r\n                },\r\n                {\r\n                    titleKey: 'cinemascope',\r\n                    descriptionKey: '21:9',\r\n                    ratio: 21 / 9,\r\n                },\r\n            ],\r\n            presetsFolders: [\r\n                {\r\n                    titleKey: 'socialMedia',\r\n                    groups: [\r\n                        {\r\n                            titleKey: 'facebook',\r\n                            items: [\r\n                                {\r\n                                    titleKey: 'profile',\r\n                                    width: 180,\r\n                                    height: 180,\r\n                                    descriptionKey: 'fbProfileSize',\r\n                                },\r\n                                {\r\n                                    titleKey: 'coverPhoto',\r\n                                    width: 820,\r\n                                    height: 312,\r\n                                    descriptionKey: 'fbCoverPhotoSize',\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        tabsIds: [TABS.FINETUNE, TABS.FILTERS, TABS.ADJUST, TABS.ANNOTATE, /*TABS.WATERMARK*/, TABS.RESIZE], // or ['Adjust', 'Annotate', 'Watermark']\r\n        defaultTabId: TABS.FINETUNE, // or 'Annotate'\r\n        defaultToolId: TOOLS.TEXT, // or 'Text'\r\n    };\r\n\r\n\r\n\r\n    // Assuming we have a div with id=\"editor_container\"\r\n    const filerobotImageEditor = new FilerobotImageEditor(\r\n        target,\r\n        config,\r\n    );\r\n\r\n    filerobotImageEditor.render({\r\n\r\n    });\r\n    return filerobotImageEditor;\r\n}\r\n\r\nclass LiveEditImageDialog extends _containers_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor() {\r\n        super();\r\n\r\n\r\n    }\r\n    editImage(url, callback) {\r\n\r\n        setTimeout(() => {\r\n            // Simulating an asynchronous operation with setTimeout\r\n            this.editImageUrl(url).then(result => {\r\n                callback(result);\r\n            });\r\n        }, 300);\r\n\r\n    }\r\n\r\n    async editImageUrl(url) {\r\n        return new Promise(resolve => {\r\n            var editor = document.createElement('div');\r\n            editor.style.height = 'calc(100vh - 300px)';\r\n            editor.style.minHeight = '410px';\r\n            const footer = mw.element(`\r\n                        <div class=\"d-flex justify-content-between w-100\">\r\n                            <button class=\"btn\" data-action=\"cancel\">Cancel</button>\r\n                            <button class=\"btn btn-primary\" data-action=\"save\">Update</button>\r\n                        </div>\r\n                    `);\r\n\r\n\r\n            let imageEditor;\r\n\r\n            const dlg = mw.dialog({\r\n                width: 1000,\r\n                title: mw.lang(\"Edit image\"),\r\n                content: editor,\r\n                footer: footer.get(0),\r\n                id: 'mw-edit-image--dialog',\r\n            });\r\n\r\n            footer.find('[data-action=\"cancel\"]').on('click', function () {\r\n                dlg.remove();\r\n                resolve();\r\n            });\r\n\r\n            footer.find('[data-action=\"save\"]').on('click', function () {\r\n\r\n                if(mw.top().app && mw.top().app.registerChange) {\r\n                    mw.top().app.registerChange(this);\r\n                }\r\n\r\n\r\n                var _img = new Image();\r\n                const currentImgData = imageEditor.getCurrentImgData();\r\n                _img.src = currentImgData.imageData.imageBase64;\r\n\r\n                const adjustments = currentImgData.designState.adjustments;\r\n\r\n                const adjustmentsData = {\r\n                    crop: !!adjustments.crop.width || !!adjustments.crop.height,\r\n                    isFlippedX: adjustments.isFlippedX,\r\n                    isFlippedY: adjustments.isFlippedY,\r\n                    rotated: adjustments.rotation !== 0,\r\n                };\r\n\r\n                let sizeChanged = false;\r\n                for(let key in adjustmentsData) {\r\n                    if(adjustmentsData[key] === true){\r\n                        sizeChanged = true\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                mw.top().app.normalizeBase64Image(_img, function () {\r\n\r\n                    resolve({\r\n                        src: this.src,\r\n                        sizeChanged,\r\n                        sizeAdjustments: adjustmentsData\r\n                    });\r\n                })\r\n\r\n                dlg.remove();\r\n\r\n            })\r\n            $(dlg).on('remove', () => {\r\n                resolve()\r\n                mw.app.liveEdit.play();\r\n            })\r\n\r\n            imageEditor = editImage(url, editor, dlg)\r\n        });\r\n    }\r\n\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LiveEditImageDialog);\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/live-edit/live-edit-image-dialog.js?");

/***/ }),

/***/ "./resources/assets/tools/base64-images.js":
/*!*************************************************!*\
  !*** ./resources/assets/tools/base64-images.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeBase64Image: () => (/* binding */ normalizeBase64Image),\n/* harmony export */   normalizeBase64Images: () => (/* binding */ normalizeBase64Images)\n/* harmony export */ });\nfunction normalizeBase64Image (node, callback) {\r\n    var type, obj;\r\n    if (typeof node.src !== 'undefined' && node.src.indexOf('data:image/') === 0) {\r\n        type = node.src.split('/')[1].split(';')[0];\r\n        obj = {\r\n            file: node.src,\r\n            name: mw.random().toString(36) + \".\" + type\r\n        }\r\n        $.post(mw.settings.api_url + \"media/upload\", obj, function (data) {\r\n            data = $.parseJSON(data);\r\n            node.src = data.src;\r\n\r\n\r\n\r\n            mw.top().app.registerChange?.call(undefined, node);\r\n\r\n            mw.trigger('imageSrcChanged', [node, node.src]);\r\n            if (typeof callback === 'function') {\r\n                callback.call(node);\r\n            }\r\n        });\r\n    }\r\n    else if (node.style.backgroundImage.indexOf('data:image/') !== -1) {\r\n        var bg = node.style.backgroundImage.replace(/url\\(/g, '').replace(/\\)/g, '')\r\n        type = bg.split('/')[1].split(';')[0];\r\n        obj = {\r\n            file: bg,\r\n            name: mw.random().toString(36) + \".\" + type\r\n        };\r\n        $.post(mw.settings.api_url + \"media/upload\", obj, function (data) {\r\n            data = $.parseJSON(data);\r\n            node.style.backgroundImage = 'url(\\'' + data.src + '\\')';\r\n\r\n\r\n            mw.top().app.registerChange?.call(undefined, node);\r\n            if (typeof callback === 'function') {\r\n                callback.call(node);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nfunction normalizeBase64Images  (root, callback) {\r\n    root = root || document.body;\r\n    var all = root.querySelectorAll(\".edit img[src*='data:image/'], .edit [style*='data:image/'][style*='background-image'], .mw-editor-area img[src*='data:image/'], .mw-editor-area [style*='data:image/'][style*='background-image']\"),\r\n        l = all.length, i = 0, count = 0;\r\n    if (l > 0) {\r\n        var btn = document.getElementById('main-save-btn');\r\n        var btnPrev;\r\n        if(btn){\r\n            btnPrev = btn.disabled;\r\n            btn.disabled = true;\r\n        }\r\n        for (; i < l; i++) {\r\n            mw.tools.addClass(all[i], 'element');\r\n            mw.wysiwyg.normalizeBase64Image(all[i], function (){\r\n                count++;\r\n                if(count === l) {\r\n                    if(typeof callback === 'function') {\r\n                        setTimeout(function(){\r\n                            callback.call();\r\n                        }, 10)\r\n                    }\r\n                    if(btn){\r\n                        btn.disabled = btnPrev;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    } else {\r\n        if(typeof callback === 'function') {\r\n            setTimeout(function(){\r\n                callback.call();\r\n            }, 10)\r\n        }\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/tools/base64-images.js?");

/***/ }),

/***/ "./resources/assets/tools/common-extend.js":
/*!*************************************************!*\
  !*** ./resources/assets/tools/common-extend.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\nmw._intervals = {};\r\nmw.interval = function(key, func){\r\n    if(!key || !func || !!mw._intervals[key]) return;\r\n    mw._intervals[key] = func;\r\n};\r\nmw.removeInterval = function(key){\r\n    delete mw._intervals[key];\r\n};\r\nsetInterval(function(){\r\n    for(var i in mw._intervals){\r\n        mw._intervals[i].call();\r\n    }\r\n}, 99);\r\n\r\n\r\n\r\n\r\n\r\nmw.controllers = {};\r\nmw.external_tool = function (url) {\r\n    return !url.includes(\"/\") ? mw.settings.site_url + \"editor_tools/\" + url : url;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nmw.postMsg = function (w, obj) {\r\n    w.postMessage(JSON.stringify(obj), window.location.href);\r\n};\r\n\r\nmw.uploader = function (o) {\r\n\r\n    mw.require(\"files.js\");\r\n\r\n    var uploader = mw.files.uploader(o);\r\n\r\n    return uploader;\r\n};\r\n\r\nmw.fileWindow = function (config) {\r\n    config = config || {};\r\n    config.mode = config.mode || 'dialog'; // 'inline' | 'dialog'\r\n    var q = {\r\n        types: config.types,\r\n        title: config.title\r\n    };\r\n\r\n\r\n    url = mw.settings.site_url + 'editor_tools/rte_image_editor?' + $.param(q) + '#fileWindow';\r\n    var frameWindow;\r\n    var toreturn = {\r\n        dialog: null,\r\n        root: null,\r\n        iframe: null\r\n    };\r\n    if (config.mode === 'dialog') {\r\n        var modal = mw/*.top()*/.dialogIframe({\r\n            url: url,\r\n            name: \"mw_rte_image\",\r\n            width: 530,\r\n            height: 'auto',\r\n            autoHeight: true,\r\n            //template: 'mw_modal_basic',\r\n            overlay: true,\r\n            title: mw.lang('Select image')\r\n        });\r\n        var frame = mw.$('iframe', modal.main);\r\n        frameWindow = frame[0].contentWindow;\r\n        toreturn.dialog = modal;\r\n        toreturn.root = frame.parent()[0];\r\n        toreturn.iframe = frame[0];\r\n        frameWindow.onload = function () {\r\n            frameWindow.$('body').on('Result', function (e, url, m) {\r\n                 if (config.change) {\r\n                    config.change.call(undefined, url);\r\n                    modal.remove();\r\n                }\r\n            });\r\n            $(modal).on('Result', function (e, url, m) {\r\n                if (config.change) {\r\n                    config.change.call(undefined, url);\r\n                    modal.remove();\r\n                }\r\n            });\r\n        };\r\n    } else if (config.mode === 'inline') {\r\n        var fr = document.createElement('iframe');\r\n        fr.src = url;\r\n        fr.frameBorder = 0;\r\n        fr.className = 'mw-file-window-frame';\r\n        toreturn.iframe = fr;\r\n        mw.tools.iframeAutoHeight(fr);\r\n        if (config.element) {\r\n            var $el = $(config.element);\r\n            if($el.length) {\r\n                toreturn.root = $el[0];\r\n            }\r\n            $el.append(fr);\r\n        }\r\n        fr.onload = function () {\r\n            this.contentWindow.$('body').on('change', function (e, url, m) {\r\n                if (config.change) {\r\n                    config.change.call(undefined, url);\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n\r\n    return toreturn;\r\n};\r\n\r\n\r\n\r\n\r\nmw.accordion = function (el, callback) {\r\n    return mw.tools.accordion(mw.$(el)[0], callback);\r\n};\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/tools/common-extend.js?");

/***/ }),

/***/ "./resources/assets/tools/cookie.js":
/*!******************************************!*\
  !*** ./resources/assets/tools/cookie.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nmw.cookie = {\r\n    get: function (name) {\r\n        var cookies = document.cookie.split(\";\"), i = 0, l = cookies.length;\r\n        for (; i < l; i++) {\r\n            var x = cookies[i].substr(0, cookies[i].indexOf(\"=\"));\r\n            var y = cookies[i].substr(cookies[i].indexOf(\"=\") + 1);\r\n            x = x.replace(/^\\s+|\\s+$/g, \"\");\r\n            if (x === name) {\r\n                return unescape(y);\r\n            }\r\n        }\r\n    },\r\n    delete: function (name) {\r\n        document.cookie = name +'=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n    },\r\n    set: function (name, value, expires, path, domain, secure) {\r\n        var now = new Date();\r\n        expires = expires || 365;\r\n        now.setTime(now.getTime());\r\n        if (expires) {\r\n            expires = expires * 1000 * 60 * 60 * 24;\r\n        }\r\n        var expires_date = new Date(now.getTime() + (expires));\r\n        document.cookie = name + \"=\" + escape(value) + ( ( expires ) ? \";expires=\" + expires_date.toGMTString() : \"\" ) + ( ( path ) ? \";path=\" + path : \";path=/\" ) + ( ( domain ) ? \";domain=\" + domain : \"\" ) + ( ( secure ) ? \";secure\" : \"\" );\r\n    },\r\n    setEncoded: function (name, value, expires, path, domain, secure) {\r\n        // value = encodeURIComponent(value);\r\n        // value = escape(value);\r\n        // value = mw.tools.base64.encode( unescape( encodeURIComponent( value ) ) )\r\n        value = mw.tools.base64.encode(value);\r\n        return this.set(name, value, expires, path, domain, secure);\r\n    },\r\n    getEncoded: function (name) {\r\n        var value = this.get(name);\r\n        // value = decodeURIComponent(value);\r\n        // value = unescape(value);\r\n        // value = decodeURIComponent( escape( mw.tools.base64.decode( value ) ) )\r\n        value = mw.tools.base64.decode(value);\r\n        return value;\r\n    },\r\n    ui: function (a, b) {\r\n        var mwui = mw.cookie.getEncoded(\"mwui\");\r\n        try {\r\n            mwui = (!mwui || mwui === '') ? {} : $.parseJSON(mwui);\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n        if (typeof a === 'undefined') {\r\n            return mwui;\r\n        }\r\n        if (typeof b === 'undefined') {\r\n            return mwui[a] !== undefined ? mwui[a] : \"\";\r\n        }\r\n        else {\r\n            mwui[a] = b;\r\n            var tostring = JSON.stringify(mwui);\r\n            mw.cookie.setEncoded(\"mwui\", tostring, false, \"/\");\r\n            if (typeof mw.cookie.uievents[a] !== 'undefined') {\r\n                var funcs = mw.cookie.uievents[a], l = funcs.length, i = 0;\r\n                for (; i < l; i++) {\r\n                    mw.cookie.uievents[a][i].call(b.toString());\r\n                }\r\n            }\r\n        }\r\n    },\r\n    uievents: {},\r\n    changeInterval: null,\r\n    uiCurr: null,\r\n    onchange: function (name, func) {\r\n        if (typeof mw.cookie.uievents[name] === 'undefined') {\r\n            mw.cookie.uievents[name] = [func];\r\n        }\r\n        else {\r\n            mw.cookie.uievents[name].push(func);\r\n        }\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/tools/cookie.js?");

/***/ }),

/***/ "./resources/assets/tools/domhelpers.js":
/*!**********************************************!*\
  !*** ./resources/assets/tools/domhelpers.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DomHelpers: () => (/* binding */ DomHelpers)\n/* harmony export */ });\n\r\nconst DomHelpers = {\r\n    loops: {},\r\n    foreachParents: function (el, callback) {\r\n        if (!el) return false;\r\n        var index = mw.random();\r\n        this.loops[index] = true;\r\n        var _curr = el.parentNode;\r\n        var count = -1;\r\n        if (_curr !== null && _curr !== undefined) {\r\n            var _tag = _curr.tagName;\r\n            while (_tag !== 'BODY') {\r\n                count++;\r\n                var caller = callback.call(_curr, index, count);\r\n                _curr = _curr.parentNode;\r\n                if (caller === false || _curr === null || _curr === undefined || !this.loops[index]) {\r\n                    delete this.loops[index];\r\n                    break;\r\n                }\r\n                _tag = _curr.tagName;\r\n            }\r\n        }\r\n    },\r\n    classNamespaceDelete: function (el_obj, namespace, parent, namespacePosition, exception) {\r\n        let el, exceptions;\r\n        if (el_obj.element && el_obj.namespace) {\r\n            el = el_obj.element;\r\n            namespace = el_obj.namespace;\r\n            parent = el_obj.parent;\r\n            namespacePosition = el_obj.namespacePosition;\r\n            exceptions = el_obj.exceptions || [];\r\n        }\r\n        else {\r\n            el = el_obj;\r\n            exceptions = [];\r\n        }\r\n        namespacePosition = namespacePosition || 'contains';\r\n        parent = parent || mwd;\r\n        if (el === 'all') {\r\n            var all = parent.querySelectorAll('.edit *'), i = 0, l = all.length;\r\n            for (; i < l; i++) {\r\n                mw.tools.classNamespaceDelete(all[i], namespace, parent, namespacePosition)\r\n            }\r\n            return;\r\n        }\r\n        if (!!el.className && typeof(el.className.split) === 'function') {\r\n            var cls = el.className.split(\" \"), l = cls.length, i = 0, final = [];\r\n            for (; i < l; i++) {\r\n                if (namespacePosition === 'contains') {\r\n                    if (!cls[i].includes(namespace) || exceptions.indexOf(cls[i]) !== -1) {\r\n                        final.push(cls[i]);\r\n                    }\r\n                }\r\n                else if (namespacePosition === 'starts') {\r\n                    if (cls[i].indexOf(namespace) !== 0) {\r\n                        final.push(cls[i]);\r\n                    }\r\n                }\r\n            }\r\n            el.className = final.join(\" \");\r\n        }\r\n    },\r\n    firstWithBackgroundImage: function (node) {\r\n        if (!node) return false;\r\n        if (!!node.style.backgroundImage) return node;\r\n        var final = false;\r\n        mw.tools.foreachParents(node, function (loop) {\r\n            if (!!this.style.backgroundImage) {\r\n                mw.tools.stopLoop(loop);\r\n                final = this;\r\n            }\r\n        });\r\n        return final;\r\n    },\r\n\r\n    parentsOrCurrentOrderMatchOrOnlyFirstOrNone: function (node, arr) {\r\n        return !mw.tools.hasAnyOfClassesOnNodeOrParent(node, [arr[1]]) || mw.tools.parentsOrCurrentOrderMatchOrOnlyFirst(node, arr)\r\n    },\r\n    parentsOrCurrentOrderMatchOrOnlyFirst: function (node, arr) {\r\n        var curr = node;\r\n        while (curr && curr.classList) {\r\n            var h1 = mw.tools.hasClass(curr, arr[0]);\r\n            var h2 = mw.tools.hasClass(curr, arr[1]);\r\n            if (h1 && h2) {\r\n                return false;\r\n            }\r\n            else {\r\n                if (h1) {\r\n                    return true;\r\n                }\r\n                else if (h2) {\r\n                    return false;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    parentsOrCurrentOrderMatchOrOnlyFirstOrNone: function (node, arr) {\r\n        var curr = node;\r\n        while (curr && curr.classList) {\r\n            var h1 = mw.tools.hasClass(curr, arr[0]);\r\n            var h2 = mw.tools.hasClass(curr, arr[1]);\r\n            if (h1 && h2) {\r\n                return false;\r\n            }\r\n            else {\r\n                if (h1) {\r\n                    return true;\r\n                }\r\n                else if (h2) {\r\n                    return false;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return true;\r\n    },\r\n    parentsOrCurrentOrderMatch: function (node, arr) {\r\n        var curr = node,\r\n            match = {a: 0, b: 0},\r\n            count = 1,\r\n            hadA = false;\r\n        while (curr && curr.classList) {\r\n            count++;\r\n            var h1 = mw.tools.hasClass(curr, arr[0]);\r\n            var h2 = mw.tools.hasClass(curr, arr[1]);\r\n            if (h1 && h2) {\r\n                if (match.a > 0) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            else {\r\n                if (h1) {\r\n                    match.a = count;\r\n                    hadA = true;\r\n                }\r\n                else if (h2) {\r\n                    match.b = count;\r\n                }\r\n                if (match.b > match.a) {\r\n                    return hadA ? true : false;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    parentsOrCurrentOrderMatchOrNone:function(node, arr){\r\n        if(!node) return false;\r\n        var curr = node,\r\n            match = {a: 0, b: 0},\r\n            count = 1,\r\n            hadA = false;\r\n        while (curr && curr.classList) {\r\n            count++;\r\n            var h1 = mw.tools.hasClass(curr, arr[0]);\r\n            var h2 = mw.tools.hasClass(curr, arr[1]);\r\n            if (h1 && h2) {\r\n                if (match.a > 0) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            else {\r\n                if (h1) {\r\n                    match.a = count;\r\n                    hadA = true;\r\n                }\r\n                else if (h2) {\r\n                    match.b = count;\r\n                }\r\n                if (match.b > match.a) {\r\n                    return hadA ? true : false;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return match.a === 0 && match.b === 0;\r\n    },\r\n    parentsOrCurrentOrderMatchOrOnlyFirstOrBoth: function (node, arr) {\r\n        var curr = node,\r\n            has1 = false,\r\n            has2 = false;\r\n        while (curr && curr.classList) {\r\n            var h1 = mw.tools.hasClass(curr, arr[0]);\r\n            var h2 = mw.tools.hasClass(curr, arr[1]);\r\n            if (h1 && h2) {\r\n                return true;\r\n            }\r\n            else {\r\n                if (h1) {\r\n                    return true;\r\n                }\r\n                else if (h2) {\r\n                    return false;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    matchesAnyOnNodeOrParent: function (node, arr) {\r\n        var curr = node;\r\n        while (curr && curr.classList) {\r\n            var i = 0;\r\n            for (; i < arr.length; i++) {\r\n                if (mw.tools.matches(curr, arr[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    firstMatchesOnNodeOrParent: function (node, arr) {\r\n        if (!arr) return;\r\n        if (typeof arr === 'string') {\r\n            arr = [arr];\r\n        }\r\n        var curr = node;\r\n        while (curr && curr.classList) {\r\n            var i = 0;\r\n            for (; i < arr.length; i++) {\r\n                if (mw.tools.matches(curr, arr[i])) {\r\n                    return curr;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    lastMatchesOnNodeOrParent: function (node, arr) {\r\n        if (!arr) return;\r\n        if (typeof arr === 'string') {\r\n            arr = [arr];\r\n        }\r\n        var curr = node, result;\r\n        while (curr && curr.classList) {\r\n            var i = 0;\r\n            for (; i < arr.length; i++) {\r\n                if (mw.tools.matches(curr, arr[i])) {\r\n                    result = curr;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return result;\r\n    },\r\n    hasAnyOfClassesOnNodeOrParent: function (node, arr) {\r\n        var curr = node;\r\n        while (curr && curr.classList) {\r\n            var i = 0;\r\n            for (; i < arr.length; i++) {\r\n                if (mw.tools.hasClass(curr, arr[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    hasClass: function (classname, whattosearch) {\r\n        if (classname === null) {\r\n            return false;\r\n        }\r\n        if (typeof classname === 'string') {\r\n            return classname.split(' ').indexOf(whattosearch) > -1;\r\n        }\r\n        else if (typeof classname === 'object') {\r\n            return mw.tools.hasClass(classname.className, whattosearch);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    },\r\n    hasAllClasses: function (node, arr) {\r\n        if (!node) return;\r\n        var has = true;\r\n        var i = 0, nodec = node.className.trim().split(' ');\r\n        for (; i < arr.length; i++) {\r\n            if (nodec.indexOf(arr[i]) === -1) {\r\n                return false;\r\n            }\r\n        }\r\n        return has;\r\n    },\r\n    hasAnyOfClasses: function (node, arr) {\r\n        if (!node) return;\r\n        var i = 0, l = arr.length, cls = node.className;\r\n        for (; i < l; i++) {\r\n            if (mw.tools.hasClass(cls, arr[i])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n\r\n    hasParentsWithClass: function (el, cls) {\r\n        if (!el) return;\r\n        var curr = el.parentNode;\r\n        while (curr && curr.classList) {\r\n            if (mw.tools.hasClass(curr, cls)) {\r\n                return true;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    hasParentWithId: function (el, id) {\r\n        if (!el) return;\r\n        var curr = el.parentNode;\r\n        while (curr && curr.classList) {\r\n            if (curr.id === id) {\r\n                return true;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    hasChildrenWithTag: function (el, tag) {\r\n        tag = tag.toLowerCase();\r\n        var has = false;\r\n        mw.tools.foreachChildren(el, function (loop) {\r\n            if (this.nodeName.toLowerCase() === tag) {\r\n                has = true;\r\n                mw.tools.stopLoop(loop);\r\n            }\r\n        });\r\n        return has;\r\n    },\r\n    hasParentsWithTag: function (el, tag) {\r\n        if (!el || !tag) return;\r\n        tag = tag.toLowerCase();\r\n        var curr = el.parentNode;\r\n        while (curr && curr.classList) {\r\n            if (curr.nodeName.toLowerCase() === tag) {\r\n                return true;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    hasHeadingParent: function (el) {\r\n        if (!el) return;\r\n        var h = /^(h[1-6])$/i;\r\n        var curr = el.parentNode;\r\n        while (curr && curr.classList) {\r\n            if (h.test(curr.nodeName.toLowerCase())) {\r\n                return true;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    addClass: function (el, cls) {\r\n        if (!cls || !el) {\r\n            return false;\r\n        }\r\n        if (el.fn) {\r\n            el = el[0];\r\n            if (!el) {\r\n                return;\r\n            }\r\n        }\r\n        if (typeof cls === 'string') {\r\n            cls = cls.trim();\r\n        }\r\n        if (!el) return;\r\n        var arr = cls.split(\" \");\r\n        var i = 0;\r\n        if (arr.length > 1) {\r\n            for (; i < arr.length; i++) {\r\n                mw.tools.addClass(el, arr[i]);\r\n            }\r\n            return;\r\n        }\r\n        if (typeof el === 'object') {\r\n            if (el.classList) {\r\n                el.classList.add(cls);\r\n            }\r\n            else {\r\n                if (!mw.tools.hasClass(el.className, cls)) el.className += (' ' + cls);\r\n            }\r\n        }\r\n        if (typeof el === 'string') {\r\n            if (!mw.tools.hasClass(el, cls)) el += (' ' + cls);\r\n        }\r\n    },\r\n    removeClass: function (el, cls) {\r\n        if (typeof cls === 'string') {\r\n            cls = cls.trim();\r\n        }\r\n        if (!cls || !el) return;\r\n        if (el === null) {\r\n            return false;\r\n        }\r\n        if (el.fn) {\r\n            el = el[0];\r\n            if (!el) {\r\n                return;\r\n            }\r\n        }\r\n        if (typeof el === 'undefined') {\r\n            return false;\r\n        }\r\n        if (el.constructor === [].constructor) {\r\n            var i = 0, l = el.length;\r\n            for (; i < l; i++) {\r\n                mw.tools.removeClass(el[i], cls);\r\n            }\r\n            return;\r\n        }\r\n        if (typeof(cls) === 'object') {\r\n            var arr = cls;\r\n        } else {\r\n            var arr = cls.split(\" \");\r\n        }\r\n        var i = 0;\r\n        if (arr.length > 1) {\r\n            for (; i < arr.length; i++) {\r\n                mw.tools.removeClass(el, arr[i]);\r\n            }\r\n            return;\r\n        }\r\n        else if (!arr.length) {\r\n            return;\r\n        }\r\n        if (el.classList && cls) {\r\n            el.classList.remove(cls);\r\n        }\r\n        else {\r\n            if (mw.tools.hasClass(el.className, cls)) el.className = (el.className + ' ').replace(cls + ' ', '').replace(/\\s{2,}/g, ' ').trim();\r\n        }\r\n\r\n    },\r\n    isEventOnElement: function (event, node) {\r\n        if (event.target === node) {\r\n            return true;\r\n        }\r\n        mw.tools.foreachParents(event.target, function () {\r\n            if (event.target === node) {\r\n                return true;\r\n            }\r\n        });\r\n        return false;\r\n    },\r\n    isEventOnElements: function (event, array) {\r\n        var l = array.length, i = 0;\r\n        for (; i < l; i++) {\r\n            if (event.target === array[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        var isEventOnElements = false;\r\n        mw.tools.foreachParents(event.target, function () {\r\n            var l = array.length, i = 0;\r\n            for (; i < l; i++) {\r\n                if (event.target === array[i]) {\r\n                    isEventOnElements = true;\r\n                }\r\n            }\r\n        });\r\n        return isEventOnElements;\r\n    },\r\n    isEventOnClass: function (event, cls) {\r\n        if (mw.tools.hasClass(event.target, cls) || mw.tools.hasParentsWithClass(event.target, cls)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    firstChildWithClass: function (parent, cls) {\r\n        var toreturn;\r\n        mw.tools.foreachChildren(parent, function (loop) {\r\n            if (this.nodeType === 1 && mw.tools.hasClass(this, cls)) {\r\n                mw.tools.stopLoop(loop);\r\n                toreturn = this;\r\n            }\r\n        });\r\n        return toreturn;\r\n    },\r\n    firstChildWithTag: function (parent, tag) {\r\n        var toreturn;\r\n        var tag = tag.toLowerCase();\r\n        mw.tools.foreachChildren(parent, function (loop) {\r\n            if (this.nodeName.toLowerCase() === tag) {\r\n                toreturn = this;\r\n                mw.tools.stopLoop(loop);\r\n            }\r\n        });\r\n        return toreturn;\r\n    },\r\n    hasChildrenWithClass: function (node, cls) {\r\n        var final = false;\r\n        mw.tools.foreachChildren(node, function () {\r\n            if (mw.tools.hasClass(this.className, cls)) {\r\n                final = true;\r\n            }\r\n        });\r\n        return final;\r\n    },\r\n    parentsOrder: function (node, arr) {\r\n        var only_first = [];\r\n        var obj = {}, l = arr.length, i = 0, count = -1;\r\n        for (; i < l; i++) {\r\n            obj[arr[i]] = -1;\r\n        }\r\n        if (!node) return obj;\r\n\r\n        var curr = node.parentNode;\r\n        while (curr && curr.classList) {\r\n            count++;\r\n            var cls = curr.className;\r\n            i = 0;\r\n            for (; i < l; i++) {\r\n                if (mw.tools.hasClass(cls, arr[i]) && only_first.indexOf(arr[i]) === -1) {\r\n                    obj[arr[i]] = count;\r\n                    only_first.push(arr[i]);\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return obj;\r\n    },\r\n    parentsAndCurrentOrder: function (node, arr) {\r\n        var only_first = [];\r\n        var obj = {}, l = arr.length, i = 0, count = -1;\r\n        for (; i < l; i++) {\r\n            obj[arr[i]] = -1;\r\n        }\r\n        if (!node) return obj;\r\n\r\n        var curr = node;\r\n        while (curr && curr.classList) {\r\n            count++;\r\n            var cls = curr.className;\r\n            i = 0;\r\n            for (; i < l; i++) {\r\n                if (mw.tools.hasClass(cls, arr[i]) && only_first.indexOf(arr[i]) === -1) {\r\n                    obj[arr[i]] = count;\r\n                    only_first.push(arr[i]);\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return obj;\r\n    },\r\n    firstParentWithClass: function (el, cls) {\r\n        if (!el) return false;\r\n        var curr = el.parentNode;\r\n        while (curr && curr.classList) {\r\n            if (curr.classList.contains(cls)) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    firstParentOrCurrentWithClass: function (el, cls) {\r\n        if (!el) return false;\r\n        var curr = el;\r\n        while (curr && curr.classList) {\r\n            if (mw.tools.hasClass(curr, cls)) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    firstBlockLikeLevel: function (el) {\r\n        var blockLikes = ['TD', 'DIV', 'LI', 'DD', 'DT', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'MAIN', 'HEADER', 'P'];\r\n        while(el && el.classList) {\r\n            if(mw.tools.isBlockLevel(el) || blockLikes.indexOf(el.nodeName) !== -1 ) {\r\n                return el;\r\n            }\r\n            el = el.parentNode;\r\n        }\r\n    },\r\n    firstBlockLevel: function (el) {\r\n        while(el && el.classList) {\r\n            if(mw.tools.isBlockLevel(el)) {\r\n                return el;\r\n            }\r\n            el = el.parentNode;\r\n        }\r\n    },\r\n    firstNotInlineLevel: function (el) {\r\n        if(el.nodeType !== 1) {\r\n            el = el.parentNode\r\n        }\r\n        if(!el) {\r\n            return;\r\n        }\r\n        while(el && el.classList) {\r\n            if(!mw.tools.isInlineLevel(el)) {\r\n                return el;\r\n            }\r\n            el = el.parentNode;\r\n        }\r\n    },\r\n    firstParentOrCurrentWithId: function (el, id) {\r\n        if (!el) return false;\r\n        var curr = el;\r\n        while (curr && el.classList) {\r\n            if (curr.id === id) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    firstParentOrCurrentWithAllClasses: function (node, arr) {\r\n        if (!node) return false;\r\n        var curr = node;\r\n        while (curr && curr.classList) {\r\n            if (mw.tools.hasAllClasses(curr, arr)) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    firstParentOrCurrentWithAnyOfClasses: function (node, arr) {\r\n        if (!node) return false;\r\n        var curr = node;\r\n        while (curr && curr.classList) {\r\n            if (!curr) return false;\r\n            if (mw.tools.hasAnyOfClasses(curr, arr)) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    lastParentWithClass: function (el, cls) {\r\n        if (!el) return;\r\n        var _has = false;\r\n        var curr = el.parentNode;\r\n        while (curr && curr.classList) {\r\n            if (mw.tools.hasClass(curr, cls)) {\r\n                _has = curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return _has;\r\n    },\r\n    firstParentWithTag: function (el, tag) {\r\n        if (!el || !tag) return;\r\n        tag = typeof tag !== 'string' ? tag : [tag];\r\n        var curr = el.parentNode;\r\n        while (curr && curr.classList) {\r\n            if (tag.indexOf(curr.nodeName.toLowerCase()) !== -1) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    firstParentOrCurrentWithTag: function (el, tag) {\r\n        if (!el || !tag) return;\r\n        tag = typeof tag !== 'string' ? tag : [tag];\r\n        var curr = el;\r\n        while (curr && curr.classList) {\r\n            if (tag.indexOf(curr.nodeName.toLowerCase()) !== -1) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    generateSelectorForNode: function (node, strict) {\r\n         if(typeof strict === 'undefined') {\r\n            strict = true;\r\n        }\r\n        if (node === null || node.nodeType === 3) {\r\n            return false;\r\n        }\r\n        if (node.nodeName === 'BODY') {\r\n            return 'body';\r\n        }\r\n        if(mw.tools.hasClass(node, 'edit')){\r\n            var field = node.getAttribute('field');\r\n            var rel = node.getAttribute('rel');\r\n            if(field && rel){\r\n                return '.edit[field=\"'+field+'\"][rel=\"'+rel+'\"]';\r\n            }\r\n        }\r\n        if(strict && !node.id) {\r\n            if(node && node.classList && !node.classList.contains('edit') && mw.tools.isEditable(node)) {\r\n                node.id = mw.id('mw-element-');\r\n            }\r\n        }\r\n        if (!!node.id /*&& node.id.indexOf('element_') === -1*/) {\r\n            return '#' + node.id;\r\n        }\r\n\r\n        var filter = function(item) {\r\n            return item !== 'changed'\r\n                && item !== 'module-over'\r\n                && item !== 'mw-bg-mask'\r\n                && item !== 'element-current';\r\n        };\r\n        if(node.className && typeof node.className.trim === 'function') {\r\n            var _final = node.className.trim() ? '.' + node.className.trim().split(' ').filter(filter).join('.') : node.nodeName.toLocaleLowerCase();\r\n        } else {\r\n            var _final = node.nodeName.toLocaleLowerCase();\r\n        }\r\n\r\n        _final = _final.replace(/\\.\\./g, '.');\r\n        mw.tools.foreachParents(node, function (loop) {\r\n            if (this.id /*&& node.id.indexOf('element_') === -1*/) {\r\n                _final = '#' + this.id + ' > ' + _final;\r\n                mw.tools.stopLoop(loop);\r\n                return false;\r\n            }\r\n            var n;\r\n            if (this && this.className && typeof this.className.trim === 'function') {\r\n                n = this.nodeName.toLocaleLowerCase() + '.' + this.className.trim().split(' ').join('.');\r\n            }\r\n            else {\r\n                n = this.nodeName.toLocaleLowerCase();\r\n            }\r\n            _final = n + ' > ' + _final;\r\n        });\r\n        return _final\r\n            .replace(/.changed/g, '')\r\n            .replace(/.element-current/g, '')\r\n            .replace(/.module-over/g, '');\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/tools/domhelpers.js?");

/***/ }),

/***/ "./resources/assets/tools/element.js":
/*!*******************************************!*\
  !*** ./resources/assets/tools/element.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n(function(){\r\n\r\n    var MWElement = function(options, root){\r\n        var scope = this;\r\n\r\n\r\n        this.toggle = function () {\r\n            this.css('display', this.css('display') === 'none' ? 'block' : 'none');\r\n        };\r\n\r\n        this._active = function () {\r\n            return this.nodes[this.nodes.length - 1];\r\n        };\r\n\r\n        this.getDocument = function () {\r\n            return this._active().ownerDocument;\r\n        }\r\n\r\n        this.getWindow = function () {\r\n            return this.getDocument().defaultView;;\r\n        }\r\n\r\n        this.get = function(selector, scope){\r\n            this.nodes = (scope || document).querySelectorAll(selector);\r\n        };\r\n\r\n        this.each = function(cb){\r\n            if(this.nodes) {\r\n                for (var i = 0; i < this.nodes.length; i++) {\r\n                    cb.call(this.nodes[i], i);\r\n                }\r\n            } else if(this.node) {\r\n                cb.call(this.node, 0);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.scrollTop = function (val) {\r\n            if(typeof val === 'undefined') {\r\n                return this._active().scrollTop;\r\n            }\r\n            return this.each(function(){\r\n                this.scrollTop = val;\r\n            });\r\n        };\r\n\r\n        this.encapsulate = function () {\r\n\r\n        };\r\n\r\n        this.create = function() {\r\n            var _options = {};\r\n            if(this.settings.is) {\r\n                _options.is = this.settings.is;\r\n            }\r\n\r\n            var el = this.document.createElement(this.settings.tag, _options);\r\n            this.node = el;\r\n\r\n            /*if (this.settings.encapsulate) {\r\n                var mode = this.settings.encapsulate === true ? 'open' : this.settings.encapsulate;\r\n                el.attachShadow({\r\n                    mode: mode\r\n                });\r\n            }*/\r\n\r\n            this.nodes = [el];\r\n            if (this.settings.content) {\r\n                if (Array.isArray(this.settings.content)) {\r\n                    this.settings.content.forEach(function (el){\r\n                        if(Object.getPrototypeOf(el) === Object.prototype) {\r\n                            scope.append(new MWElement(el));\r\n                        } else {\r\n                            scope.append(el);\r\n                        }\r\n                    });\r\n                } else if(this.settings.content instanceof MWElement) {\r\n                    this.append(this.settings.content);\r\n                } else if(typeof this.settings.content === 'object') {\r\n                    this.append(new MWElement(this.settings.content));\r\n                } else if(typeof this.settings.content === 'string') {\r\n                    this.get(0).innerHTML = (this.settings.content);\r\n                }\r\n            }\r\n            this.$node = $(el);\r\n        };\r\n\r\n        this._specialProps = function(dt, val){\r\n            if(dt === 'tooltip') {\r\n                this.node.dataset[dt] = val;\r\n                return true;\r\n            }\r\n        };\r\n\r\n        this.setProps = function(){\r\n            for(var i in this.settings.props) {\r\n                if (i === 'dataset') {\r\n                    for(var dt in this.settings.props[i]) {\r\n                        this.node.dataset[dt] = this.settings.props[i][dt];\r\n                    }\r\n                } else if (i === 'style') {\r\n                    for(var st in this.settings.props[i]) {\r\n                        this.node.style[st] = this.settings.props[i][st];\r\n                    }\r\n                } else {\r\n                    var val = this.settings.props[i];\r\n                    if(!this._specialProps(i, val)) {\r\n                        this.node[i] = val;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.__ = {\r\n            cssNumber: [\r\n                'animationIterationCount',\r\n                'columnCount',\r\n                'fillOpacity',\r\n                'flexGrow',\r\n                'flexShrink',\r\n                'fontWeight',\r\n                'gridArea',\r\n                'gridColumn',\r\n                'gridColumnEnd',\r\n                'gridColumnStart',\r\n                'gridRow',\r\n                'gridRowEnd',\r\n                'gridRowStart',\r\n                'lineHeight',\r\n                'opacity',\r\n                'order',\r\n                'orphans',\r\n                'widows',\r\n                'zIndex',\r\n                'zoom'\r\n            ]\r\n        };\r\n\r\n        this._normalizeCSSValue = function (prop, val) {\r\n            if(typeof val === 'number') {\r\n                if(this.__.cssNumber.indexOf(prop) === -1) {\r\n                    val = val + 'px';\r\n                }\r\n            }\r\n            return val;\r\n        };\r\n\r\n        this.css = function(css, val){\r\n            if(typeof css === 'string') {\r\n                if(typeof val !== 'undefined'){\r\n                    var nval =  this._normalizeCSSValue(css, val);\r\n                    this.each(function (){\r\n                        this.style[css] = nval;\r\n                    });\r\n                } else {\r\n                    return this.document.defaultView.getComputedStyle(this.node)[css];\r\n                }\r\n            }\r\n            if(typeof css === 'object') {\r\n                for (var i in css) {\r\n\r\n                    this.each(function (){\r\n                        this.style[i] = scope._normalizeCSSValue(i, css[i]);\r\n                    });\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.dataset = function(prop, val){\r\n            if(typeof val === 'undefined') {\r\n                return this._active()[prop];\r\n            }\r\n            this.each(function (){\r\n                this.dataset[prop] = val;\r\n            });\r\n            return this;\r\n        };\r\n\r\n        this.attr = function(prop, val){\r\n            if(typeof val === 'undefined') {\r\n                return this._active()[prop];\r\n            }\r\n            this.each(function (){\r\n                this.setAttribute(prop, val);\r\n            });\r\n            return this;\r\n        };\r\n\r\n        this.focus = function(){\r\n            this._active().focus()\r\n            return this;\r\n        };\r\n\r\n        this.val = function(val){\r\n            if(typeof val === 'undefined') {\r\n                return this._active().value;\r\n            }\r\n            this.each(function (){\r\n                this.value = val;\r\n            });\r\n            return this;\r\n        };\r\n\r\n        this.prop = function(prop, val){\r\n            var active = this._active();\r\n            if(!active) {\r\n                return;\r\n            }\r\n            if(typeof val === 'undefined') {\r\n                return active[prop];\r\n            }\r\n            if(active[prop] !== val){\r\n                active[prop] = val;\r\n                this.trigger('propChange', [prop, val]);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.hide = function () {\r\n            return this.each(function (){\r\n                this.style.display = 'none';\r\n            });\r\n        };\r\n        this.show = function () {\r\n            return this.each(function (){\r\n                this.style.display = '';\r\n            });\r\n        };\r\n\r\n        this.find = function (sel) {\r\n            var el = mw.element('#r' + new Date().getTime());\r\n            this.each(function (){\r\n                var all = this.querySelectorAll(sel);\r\n                for(var i = 0; i < all.length; i++) {\r\n                    if(el.nodes.indexOf(all[i]) === -1) {\r\n                        el.nodes.push(all[i]);\r\n                    }\r\n                }\r\n            });\r\n            return el;\r\n        };\r\n\r\n        var prepareClasses = function () {\r\n            var classes = [];\r\n            Array.from(arguments).forEach(function (arg){\r\n                Array.from(arg).forEach(function (arg){\r\n                    var arr;\r\n                    if(Array.isArray(arg)) {\r\n                        arr = arg;\r\n                    } else {\r\n                        arr = arg.split(' ');\r\n                    }\r\n                    arr.forEach(function (cls){\r\n                        cls = cls.trim();\r\n                        if(!!cls) {\r\n                            classes.push(cls);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n            return classes;\r\n        }\r\n\r\n        this.hasClass = function (c) {\r\n            var active = this._active();\r\n            if(active) {\r\n                return active.classList.contains(c);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        this.addClass = function () {\r\n            var classes = prepareClasses(arguments)\r\n            return this.each(function (){\r\n                var node = this;\r\n                classes.forEach(function (cls){\r\n                    node.classList.add(cls);\r\n                });\r\n            });\r\n        };\r\n\r\n        this.toggleClass = function () {\r\n            var classes = prepareClasses(arguments)\r\n            return this.each(function (){\r\n                var node = this;\r\n                classes.forEach(function (cls){\r\n                    node.classList.toggle(cls);\r\n                });\r\n            });\r\n        };\r\n\r\n        this.removeClass = function () {\r\n            var classes = prepareClasses(arguments)\r\n            return this.each(function (){\r\n                var node = this;\r\n                classes.forEach(function (cls){\r\n                    node.classList.remove(cls);\r\n                });\r\n            });\r\n        };\r\n\r\n        this.remove = function () {\r\n            return this.each(function (){\r\n                this.remove();\r\n            });\r\n        };\r\n\r\n        this.empty = function () {\r\n            return this.html('');\r\n        };\r\n\r\n        this.html = function (val) {\r\n            if (typeof val === 'undefined') {\r\n                return this._active().innerHTML;\r\n            }\r\n            return this.each(function (){\r\n                this.innerHTML = val;\r\n            });\r\n        };\r\n        this.text = function (val, clean) {\r\n            if(typeof val === 'undefined') {\r\n                return this.node.textContent;\r\n            }\r\n            if(typeof clean === 'undefined') {\r\n                clean = true;\r\n            }\r\n            if (clean) {\r\n                val = this.document.createRange().createContextualFragment(val).textContent;\r\n            }\r\n            // this.node.innerHTML = val;\r\n            return this.each(function (){\r\n                this.textContent = val;\r\n            });\r\n        };\r\n\r\n        this._asdom = function (obj) {\r\n            if (typeof obj === 'string') {\r\n                return this.document.createRange().createContextualFragment(obj);\r\n            } else if (obj.node){\r\n                return obj.node;\r\n            }\r\n            else if (obj.nodes){\r\n                return obj.nodes[obj.nodes.length - 1];\r\n            } else {\r\n                return obj;\r\n            }\r\n        };\r\n\r\n        this.offset = function () {\r\n            if(this._active()) {\r\n\r\n                var win = this.getWindow();\r\n                var rect = this._active().getBoundingClientRect();\r\n                rect.offsetTop = rect.top + win.pageYOffset;\r\n                rect.offsetBottom = rect.bottom + win.pageYOffset;\r\n                rect.offsetLeft = rect.left + win.pageXOffset;\r\n                return rect;\r\n            }\r\n        };\r\n\r\n\r\n        this.width = function (val) {\r\n            if(val) {\r\n                return this.css('width', val);\r\n            }\r\n            return this._active().offsetWidth;\r\n        };\r\n\r\n        this.height = function (val) {\r\n            if(val) {\r\n                return this.css('height', val);\r\n            }\r\n            return this._active().offsetHeight;\r\n        };\r\n\r\n        this.parent = function () {\r\n            return mw.element(this._active().parentNode);\r\n        };\r\n\r\n        this.next = function () {\r\n            return mw.element(this._active().nextElementSibling);\r\n        };\r\n        this.prev = function () {\r\n            return mw.element(this._active().previousElementSibling);\r\n        };\r\n\r\n\r\n        this.parents = function (selector) {\r\n            selector = selector || '*';\r\n            var el = this._active();\r\n            var curr = el.parentElement;\r\n            var res = mw.element();\r\n            res.nodes = []\r\n            while (curr) {\r\n                if(curr.matches(selector)) {\r\n                    res.nodes.push(curr);\r\n                }\r\n                curr = curr.parentElement;\r\n            }\r\n            return res;\r\n        };\r\n        this.append = function (el) {\r\n            if (el) {\r\n                this.each(function (){\r\n                    this.append(scope._asdom(el));\r\n                });\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.before = function (el) {\r\n            if (el) {\r\n                this.each(function (){\r\n                    if(this.parentNode){\r\n                        this.parentNode.insertBefore(scope._asdom(el), this);\r\n                    }\r\n                });\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.after = function (el) {\r\n            if (el) {\r\n                this.each(function (){\r\n                    if(this.parentNode) {\r\n                        this.parentNode.insertBefore(scope._asdom(el), this.nextSibling);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        this.prepend = function (el) {\r\n            if (el) {\r\n                this.each(function (){\r\n                    this.prepend(scope._asdom(el));\r\n                });\r\n            }\r\n            return this;\r\n        };\r\n        this._disabled = false;\r\n\r\n        Object.defineProperty(this, \"disabled\", {\r\n            get : function () { return this._disabled; },\r\n            set : function (value) {\r\n                this._disabled = value;\r\n                this.node.disabled = this._disabled;\r\n                this.node.dataset.disabled = this._disabled;\r\n            }\r\n        });\r\n\r\n        this.trigger = function(event, data){\r\n            data = data || {};\r\n            this.each(function (){\r\n                this.dispatchEvent(new CustomEvent(event, {\r\n                    detail: data,\r\n                    cancelable: true,\r\n                    bubbles: true\r\n                }));\r\n                if(scope._on[event]) {\r\n                    scope._on[event].forEach(function(cb){\r\n                        cb.call(this, event, data);\r\n                    });\r\n                }\r\n            });\r\n            return this;\r\n        };\r\n\r\n        this.get = function (i) {\r\n            return this.nodes[i];\r\n        };\r\n\r\n        this._on = {};\r\n        this.on = function(events, cb){\r\n            events = events.trim().split(' ');\r\n            events.forEach(function (ev) {\r\n                if(!scope._on[ev]) {  scope._on[ev] = []; }\r\n                scope._on[ev].push(cb);\r\n                scope.each(function (){\r\n                    /*this.addEventListener(ev, function(e) {\r\n                        cb.call(scope, e, e.detail, this);\r\n                    }, false);*/\r\n                    this.addEventListener(ev, cb, false);\r\n                });\r\n            });\r\n            return this;\r\n        };\r\n        this.init = function(){\r\n            this.nodes = [];\r\n            var _root = root || document;\r\n             if(_root.get) {\r\n                _root = _root.get(0);\r\n            }\r\n            this.root = _root;\r\n            this._asElement = false;\r\n            this.document =  (this.root.body ? this.root : this.root.ownerDocument);\r\n\r\n            options = options || {};\r\n\r\n            if(options.nodeName && options.nodeType) {\r\n                this.nodes.push(options);\r\n                this.node = (options);\r\n                options = {};\r\n                this._asElement = true;\r\n            } else if(typeof options === 'string') {\r\n                if(options.indexOf('<') === -1) {\r\n                    this.nodes = Array.prototype.slice.call(this.root.querySelectorAll(options));\r\n                    options = {};\r\n                    this._asElement = true;\r\n                } else {\r\n                    var el = this._asdom(options);\r\n\r\n                    this.nodes = [].slice.call(el.children);\r\n                    this._asElement = true;\r\n                }\r\n            }\r\n\r\n            options = options || {};\r\n\r\n            var defaults = {\r\n                tag: 'div',\r\n                props: {}\r\n            };\r\n\r\n            this.settings = $.extend({}, defaults, options);\r\n\r\n            if(this._asElement) return;\r\n            this.create();\r\n            this.setProps();\r\n         };\r\n        this.init();\r\n    };\r\n    mw.element = function(options, root){\r\n        return new MWElement(options, root);\r\n    };\r\n    mw.element.module = function (name, func) {\r\n        MWElement.prototype[name] = func;\r\n    };\r\n\r\n})();\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/tools/element.js?");

/***/ }),

/***/ "./resources/assets/tools/iframe-auto-height.js":
/*!******************************************************!*\
  !*** ./resources/assets/tools/iframe-auto-height.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   iframeAutoHeight: () => (/* binding */ iframeAutoHeight)\n/* harmony export */ });\nconst iframeAutoHeight = function(frame, opt){\r\n\r\n    opt = opt || {};\r\n    opt.maxHeightWindowScroll = opt.maxHeightWindowScroll || null;\r\n\r\n    frame = mw.$(frame)[0];\r\n    if(!frame) return;\r\n\r\n\r\n    if(frame.dataset.autoHeight === 'false') return;\r\n\r\n    var _detector = document.createElement('div');\r\n    _detector.className = 'mw-iframe-auto-height-detector';\r\n    _detector.id = mw.id();\r\n\r\n    var insertDetector = function() {\r\n        if(frame.contentWindow && frame.contentWindow.document && frame.contentWindow.document.body){\r\n            var det = frame.contentWindow.document.querySelector('.mw-iframe-auto-height-detector');\r\n            if(!det){\r\n                frame.contentWindow.document.body.appendChild(_detector);\r\n            } else if(det !== frame.contentWindow.document.body.lastChild){\r\n                frame.contentWindow.document.body.appendChild(det);\r\n            }\r\n            if(frame.contentWindow.mw) {\r\n                frame.contentWindow.mw._iframeDetector = _detector;\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    setTimeout(function(){\r\n        insertDetector();\r\n    }, 100);\r\n    frame.style.minHeight = 0 + 'px';\r\n    if (opt.maxHeightWindowScroll) {\r\n        frame.style.maxHeight = opt.maxHeightWindowScroll;\r\n        frame.style.overflow = 'auto';\r\n        frame.scrolling=\"auto\"\r\n    } else {\r\n        frame.scrolling=\"auto\";\r\n        frame.style.overflow = 'hidden';\r\n    }\r\n    mw.$(frame).on('load resize', function(){\r\n\r\n        if(!mw.tools.canAccessIFrame(frame)) {\r\n            console.log('Iframe can not be accessed.', frame);\r\n            return;\r\n        }\r\n        if(!frame.contentWindow.document.body){\r\n            return;\r\n        }\r\n        if(!!frame.contentWindow.document.querySelector('.mw-iframe-auto-height-detector')){\r\n            return;\r\n        }\r\n        insertDetector();\r\n        if (opt.maxHeightWindowScroll) {\r\n            frame.style.maxHeight = opt.maxHeightWindowScroll;\r\n            frame.style.overflow = 'auto';\r\n            frame.scrolling=\"auto\";\r\n        } else {\r\n            frame.scrolling=\"auto\";\r\n            frame.style.overflow = 'hidden';\r\n        }\r\n    });\r\n    var offset = function () {\r\n        return _detector.getBoundingClientRect().top;\r\n    };\r\n    frame._intPause = false;\r\n    frame._int = setInterval(function(){\r\n        if(!frame._intPause && frame.parentNode && frame.contentWindow && frame.contentWindow.document.body){\r\n            var calc = offset() + _detector.offsetHeight;\r\n            frame._currHeight = frame._currHeight || 0;\r\n            if(calc && calc !== frame._currHeight ){\r\n                frame._currHeight = calc;\r\n                frame.style.height = Math.max(calc) + 'px';\r\n                var scroll = Math.max(frame.contentWindow.document.documentElement.scrollHeight, frame.contentWindow.document.body.scrollHeight);\r\n                if(scroll > frame._currHeight) {\r\n                    frame._currHeight = scroll;\r\n                    frame.style.height = scroll + 'px';\r\n                }\r\n                mw.$(frame).trigger('bodyResize');\r\n            }\r\n        } else if(!frame.parentElement){\r\n            clearInterval(frame._int);\r\n        }\r\n        else {\r\n            //clearInterval(frame._int);\r\n        }\r\n    }, 77);\r\n\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/tools/iframe-auto-height.js?");

/***/ }),

/***/ "./resources/assets/tools/loading.js":
/*!*******************************************!*\
  !*** ./resources/assets/tools/loading.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Loading: () => (/* binding */ Loading),\n/* harmony export */   Progress: () => (/* binding */ Progress)\n/* harmony export */ });\n\r\n\r\n const progressDefaults = {\r\n    skin: 'mw-ui-progress',\r\n    action: `${mw.lang('Loading')}...`,\r\n    progress: 0\r\n};\r\n\r\nconst Progress = function (obj) {\r\n    if (typeof obj.element === 'string') {\r\n        obj.element = mw.$(obj.element)[0];\r\n    }\r\n    if (obj.element === null || !obj.element) return false;\r\n    if (obj.element.querySelector('.mw-ui-progress-bar')) {\r\n        obj.element.progressOptions.show()\r\n        return obj.element.progressOptions;\r\n    }\r\n    obj = $.extend({}, progressDefaults, obj);\r\n    if(obj.progress > 100 ) {\r\n        obj.progress = 100;\r\n    }\r\n    if(obj.progress < 0 ) {\r\n        obj.progress = 0;\r\n    }\r\n    var progress = document.createElement('div');\r\n    progress.className = obj.skin;\r\n    progress.innerHTML = '<div class=\"mw-ui-progress-bar\" style=\"width: ' + obj.progress + '%;\"></div><div class=\"mw-ui-progress-info\">' + obj.action + '</div><span class=\"mw-ui-progress-percent\">'+obj.progress+'%</span>';\r\n    progress.progressInfo = obj;\r\n    var options = {\r\n        progress: progress,\r\n        show: function () {\r\n            this.progress.style.display = '';\r\n        },\r\n        hide: function () {\r\n            this.progress.style.display = 'none';\r\n        },\r\n        remove: function () {\r\n            progress.progressInfo.element.progressOptions = undefined;\r\n            mw.$(this.progress).remove();\r\n        },\r\n        set: function (v, action) {\r\n            if (v > 100) {\r\n                v = 100;\r\n            }\r\n            if (v < 0) {\r\n                v = 0;\r\n            }\r\n            action = action || this.progress.progressInfo.action;\r\n            mw.$('.mw-ui-progress-bar', this.progress).css('width', v + '%');\r\n            mw.$('.mw-ui-progress-percent', this.progress).html(v + '%');\r\n            progress.progressInfo.element.progressOptions.show();\r\n        }\r\n    };\r\n    progress.progressOptions = obj.element.progressOptions = options;\r\n    obj.element.appendChild(progress);\r\n    return options;\r\n};\r\n\r\nconst Loading = function (element, progress, speed) {\r\n    /*\r\n\r\n     progress:number 0 - 100,\r\n     speed:string, -> 'slow', 'normal, 'fast'\r\n\r\n     mw.tools.loading(true) -> slowly animates to 95% on body\r\n     mw.tools.loading(false) -> fast animates to 100% on body\r\n\r\n     */\r\n    function set(el, progress, speed) {\r\n        speed = speed || 'normal';\r\n        mw.tools.removeClass(el, 'mw-progress-slow');\r\n        mw.tools.removeClass(el, 'mw-progress-normal');\r\n        mw.tools.removeClass(el, 'mw-progress-fast');\r\n        mw.tools.addClass(el, 'mw-progress-' + speed);\r\n        element.__loadingTime = setTimeout(function () {\r\n            el.querySelector('.mw-progress-index').style.width = progress + '%';\r\n        }, 10)\r\n\r\n    }\r\n\r\n\r\n    if (typeof element === 'boolean') {\r\n        progress = !!element;\r\n        element = document.body;\r\n    }\r\n    if (typeof element === 'number') {\r\n        progress = element;\r\n        element = document.body;\r\n    }\r\n    if (element === document || element === document.documentElement) {\r\n        element = document.body;\r\n    }\r\n    element = mw.$(element)[0]\r\n    if (element === null || !element) return false;\r\n    if (element.__loadingTime) {\r\n        clearTimeout(element.__loadingTime)\r\n    }\r\n\r\n\r\n    var isLoading = mw.tools.hasClass(element, 'mw-loading');\r\n    var el = element.querySelector('.mw-progress');\r\n\r\n    if (!el) {\r\n        el = document.createElement('div');\r\n        el.className = 'mw-progress';\r\n        el.innerHTML = '<div class=\"mw-progress-index\"></div>';\r\n        if (element === document.body) el.style.position = 'fixed';\r\n        element.appendChild(el);\r\n    }\r\n    if (progress === 'hide') {\r\n        el.remove();\r\n        return;\r\n    }\r\n    var pos = getComputedStyle(element).position;\r\n    if (pos === 'static') {\r\n        element.style.position = 'relative';\r\n    }\r\n    if (progress) {\r\n        if (progress === true) {\r\n            set(el, 95, speed || 'slow')\r\n        }\r\n        else if (typeof progress === 'number') {\r\n            progress = progress <= 100 ? progress : 100;\r\n            progress = progress >= 0 ? progress : 0;\r\n            set(el, progress, speed)\r\n        }\r\n    }\r\n    else {\r\n        if (el) {\r\n            set(el, 100, speed || 'fast')\r\n        }\r\n        element.__loadingTime = setTimeout(function () {\r\n            mw.$(element).removeClass('mw-loading-defaults mw-loading');\r\n            mw.$(el).remove()\r\n        }, 700)\r\n    }\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/tools/loading.js?");

/***/ }),

/***/ "./resources/assets/tools/spinner.js":
/*!*******************************************!*\
  !*** ./resources/assets/tools/spinner.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nmw.Spinner = function(options){\r\n    if(!options || !options.element){\r\n        return;\r\n    }\r\n    this.$element = $(options.element);\r\n    if(!this.$element.length) return;\r\n    this.element = this.$element[0];\r\n    if(this.element._mwSpinner){\r\n        return this.element._mwSpinner;\r\n    }\r\n    this.element._mwSpinner = this;\r\n    this.options = options;\r\n\r\n    this.options.size = this.options.size || 20;\r\n    this.options.color = this.options.color || '#4592ff';\r\n    this.options.insertMode = this.options.insertMode || 'append';\r\n\r\n    this.color = function(val){\r\n        if(!val) {\r\n            return this.options.color;\r\n        }\r\n        this.options.color = val;\r\n        this.$spinner.find('circle').css({\r\n            stroke: this.options.color\r\n        });\r\n    };\r\n\r\n    this.size = function(val){\r\n        if(!val) {\r\n            return this.options.size;\r\n        }\r\n        this.options.size = parseFloat(val);\r\n        this.$spinner.css({\r\n            width: this.options.size,\r\n            height: this.options.size\r\n        });\r\n    };\r\n\r\n    this.setState = function(state) {\r\n        mw.tools.classNamespaceDelete(this.$spinner[0], 'mw-spinner-state-');\r\n        mw.tools.addClass(this.$spinner[0], 'mw-spinner-state-' + state);\r\n    }\r\n\r\n    this.create = function(){\r\n        this.$spinner = $('<div class=\"mw-spinner mw-spinner-mode-' + this.options.insertMode + '\" style=\"display: none;\"><svg viewBox=\"0 0 50 50\"><circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle><path class=\"mw-spinner-checkmark-check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/></svg></div>');\r\n        this.size(this.options.size);\r\n        this.color(this.options.color);\r\n        this.$element[this.options.insertMode](this.$spinner);\r\n        this.show();\r\n        return this;\r\n    };\r\n\r\n    this.show = function(){\r\n        this.$spinner.show();\r\n        this.$element.addClass('has-mw-spinner');\r\n        if(this.options.decorate) {\r\n            this.$element.addClass('mw-spinner-decorate');\r\n        }\r\n        return this;\r\n    };\r\n\r\n    this.hide = function(){\r\n        this.$spinner.hide();\r\n        this.$element.removeClass('has-mw-spinner');\r\n        if(this.options.decorate) {\r\n            this.$element.removeClass('mw-spinner-decorate');\r\n        }\r\n        return this;\r\n    };\r\n\r\n    this.remove = function(){\r\n        this.hide();\r\n        this.$spinner.remove();\r\n        delete this.element._mwSpinner;\r\n    };\r\n\r\n    this.create().show();\r\n\r\n};\r\n\r\nmw.spinner = function(options){\r\n    return new mw.Spinner(options);\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/tools/spinner.js?");

/***/ }),

/***/ "./resources/assets/tools/storage.js":
/*!*******************************************!*\
  !*** ./resources/assets/tools/storage.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n\nmw.storage = {\n    init: function () {\n\n        try {\n            if (window.location.href.indexOf('data:') === 0 || !('localStorage' in window) || /* IE Security configurations */ typeof window['localStorage'] === 'undefined') return false;\n            var lsmw = localStorage.getItem(\"mw\");\n            if (typeof lsmw === 'undefined' || lsmw === null) {\n                lsmw = localStorage.setItem(\"mw\", \"{}\");\n            }\n            this.change(\"INIT\");\n            return lsmw;\n\n        } catch (error) {\n            console.log(error);\n        }\n\n\n    },\n    identity: function () {\n        if(!mw._storageIdentity) {\n            mw._storageIdentity = 'mw-' + Date.now();\n        }\n        return mw._storageIdentity;\n    },\n    rootIdentity: function () {\n        if(!mw.top()._storageIdentity) {\n            mw.top()._storageIdentity = 'mw-' + Date.now();\n        }\n        return mw.top()._storageIdentity;\n    },\n    set: function (key, val) {\n        try {\n            if (!('localStorage' in window)) return false;\n            var curr = JSON.parse(localStorage.getItem(\"mw\"));\n            curr[key] = val;\n            var a = localStorage.setItem(\"mw\", JSON.stringify(curr));\n            mw.storage.change(\"CALL\", key, val);\n            return a;\n        } catch (error) {\n            console.log(error);\n        }\n\n    },\n    get: function (key) {\n        try {\n            if (!('localStorage' in window)) return false;\n            var curr = JSON.parse(localStorage.getItem(\"mw\"));\n            return curr[key];\n        } catch (error) {\n            console.log(error);\n        }\n    },\n    _keys: {},\n    change: function (key, callback, other) {\n        if (!('localStorage' in window)) return false;\n        if (key === 'INIT' && 'addEventListener' in document) {\n            addEventListener('storage', function (e) {\n                if (e.key === 'mw') {\n\n\n\n\n\n\n                    var _new = JSON.parse(e.newValue || {});\n                    var _old = JSON.parse(e.oldValue || {});\n                    var diff = mw.tools.getDiff(_new, _old);\n                    for (var t in diff) {\n                        if (t in mw.storage._keys) {\n                            var i = 0, l = mw.storage._keys[t].length;\n                            for (; i < l; i++) {\n                                mw.storage._keys[t][i].call(undefined, diff[t]);\n                            }\n                        }\n                    }\n                }\n            }, false);\n        }\n        else if (key === 'CALL') {\n            if (!document.hidden && typeof mw.storage._keys[callback] !== 'undefined') {\n                var i = 0, l = mw.storage._keys[callback].length;\n                for (; i < l; i++) {\n                    mw.storage._keys[callback][i].call(other);\n                }\n            }\n        }\n        else {\n            if (key in mw.storage._keys) {\n                mw.storage._keys[key].push(callback);\n            }\n            else {\n                mw.storage._keys[key] = [callback];\n            }\n        }\n    }\n};\nmw.storage.init();\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/tools/storage.js?");

/***/ }),

/***/ "./resources/assets/tools/tabs.js":
/*!****************************************!*\
  !*** ./resources/assets/tools/tabs.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\nmw.tabs = function (obj, element, model) {\r\n    /*\r\n    *\r\n    *  {\r\n    *       linkable: 'link' | 'auto',\r\n    *       nav: string\r\n    *       tabs: string\r\n    *       onclick: function\r\n    *  }\r\n    *\r\n    * */\r\n    element = element || document.body;\r\n    model = typeof model === 'undefined' ? true : model;\r\n    if (model) {\r\n        model = {\r\n            set: function (i) {\r\n                if (typeof i === 'number') {\r\n                    if (!$(obj.nav).eq(i).hasClass(active)) {\r\n                        mw.$(obj.nav).removeClass(active);\r\n                        mw.$(obj.nav).eq(i).addClass(active);\r\n                        mw.$(obj.tabs).hide().eq(i).show();\r\n                    }\r\n                }\r\n            },\r\n            setLastClicked: function () {\r\n                if ((typeof(obj.lastClickedTabIndex) != 'undefined') && obj.lastClickedTabIndex !== null) {\r\n                    this.set(obj.lastClickedTabIndex);\r\n                }\r\n            },\r\n            unset: function (i) {\r\n                if (typeof i === 'number') {\r\n                    if ($(obj.nav).eq(i).hasClass(active)) {\r\n                        mw.$(obj.nav).eq(i).removeClass(active);\r\n                        mw.$(obj.tabs).hide().eq(i).hide();\r\n                    }\r\n                }\r\n            },\r\n            toggle: function (i) {\r\n                if (typeof i === 'number') {\r\n                    if ($(obj.nav).eq(i).hasClass(active)) {\r\n                        this.unset(i);\r\n                    }\r\n                    else {\r\n                        this.set(i);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    var active = obj.activeNav || obj.activeClass || \"active active-info\",\r\n        firstActive = 0;\r\n\r\n    obj.lastClickedTabIndex = null;\r\n\r\n    if (obj.linkable) {\r\n\r\n\r\n        if (obj.linkable === 'link') {\r\n\r\n        } else if (typeof obj.linkable === 'string') {\r\n            $(window).on('load hashchange', function () {\r\n                var param = mw.url.windowHashParam(obj.linkable);\r\n                if(param) {\r\n                    var el = $('[data-' + obj.linkable + '=\"' + param + '\"]');\r\n                }\r\n            });\r\n            $(obj.nav).each(function (i) {\r\n                this.dataset.linkable = obj.linkable + '-' + i;\r\n                (function (linkable, i) {\r\n                    this.onclick = function () {\r\n                        mw.url.windowHashParam(linkable, i);\r\n                    };\r\n                })(obj.linkable, i);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    mw.$(obj.nav).on('click', function (e) {\r\n        if (obj.linkable) {\r\n            if (obj.linkable === 'link') {\r\n\r\n            }\r\n        } else {\r\n            if (!$(this).hasClass(active)) {\r\n                var i = mw.tools.index(this, mw.$(obj.nav).get(), mw.$(obj.nav)[0].nodeName);\r\n                mw.$(obj.nav).removeClass(active);\r\n                mw.$(this).addClass(active);\r\n                mw.$(obj.tabs).hide().eq(i).show();\r\n                obj.lastClickedTabIndex = i;\r\n                if (typeof obj.onclick === 'function') {\r\n                    obj.onclick.call(this, mw.$(obj.tabs).eq(i)[0], e, i);\r\n                }\r\n            }\r\n            else {\r\n                if (obj.toggle === true) {\r\n                    mw.$(this).removeClass(active);\r\n                    mw.$(obj.tabs).hide();\r\n                    if (typeof obj.onclick === 'function') {\r\n                        var i = mw.tools.index(this, element, obj.nav);\r\n                        obj.onclick.call(this, mw.$(obj.tabs).eq(i)[0], e, i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return false;\r\n    }).each(function (i) {\r\n        if (mw.tools.hasClass(this, active)) {\r\n            firstActive = i;\r\n        }\r\n    });\r\n    model.set(firstActive);\r\n    return model;\r\n};\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/tools/tabs.js?");

/***/ }),

/***/ "./resources/assets/widgets/icon-picker.js":
/*!*************************************************!*\
  !*** ./resources/assets/widgets/icon-picker.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IconPicker: () => (/* binding */ IconPicker)\n/* harmony export */ });\n/* harmony import */ var _core_base_class_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/base-class.js */ \"./resources/assets/core/base-class.js\");\n\r\n\r\n\r\nclass IconPicker extends _core_base_class_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    selectIcon(targetElementSelector) {\r\n        var target = $(targetElementSelector)[0];\r\n        mw.iconLoader().init();\r\n        var picker = mw.iconPicker({iconOptions: false});\r\n        picker.target = document.createElement('i');\r\n        picker.on('select', function (data) {\r\n            data.render();\r\n            target.value = picker.target.outerHTML\r\n            var event = new Event('input');\r\n            target.dispatchEvent(event);\r\n\r\n            picker.dialog('hide');\r\n        });\r\n        picker.dialog();\r\n    }\r\n\r\n    pickIcon(targetElementSelector, options = {}) {\r\n        const defaults = {\r\n            iconOptions: {\r\n                color: true,\r\n                size: true,\r\n                reset: true,\r\n                imageReplace: true\r\n            }\r\n        };\r\n        var target = $(targetElementSelector)[0];\r\n        const settings = Object.assign({}, defaults, options, {target});\r\n\r\n        mw.iconLoader().init();\r\n        var picker = mw.iconPicker(settings);\r\n\r\n\r\n\r\n        const promise = () => new Promise(resolve => {\r\n            picker.target = target;\r\n            picker.on('select', function (data) {\r\n                data.render();\r\n                picker.dialog('hide');\r\n                resolve(data)\r\n            });\r\n            picker.dialog();\r\n        })\r\n\r\n        return {\r\n            promise, target, picker\r\n        };\r\n\r\n\r\n\r\n    }\r\n\r\n    removeIcon(targetElementSelector) {\r\n        var target = $(targetElementSelector)[0];\r\n        target.value = '';\r\n        var event = new Event('input');\r\n        target.dispatchEvent(event);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/widgets/icon-picker.js?");

/***/ }),

/***/ "./resources/assets/widgets/tree.js":
/*!******************************************!*\
  !*** ./resources/assets/widgets/tree.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nmw.widget.tree = function (target, opt, mode) {\n\n\n    if(typeof target === \"string\") {\n        target = document.querySelector(target);\n    }\n    if(!target) {\n        return;\n    }\n    if(!mode) {\n        mode = 'treeTags';\n    }\n    if(!opt) {\n        opt = {};\n    }\n\n\n\n    mw.spinner({element: target, size: 32, decorate: true});\n\n    var tree;\n\n    var params = opt.params, options = opt.options || {};\n\n    var url = mw.settings.api_url + 'content/get_admin_js_tree_json';\n    var treeEl = document.createElement('div');\n    treeEl.className = 'mw--global-admin-tree';\n    if(options.id) {\n        treeEl.id = 'mw--parent-' + options.id;\n    }\n\n\n\n    if(!params) {\n        params = {};\n    }\n\n    if(!options) {\n        options = {};\n    }\n\n\n    var optionsDefaults;\n\n    function _getTree() {\n        return tree.tree || tree;\n    }\n\n    if(mode === 'tree') {\n        optionsDefaults = {\n            element: treeEl,\n            sortable: false,\n            selectable: true,\n            singleSelect: true,\n            searchInput: true\n        };\n    } else if(mode === 'treeTags') {\n        var tags = mw.element();\n\n        optionsDefaults = {\n            selectable: true,\n            multiPageSelect: false,\n            tagsHolder: tags.get(0),\n            treeHolder: treeEl,\n            color: 'primary',\n            size: 'sm',\n            outline: true,\n            saveState: false,\n            searchInput: true,\n            on: {\n                selectionChange: function () {\n                //    mw.askusertostay = true;\n\n                }\n            }\n        };\n\n        target.appendChild(tags.get(0));\n    }\n\n    target.appendChild(treeEl);\n\n    var _serialize = function(obj) {\n        var str = [];\n        for (var p in obj){\n            if (obj.hasOwnProperty(p)) {\n                str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n            }\n        }\n        return str.join(\"&\");\n    };\n\n    var treeSettings = Object.assign({}, optionsDefaults, options);\n\n    url = url + '?' + _serialize(params);\n\n    return new Promise(function (resolve){\n        $.get(url, function (data) {\n            treeSettings.data = data;\n            tree = new mw[mode](treeSettings);\n\n            var res =  {\n                tree: mode === 'tree' ? tree : tree.tree,\n                tags: mode === 'tree' ? null : tree.tags,\n                treeTags: mode === 'tree' ? null : tree\n            };\n            resolve(res);\n            mw.spinner({element: target}).remove();\n        });\n    });\n};\n\n\n//# sourceURL=webpack://microweber-frontend-assets/./resources/assets/widgets/tree.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/js/admin.js");
/******/ 	
/******/ })()
;