

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

if(!defined('INI_SYSTEM_CHECK_DISABLED')){
    define("INI_SYSTEM_CHECK_DISABLED", ini_get('disable_functions'));
}
if (!strstr(INI_SYSTEM_CHECK_DISABLED, 'ini_set')) {
    ini_set("memory_limit", "512M");
    ini_set("set_time_limit", 0);
}

if (!strstr(INI_SYSTEM_CHECK_DISABLED, 'date_default_timezone_set')) {
    date_default_timezone_set('UTC');
}





if (isset($_REQUEST['format']) && $_REQUEST['format'] == "json") {

    $json = [];
    header('Content-Type: application/json');

    if (isset($_REQUEST['startSession']) && $_REQUEST['startSession'] == 1) {
        $update = new StandaloneUpdateExecutor();
        $update->setInstallVersion(isset($_REQUEST['installVersion']) ? $_REQUEST['installVersion'] : 'latest');
        $json['start'] = $update->startSession();
    }

    if (isset($_REQUEST['startUpdating']) && $_REQUEST['startUpdating'] == 1) {
        $update = new StandaloneUpdateExecutor();
        $json['updating'] = $update->startUpdating();
    }

    if (isset($_REQUEST['unzippApp']) && $_REQUEST['unzippApp']) {
        $update = new StandaloneUpdateExecutor();
        $json['unzipping'] = $update->unzippApp();
    }


    if (isset($_REQUEST['unzipAppExecStep'])) {
        $update = new StandaloneUpdateExecutor();
        $json['unzipping'] = $update->unzipAppExecStep(intval($_REQUEST['unzipAppExecStep']));
    }


    if (isset($_REQUEST['unzippAppGetNumberOfStepsNeeded']) && $_REQUEST['unzippAppGetNumberOfStepsNeeded'] == 1) {
        $update = new StandaloneUpdateExecutor();
        $json['unzipping'] = $update->unzippAppGetNumberOfStepsNeeded();
    }

    if (isset($_REQUEST['replaceFiles']) && $_REQUEST['replaceFiles'] == 1) {
        $update = new StandaloneUpdateExecutor();
        $json['replacing'] = $update->replaceFiles();
    }
    if (isset($_REQUEST['replaceFilesPrepareStepsNeeded']) && $_REQUEST['replaceFilesPrepareStepsNeeded'] == 1) {
        $update = new StandaloneUpdateExecutor();
        $json['replace_steps'] = $update->replaceFilesPrepareStepsNeeded();
    }
    if (isset($_REQUEST['replaceFilesExecStep'])) {
        $update = new StandaloneUpdateExecutor();
        $json['replace_step_result'] = $update->replaceFilesExecStep(intval($_REQUEST['replaceFilesExecStep']));
    }
    if (isset($_REQUEST['replaceFilesExecCleanupStep'])) {
        $update = new StandaloneUpdateExecutor();
        $json['clean_step_result'] = $update->replaceFilesExecCleanupStep();
    }

    if (isset($_REQUEST['isStarted']) && $_REQUEST['isStarted'] == 1) {
        $update = new StandaloneUpdateExecutor();
        $json['started'] = $update->isStarted();
    }

    if (isset($_REQUEST['getLogfile']) && $_REQUEST['getLogfile'] == 1) {
        $update = new StandaloneUpdateExecutor();
        $json['logfile'] = $update->getLogfile();
    }

    print(json_encode($json));
    exit;
}
